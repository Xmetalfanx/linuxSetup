export default rehypeRemark
export type Options = import('hast-util-to-mdast').Options
export type Context = import('hast-util-to-mdast').Context
export type H = import('hast-util-to-mdast').H
export type Handle = import('hast-util-to-mdast').Handle
export type HastRoot = import('hast').Root
export type MdastRoot = import('mdast').Root
export type Processor = import('unified').Processor<any, any, any, any>
/**
 * Plugin to bridge or mutate to rehype.
 *
 * If a destination is given, runs the destination with the new mdast
 * tree (bridge-mode).
 * Without destination, returns the mdast tree: further plugins run on that
 * tree (mutate-mode).
 *
 * @param destination
 *   Optional unified processor.
 * @param options
 *   Options passed to `hast-util-to-mdast`.
 */
declare const rehypeRemark: import('unified').Plugin<
  [Processor, Options?],
  HastRoot
> &
  import('unified').Plugin<[Options?] | void[], HastRoot, MdastRoot>
