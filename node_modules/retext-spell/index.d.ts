/**
 * Plugin to check spelling (with `nspell`).
 *
 * @type {import('unified').Plugin<[Options|Dictionary], Root>}
 */
export default function retextSpell(
  options?: Dictionary | Options
):
  | void
  | import('unified').Transformer<import('nlcst').Root, import('nlcst').Root>
export type Root = import('nlcst').Root
export type Sentence = import('nlcst').Sentence
export type VFile = import('vfile').VFile
export type Dictionary = (
  onload: (error: Error | null | undefined, result?: unknown) => void
) => void
export type Options = {
  /**
   * A dictionary (`Function`).
   * Result of importing one of the dictionaries in `wooorm/dictionaries`.
   */
  dictionary: Dictionary
  /**
   * Personal dictionary (`string` or a `Buffer` in UTF-8).
   */
  personal?: string | Uint8Array | undefined
  /**
   * List of words to ignore.
   */
  ignore?: string[] | undefined
  /**
   * Whether to ignore literal words.
   */
  ignoreLiteral?: boolean | undefined
  /**
   * Whether to ignore “words” that contain only digits or are times, such as `123456` or `2:41pm`.
   */
  ignoreDigits?: boolean | undefined
  /**
   * Deal with apostrophes.
   * Whether to swap smart apostrophes (`’`) with straight apostrophes (`'`)
   * before checking spelling.
   * Dictionaries typically support this, but this option can be used if not.
   */
  normalizeApostrophes?: boolean | undefined
  /**
   * Number of unique words to suggest for.
   * By default, up to thirty words are suggested for.
   * Further misspellings are still warned about, but without suggestions.
   * Increasing this number significantly impacts performance.
   */
  max?: number | undefined
}
export type Config = {
  ignore: Array<string>
  ignoreLiteral: boolean
  ignoreDigits: boolean
  normalizeApostrophes: boolean
  checker: any
  cache: Record<string, Array<string>>
  count: number
  max: number
}
