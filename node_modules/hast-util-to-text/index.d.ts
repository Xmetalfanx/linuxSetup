/**
 * Implementation of the `innerText` getter:
 * <https://html.spec.whatwg.org/#the-innertext-idl-attribute>
 * Note that we act as if `node` is being rendered, and as if weâ€™re a
 * CSS-supporting user agent.
 *
 * @param {HastNode} node
 * @returns {string}
 */
export function toText(node: HastNode): string
export type TestFunctionAnything = import('hast-util-is-element').TestFunctionAnything
export type HastChild = import('hast').Parent['children'][number]
export type HastText = import('hast').Text
export type HastComment = import('hast').Comment
export type HastRoot = import('hast').Root
export type HastElement = import('hast').Element
export type HastProperties = import('hast').Properties
export type HastNode = HastChild | HastRoot
export type HastParent = HastRoot | HastElement
export type Whitespace = 'normal' | 'pre' | 'nowrap' | 'pre-wrap'
export type BreakValue = boolean
export type BreakNumber = 1 | 2
export type BreakForce = '\n'
export type BreakBefore = BreakValue | BreakNumber
export type BreakAfter = BreakValue | BreakNumber | BreakForce
export type CollectionOptions = {
  whitespace: Whitespace
  breakBefore: BreakBefore
  breakAfter: BreakAfter
}
