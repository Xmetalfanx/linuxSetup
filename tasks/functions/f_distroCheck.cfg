specificChecks= . "$rootdir"/tasks/functions/specificDistroCheck.cfg 
$specificCheckss

###############################################################
# These are basic now and could be in a single function though as I add more specific checks for different spins, some of these will fill out more 


function archCheck 
{
  if [ "${id}" == 'arch' ]; then 
    distroBase="arch"
  fi
}


function opensuseCheck 
{
  if [ "${id}" == 'opensuse' ]; then 
    distroBase="suse"
  fi

}

function solusCheck 
{
  if [[ -f /etc/solus-release || "${id}" == 'solus' ]]; then 
  {
    distroBase="solus"
  }
  fi

}




################################################
function osreleaseInfo
{
  
  # The grep looks for that line in question inside of the /etc/os-release file 
  # The first sed removes the Var AND the equal sign AND the first double quote
  # The second sed strips the double quote from the end

  osrelease="cat /etc/os-release"

  # Remove any quotes that may appear in the results
  removeQuote="sed s/\"//g "


  name=($($osrelease | grep ^NAME= | sed 's/NAME=//g' | $removeQuote))
  idlike=($($osrelease | grep ^ID_LIKE= | sed 's/ID_LIKE=//g' | $removeQuote))
  id=($($osrelease | grep ^ID= | sed 's/ID=//g' | $removeQuote ))
  versionid=($($osrelease | grep ^VERSION_ID= | sed 's/VERSION_ID=\"//g'  | $removeQuote))
  version=($($osrelease| grep ^VERSION= | sed s/VERSION=//g  | $removeQuote))
  ubuntuName=($($osrelease| grep ^UBUNTU_CODENAME=  | $removeQuote))


  #echo "Tests below - This will NOT be staying ... I NEED TO test what is in the variables"
  #echo -e "$idlike"
  #echo -e "$id" 
  #echo -e "$versionid"
  #echo -e "$version"
  #echo -e "$name"

  #userPrompt

}
#######################################################################

function completeDistroCheck
{
  
  # Get info 
  osreleaseInfo

  ## Issue I see is how do i make sure (say it detects arch) the other checks are NOT ran since there is no point then.   Maybe have an if-then check here to see "If distroBase null" .. if so, go on with the next check, IF distroBase is NOT null then exit and go on to the next step as the distrobase is known at that point 

  echo "osreleaseInfo ran, now about to pass to distro check functions "
  userPrompt

  archCheck
  fedoraCheck
  opensuseCheck 
  solusCheck 
  ubuntuCheck 

  echo "Back from userCheck functions for each distro "
  userPrompt

}


########################################################
function mainDisplayDistroInfo 
{
  clear
  echo -e "The base of your distro, appears to be: ${distroBase} "
  
  echo -e "Your version, appears to be: " $versionid

  # For Space
  echo 
  echo 
}


################################################################
## Not really sure what this fuction does but i am keeping it - just in case, for now 
function stripName
{


	strippedName="${prettyname#"PRETTY_NAME="}"

  # remove quotations AND periods
  finalStrippedName=`echo "$strippedName" | sed 's/\"//g;s/\.//g' `

  echo "$finalStrippedName"

  userPrompt

}


## Test from a post on Github
### lsb_release -ds | sed 's/^\"//g;s/\"$//g'
