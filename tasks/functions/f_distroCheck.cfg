## The purprose of the "support" functions is to A) Check if the distro is X (so say zypper doesn't try to run in Ubuntu... ) AND the support flag (variable..) is set to yes ... so if the distro is END OF LIFE, the function will not run 

specificChecks= . "$rootdir"/tasks/functions/f_specificDistroChecks.cfg
$specificChecks


################################################
# Gets main info 

function osreleaseInfo
{
  
  # The grep looks for that line in question inside of the /etc/os-release file 
  # The first sed removes the Var AND the equal sign AND the first double quote
  # The second sed strips the double quote from the end

  # Remove any quotes that may appear in the results
  removeQuote="sed s/\"//g "

  name=`cat /etc/os-release | grep ^NAME= | sed s/^NAME=//g | $removeQuote`
  idlike=`cat /etc/os-release  | grep ^ID_LIKE= | sed 's/ID_LIKE=//g' | $removeQuote`
  id=`cat /etc/os-release  | grep ^ID= | sed 's/ID=//g' | $removeQuote`
  versionid=`cat /etc/os-release | grep VERSION_ID= | sed 's/VERSION_ID=//g'  | $removeQuote`
  version=`cat /etc/os-release | grep ^VERSION= | sed 's/VERSION=//g'  | $removeQuote`
  
  # Consider this to the Ubuntu specific check function
  ubuntuName=`cat /etc/os-release | grep ^UBUNTU_CODENAME= | sed 's/UBUNTU_CODENAME=//g' | $removeQuote`

  
  #echo "Tests below - This will NOT be staying ... I NEED TO test what is in the variables"
  #echo -e "idlike:\t\t $idlike"
  #echo -e "id:\t\t $id" 
  #echo -e "versionid:\t $versionid"
  #echo -e "version:\t $version"
  #echo -e "name:\t\t $name"
  #echo -e "ubuntuName:\t $ubuntuName"

  #userPrompt

}

################################################################

function checkSupportStatus
{

  echo -e "Inside Checksupport function, Supported Variable is: $supported "
  

  ## This is for any distro
  if [ "$supported" == 'yes' ]; then
  {
    echo -e "The version of Linux you are currently on, IS still supported"
    echo
    echo 
    echo -e "The End of your distro/version's support is: \t\t $EOL"
  }
  else
  {
    echo -e "The version of Linux you are currently on, is no longer supported"
    echo 
    echo
  }
  fi 

}


function checkUbuntuLTS
{
  
  # if the detected versions is 14.04 or 16.04 ... either of the current LTS versions
    if [ "$ubuntuLTS" == 'yes' ]; then
    {
      echo -e "You are Currently on a Long Term Support Version of Ubuntu "
    }
    fi
  
}


###############################################################

function completeDistroCheck
{
  
  # Get info 
  osreleaseInfo

  
  ## Issue I see is how do i make sure (say it detects arch) the other checks are NOT ran since there is no point then.   Maybe have an if-then check here to see "If distroBase null" .. if so, go on with the next check, IF distroBase is NOT null then exit and go on to the next step as the distrobase is known at that point 

  archCheck
  fedoraCheck
  openSuseCheck 
  solusCheck 
  ubuntuCheck 

}


########################################################
function mainDisplayDistroInfo 
{
  
  echo -e "The base of your distro, appears to be: \t\t\t $distroBase "
  echo -e "The Distro (This can be a guess for now) you seem to be on is: \t $id"
  echo -e "Your version, appears to be: \t\t\t\t\t $versionid" 


  # For Space
  echo 
  echo 
}


################################################################
## Not really sure what this fuction does but i am keeping it - just in case, for now 
function stripName
{

	strippedName="${prettyname#"PRETTY_NAME="}"

  # remove quotations AND periods

  ## Commenting out, for debugging 
  # finalStrippedName=`echo "$strippedName" | sed 's/\"//g;s/\.//g' `

  echo "$finalStrippedName"

  userPrompt

}


## Test from a post on Github
### lsb_release -ds | sed 's/^\"//g;s/\"$//g'


