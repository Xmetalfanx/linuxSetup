distroVersion="$(cat /etc/os-release | grep PRETTY_NAME)"


# The need for this in a separate .cfg file is a 100% test right now
function checkDistro
{
    osrelease="$(grep 'ID_LIKE' /etc/os-release)"

    distro=${osrelease#"ID_LIKE="}

    ubuntuName=${osrelease#"UBUNTU_CODENAME="}


		## Idea: I am not sure if this will be too many functions, but perhaps in each if clause
		## put a link to the functions to get more specific results using "PRETTY_NAME"
		## THAT WAY I could narrow it down the distro to say "Leap 42.1 vs Leap 42.2" ..
		## I could in that example make one PacmanRepo Function and based on the info in PRETTY_NAME..
		## only the URL would change vs having different lines for each version of SUSE that are
		## BASICALLY the same exact line.

     if [ "${distro}" == 'ubuntu' ]; then
          distro=Ubuntu
     elif [ "${distro}" == 'fedora' ]; then
          distro=Fedora
     elif [ "${distro}" == 'opennsuse' ]; then
          distro=Opensuse
     elif [ "${distro}" == 'arch' ]; then
        distro=Arch
     else
        echo "Tarball download and installs coming soon"
    fi

}


################################################################
function stripName
{

      ## This function's point is to get PRETTY_NAME
			prettyname="$(grep 'PRETTY_NAME' /etc/os-release)"

			strippedName="${prettyname#"PRETTY_NAME="}"

      # remove quotations AND periods
      finalStrippedName=`echo "$strippedName" | sed 's/\"//g;s/\.//g' `

      echo "$finalStrippedName"

      userPrompt

}


## Test from a post on Github
### lsb_release -ds | sed 's/^\"//g;s/\"$//g'

function mockDistroSpecificFunction
{

    ## Here CheckDistro is run already, in if statement conditions in that function
    ## stripName is called and in these functions (this one) I need to use "$noPeriodName"

    # What I hope to get info wise is "trusty" vs "xenial" versus (?) 16.10

    # The POINT is with that I can make a single line to add X Y or Z and based on the output of this function
    # just things will change

    # The IDEA is that that instead of having different lines for all three releases ... just have one line and the
    # variable or URL will change based on this output (of this function)... SHOULD be simplier in the long run

}

################################################################
# Another IDEA to check distro based on


#Find out which package manager is in use

elif [ "$(command -v pacman)" ]; then Install_Pacman
elif [ "$(command -v zypper)" ]; then Install_Zypper
else
  echo "Unknown package manager"
  echo "Install the following packages:"

  #exit 1
fi

######

IF

function guessDistro
{

    If [$(command -v apt) || $(command -v apt-get) || $(command -v aptitude)]; then
      ## Maybe do another test but its safe to assume its Ubuntu or Debian based

    elif [ $(command -v dnf) || $(command -v yum) || $(-f /etc/fedora-release)]
      ## IF YUM ... display message about distro POSSIBLY being out of date ..

    elif  [$(command -v pacman) || $(command -v yaourt) ]


    elif [$(-f /etc/SuSE-release) || $(command -v zypper)]

}


#Release Files in /etc (from Unix.com)

#Novell SuSE---> /etc/SuSE-release
#Red Hat--->/etc/redhat-release, /etc/redhat_version
#Old Debian--->/etc/debian_release, /etc/debian_version

#New Debian--->/etc/os-release
