distroVersion="$(cat /etc/os-release | grep PRETTY_NAME)"


function checkDistro
{
    osrelease="$(grep 'ID_LIKE' /etc/os-release)"

    distroBase=${osrelease#"ID_LIKE="}
    distro=${osrelease#"ID="}

    ubuntuName=${osrelease#"UBUNTU_CODENAME="}

}

# function checkDistroRemove no longer needed as I think just some way of capitalizing the first letter of the name would do the exact same thing 

################################################################
# Another IDEA to check distro based on the package manager 

### This all is probably not needed for the way i decided to do things, but I will leave it for now

function guessDistro
{

    # https://stackoverflow.com/questions/592620/check-if-a-program-exists-from-a-bash-script may be really helpful


    if [[$(command -v apt) || $(command -v apt-get) || $(command -v aptitude)]]; then
      ## Maybe do another test but its safe to assume its Ubuntu or Debian based

      distroBase="ubuntu"


      ### A Check for which version needs to go here

      break


    elif [ [ $(command -v dnf) ] || [ $(command -v yum) ] || [ -e "/etc/fedora-release" ] ]; then
      ## IF YUM ... display message about distro POSSIBLY being out of date ..

      distroBase="redhat"
      distro="fedora"

      break


    # Check for characteristics of Arch Linux
    elif [[$(command -v pacman) || $(command -v yaourt) ]]; then
      distroBase="arch"

      break

    # Check for OpenSuse
    elif [[$(-f /etc/SuSE-release) || $(command -v zypper)]]; then
      distroBase="opensuse"

      break

    else
      echo -e "Can not Determine distro"

   fi

}

## Most Likely no longer Needed
function packageManagerTest
{

      if [[$(command -v apt) || $(command -v apt-get) || $(command -v aptitude)]]; then
        ## Maybe do another test but its safe to assume its Ubuntu or Debian based

        distroBase="ubuntu"

        break


      elif [ [ $(command -v dnf) ] || [ $(command -v yum) ] ]; then
        ## IF YUM ... display message about distro POSSIBLY being out of date ..

        distroBase="redhat"
        distro="fedora"

        break


      # Check for characteristics of Arch Linux
      elif [[$(command -v pacman) || $(command -v yaourt) ]]; then
        distroBase="arch"

        break

      # Check for OpenSuse
      elif [ $(command -v zypper) ]; then
        distroBase="opensuse"

        break

      else
        echo -e "Can not Determine distro"

      fi


}

################################################################
function stripName
{

      ## This function's point is to get PRETTY_NAME
			prettyname="$(grep 'PRETTY_NAME' /etc/os-release)"

			strippedName="${prettyname#"PRETTY_NAME="}"

      # remove quotations AND periods
      finalStrippedName=`echo "$strippedName" | sed 's/\"//g;s/\.//g' `

      echo "$finalStrippedName"

      userPrompt

}


## Test from a post on Github
### lsb_release -ds | sed 's/^\"//g;s/\"$//g'
