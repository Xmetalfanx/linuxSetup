distroVersion="$(cat /etc/os-release | grep PRETTY_NAME)"


function osreleaseInfo
{
    osrelease="$(cat /etc/os-release)"

    idlike=${osrelease#"ID_LIKE="}
    id=${osrelease#"ID="}
    versionid=${osrelease#"VERSION_ID="}
    version=${osrelease#"VERSION="}

    ubuntuName=${osrelease#"UBUNTU_CODENAME="}



    ## I need to run checks based on this info 

}

function mainDisplayDistroInfo 
{
  echo "Distrobase of your distro appears to be: " $id
  echo "Your version (this doesn't always display info), appears to be: " $versionid


}

################################
function completeDistroCheck
{
  
  # Pass to idCheck
  idCheck

}

function idCheck
{
  if [ "${id}" == 'arch' ]; then
    distroBase="arch"

  elif [ "${id}" == 'fedora' ]; then
    distroBase="fedora"

  elif [ "${id}" == 'opennsuse' ]; then
    distroBase="suse"       

  elif [ "${id}" == 'ubuntu' ]; then
    distroBase="ubuntu"


  else
    echo "FILLER TEXT FOR NOW ... "
  fi


}


## NOTE TO SELF: is this really needed here? ... the idea was to detect the SPECIFIC VERSION OF the distro
function fedoraCheck
{
  echo "Fedora Check Filler"


}


function openSuseCheck
{
  ## Check for branch here 
   
  ### name for TW is - name="openSUSE Tumbleweed" 

  echo "opensuse Check filler"

}

function ubuntuCheck
{

  ## Example versionid="17.10"

  echo "ubuntuCheck Filler" 

}



################################################################
function stripName
{

      ## This function's point is to get PRETTY_NAME
			prettyname="$(grep 'PRETTY_NAME' /etc/os-release)"

			strippedName="${prettyname#"PRETTY_NAME="}"

      # remove quotations AND periods
      finalStrippedName=`echo "$strippedName" | sed 's/\"//g;s/\.//g' `

      echo "$finalStrippedName"

      userPrompt

}


## Test from a post on Github
### lsb_release -ds | sed 's/^\"//g;s/\"$//g'
