ubuntuMultimediaSoftware= . "$rootdir"/tasks/functions/ubuntu/f_ubuntuMultimediaSoftware.cfg
$ubuntuMultimediaSoftware


##########################################################################################

function InstallElementaryAdditions
{
 	## Check os-release file for if id="elementary" ... to make sure this is the distro detected
 	if [ "$id" == 'elementary' ]; then

		# Update System
		clear
		ubuntuUpdate

		echo "Installing PPA Support, Gnome Tweak Tools, GDebi, and Synaptic"
		userPrompt

	    installApp software-common-properties synaptic gnome-tweak-tool gdebi

	else
		echo "It doesn't appear you are on ElementaryOS"
		exit
	fi

}

function addUMateDevPPA
{
	# Put check to make sure this is done only on Ubuntu mate

	clear
    echo -p "Adding the Ubuntu Mate Dev(lopment) PPA"

    addPPA ppa:ubuntu-mate-dev/xenial-mate
    clear

    # NOTE TO SELF: shouldn't this change to the universalUpdate (name?) function?
    ubuntuUpdate

}


######################################################################
## Office related items here

function PPALatestLibreOffice
{
	PPAName="Libre Office"
	PPAProgramName="libreoffice"
	PPALink=ppa:libreoffice/ppa
	
	echo "Installing Libre Offices latest version via PPA "
	addPPAFunction $PPAName $PPALink

	installApp $PPAProgramName

 
}

##################################################################

function gpartedFromSource
{
	echo -e "Make sure you have source packages enabled or this wil l not work"
	echo -e "I am seeing if i can add something to do this automatically"
	userPrompt


	## Reference: http://sourcedigit.com/19790-install-use-gparted-partition-manager-on-ubuntu-linux/

	clear
	## removed git install code since to get these scripts, git would already be installed
	echo -e "Installing build dependencies for Gparted and other needed packages "
	installApp build-dep gparted

	echo -e "Getting source"
	git clone git://git.gnome.org/gparted
	cd gparted


	clear
	sudo add-apt-repository ppa:rvm/smplayer
	echo -e "Building Gparted from git source"

	./autogen.sh
	make

	clear
	echo -e "Installing Gparted that was just compiled"
	sudo make install


	## Code to Add Menu Entry
	sudo touch /usr/share/applications/gparted.desktop

}

function ukuuInstall
{
	## Trusty (14.04) to Bionic (18.04) apparently

	PPAName="UKUU Ubuntu-based Kernel Upgrader" 
	PPAProgramName=ukuu
	PPALink=ppa:teejee2008/ppa


	clear
	echo -e "About to install UKUU - A GUI App to install mainline Ubuntu Kernels"
	echo -e "DISCLAIMER: MANY ... if not all Canonical, as well as the support for Ubuntu flavors "
	
	echo -e ", such as ElementaryOS, the Kubuntu Team, and the Linux Mint team (just to name a few at random)"
	echo -e "DO NOT SUPPORT installing kernels this way.   Please note that IF something borks up, the support team for those distros will not support you .. at least for the most part. "

	userPrompt

	## Idea ... add a case statement/if-then statement, here ... allowing a user to exit without installing, just going back to the prior menu they were on (the UniversalSoftware menu probably )

	addPPAFunction $PPAName $PPALink

	installApp $PPAProgramName

}


############################################################################
## Ubuntu (Unity) specific

function unsettings
{
	PPAName=UNSettings
	PPAProgramName=unsettings
	PPALink=ppa:diesch/testing

	addPPAFunction $PPAName $PPALink

	installApp $PPAProgramName

}

function unitytweakdaily
{
	# HOLD ON .. isn't this in default repos since say 16.04 ?

	PPAName="Unity Tweak Tool" 
	PPAProgramName=unity-tweak-tool
	PPALink=ppa:freyja-dev/unity-tweak-tool-daily

	addPPAFunction $PPAName $PPALink
	
	installApp $PPAProgramName 
}


### Setup Git on ubuntu based repos.  This may be a newer version then is in repos
function setupGitUbuntu
{
  addPPA ppa:git-core/ppa

  ## Change the update lines, down the line
  sudo apt-get update


  installApp build-essential libssl-dev libcurl4-gnutls-dev libexpat1-dev gettext unzip git-all

}
