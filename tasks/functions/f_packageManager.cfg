########################################
## Functions for OpenSuse
########################################
function suseAddRepo
{
      #Adding Repos in OpenSuse
      sudo zypper addrepo -f $1
}

function suseAddRepoName
{
      ## $1 is the Repo Name
      ## $2 is the Repo "URL"

      #Adding Repos in OpenSuse
      sudo zypper addrepo -f -n $1 $2
}

function suseInstall
{
    # How to install in Suse
    sudo zypper install $1 $2 $3 $4 $5 $6 $7 $8 $9 $10 $11
}

function suseUpdate
{
		clear
    echo "Updating OpenSuse - Note: you may have to scroll down and agree to the agreement for this to work"
    userPrompt
    sudo zypper up
		echo "Update Complete"
    clear
}

function ympInstall
{
	OCICLI $1 $2 $3 %4

}

########################################
## Functions for Ubuntu Based Distros
########################################

function addPPA
{
  sudo apt-add-repository -y $1 $2 $3 $4 $5 $6 $7 $8
}

function aptInstall
{
      ## Idea: put in loop to see if 'apt' works and IF NOT use apt-get

      sudo apt install $1 $2 $3 $4 $5 $6 $7 $8 -y

      ## Or is the -y after "install" ?
}

function aptUpdate
{
  clear
  echo -e "Refreshing Repo List"
  userPrompt
  sudo apt update
  clear
  echo "Repos Refreshed"
}

function aptUpgrade
{
  aptUpdate

  clear
  echo "Upgrading (with a prompt to the user)"
  userPrompt

  sudo apt upgrade
  clear
  echo -e "System Updated \n\n"

}

########################################
## Functions for Arch
########################################
function archPacInstall
{
    sudo pacman -S --noconfirm $1 $2 $3 $4 $5 $6 $7 $8

}
function archPacUpdate
{
  sudo pacman -Syy
}

function archAURInstall
{
    # Yaourt? ... Packer? ... I need a script to install that
	echo -e "To Fill in Later"
}

########################################
## Functions for Fedora
########################################
function fedoraUpdate
{
  sudo dnf upgrade

}

function fedoraInstall
{
  sudo dnf install $1 $2 $3 $4 $5 $6 $7 $8

}

################################################

function checkDistro2
{
    osrelease="$(grep 'ID_LIKE' /etc/os-release)"

    distro=${osrelease#"ID_LIKE="}

     if [ "${distro}" == 'ubuntu' ]; then
          distro=Ubuntu
     elif [ "${distro}" == 'fedora' ]; then
          distro=Fedora
     elif [ "${distro}" == 'opennsuse' ]; then
          distro=Opensuse
     elif [ "${distro}" == 'arch' ]; then
        distro=Arch
     else
        echo "Tarball download and installs coming soon"
    fi

	#return $distro
}

function checkDistro
{
    # Set a local variable that is set to 1 (True) if a condtition is met
    # Find out which package manager is in use


    if [ "$(command -v apt)" ]; then
       distro=ubuntu
    elif [ "$(command -v apt-get)" ]; then
       distro=ubuntu
    elif [ "$(command -v dnf)" ]; then
      distro=fedora
    elif [ "$(command -v yum)" ]; then
        distro=fedora
    elif [ "$(command -v pacman)" ]; then
       distro=arch
    elif [ "$(command -v zypper)" ]; then
      distro=opensuse
    else
        echo "Tarball download and installs coming soon"
    fi

	#return $distro
}


############################################3
## From Quidsup, below
Install_Yum() {
  #Older versions of Redhat, Fedora
  sudo yum -y install
}
