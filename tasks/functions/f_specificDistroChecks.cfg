## Include file with info of when different distro versions EOL is 

EOLInfo= . "$rootdir"/tasks/functions/support/distroEOL.cfg
$EOLInfo 


function universalEOLCheck
{ 

  if [ "$distroBase" == 'fedora' ]; then
    
    if [ "$versionid" == '26' ]; then
      EOL=$fedora26EOL
    elif [ "$versionid" == '27' ]; then
      EOL=$fedora27EOL
    elif [ "$versionid" == 'rawhide']; then
      EOL=$fedoraRawhideEOL
    fi 
  
  fi 
  # Not Fedora if it passes this point 


  if [ "$distroBase" == 'opensuse' ]; then
      
    if [ "$name" == "openSUSE Leap" ] ; then
      EOL="filler for now"
    elif [ "$name" == "openSUSE Tumbleweed" ]; then
      EOL=$twEOL

    fi 
      
  fi


  if [ "$distroBase" == 'ubuntu' ]; then
    ## LTS Related 
    if [ "$ubuntuName" == 'trusty' ]; then
      EOL=$LTS1404EOL
    elif [ "$ubuntuName" == 'xenial' ]; then
      EOL=$LTS1604EOL

    ## NON-LTS
    ## 1704
    elif [ "$ubuntuName" == 'zesty' ]; then
      EOL=$ubuntu1704EOL
    # 1710
    elif [ "$ubuntuName" == 'artful' ]; then
      EOL=$ubuntu1710EOL
    fi

  fi 




}


#########################################################################################
## Specific Distro Checking 
# Arch based 

function archCheck 
{
  if [ "$id" == 'arch' ] || [ "$id" == 'manjaro' ]; then 
    distroBase="arch"

    ## shouln't a "rolling release = yes " var be here? 

    supported="yes" 
    rollingrelease="yes"


      if [ "$id" == 'manjaro' ]; then 
        
        manjaroVersion=`cat /etc/lsb-release | grep 'DISTRIB_RELEASE=' | sed 's/DISTRIB_RELEASE=//g' `

        version=${manjaroVersion}

      fi 

  fi
}



########################################################################################
#Fedora Based 

function fedoraCheck
{

  # Fedora check 
  if [ -f /etc/fedora-release ] || [ "$id" == 'fedora' ]; then
    distroBase="fedora"
  
    if [ "$versionid" == '26' ] || [ "$versionid" == '27' ] || [ "$versionid" == 'rawhide' ]; then
      supported="yes"
    else 
      supported="no"
    fi 
  fi

}


###############################################################################
# OpenSUSE Related 

function openSuseCheck
{

 	if [ "$id" == 'opensuse' ]; then 
    	distroBase="opensuse"

      ## This is NOT filled out yet, so to speak 
      if [ "$name" == 'openSUSE Leap' ] || [ "$name" == 'openSUSE Tumbleweed' ]; then
        supported="yes"

        
      else 
        supported="no"
      fi 
  fi

}

##################################################################

function solusCheck 
{
  ## Not sure why I have both checks but ...eh 
  if [ -f /etc/solus-release ] || [ "$id" == 'solus' ]; then 
    distroBase="solus"
    supported="yes" 
    rollingrelease="yes"
  fi
}

#####################################################################


function ubuntuCheck
{
 
  # This will expand, as needed later to include more distros that are Ubuntu based, later 
  if [ "$id" == 'linuxmint' ] || [ "$id" == 'ubuntu' ] || [ "$id" == 'neon' ] || [ "$id" == 'peppermint' ]; then
    distroBase="ubuntu"
  fi


  ################################################################
  ## If the distro base is NOT ubuntu, then there is no point for any of the code in the nested if statement to run 

  if [ "$distroBase" == 'ubuntu' ]; then 

      # Not sure if this is the best place to put this function call
      ## Function that checks EOL info 
      
      # if the detected versions is 14.04 or 16.04 ... either of the current LTS versions
      if [ "$ubuntuName" == 'trusty' ] || [ "$ubuntuName" == 'xenial' ]; then
        supported="yes"
        ubuntuLTS="yes"


      # If 17.04 or 17.10, is detected.  17.04 should be removed soon I think 
      elif [ "$ubuntuName" == 'zesty' ] || [ "$ubuntuName" == 'artful' ] ; then
        supported="yes"
        ubuntuLTS="no"
      else
        supported="no"
        ubuntuLTS="no"
      fi

      # if the detected versions is 14.04 or 16.04 ... either of the current LTS versions
          
        ## This needs to have osreleaseinfo ran first   
        if [ "$ubuntuLTS" == 'yes' ]; then
          echo 
          echo -e "You are currently on a ${bold}Long Term Supported Version ${normal}of Ubuntu"

        elif [ "$ubuntuLTS" == 'no' ]; then 
          echo 
          echo -e "You are ${bold}NOT on a long term supported release of Ubuntu"

        fi


  fi


}
