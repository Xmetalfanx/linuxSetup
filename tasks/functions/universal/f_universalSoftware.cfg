function wineInstall
{
    if [ "${distroBase}" == 'ubuntu' ]; then
        # Source: https://wiki.winehq.org/Ubuntu
        clear
        sudo dpkg --add-architecture i386

        addPPA ppa:wine/wine-builds

        aptUpdate
        clear

        sudo apt install --install-recommends winehq-devel
        sudo apt install playonlinux

    elif [ "${distroBase}" == 'fedora' ]; then
         echo "FILLER TEXT FOR NOW ... "
    elif [ "${distroBase}" == 'opennsuse' ]; then
         echo "FILLER TEXT FOR NOW ... "

         ## Add Wine Repos 

    elif [ "${distroBase}" == 'arch' ]; then
        sudo pacman -S wine
    else
       echo "FILLER TEXT FOR NOW ... "
    fi

}

function etcherInstall
{
	 url=https://resin-production-downloads.s3.amazonaws.com/etcher/1.0.0-beta.17/Etcher-1.0.0-beta.17-linux-x64.zip

   stripFileInfo $url
	 wget $url

	 unzip Etcher-1.0.0-beta.17-linux-x64.zip -d ~/Downloads
	 #unzip $file

	 echo -e "Etcher's AppImage is now located in your Downloads folder"
	 echo -e "Please navigate to that folder and click the icon to run it"
	 echo -e "or navigate to it in a terminal and type "./Etcher-linux-x64.AppImage"
}

function installDeadBeef
{
    # NOTE TO SELF: DEADBEEF IS NOW IN ALOT OF default repos 
    echo "Installing DeadBeef Media Player"


  ## HOW DO I ALLOW universal installer for both
  if [ "${distroBase}" == 'ubuntu' ] then

      ## Add GetDebs PPA
      getDebsPPA


    elif [ "${distroBase}" == 'fedora' ]; then
      ## Add UnitedRPM repo
      ### Prompt user that a repo must be installed and ask them for a response, so they can say "no"

      ## Install Deadbeef

    elif [ "${distroBase}" == 'opennsuse' ]; then

      # Leap and Tumbleweed has this repos
      echo "Filler - in Multimedia:apps repo - from OBS reference"

    else
       echo "FILLER TEXT FOR NOW ... "
    fi

    ## Moved install line outside of the loop and removed arch check since its in the pacman repos
    installApp deadbeef

}

function installAtom
{

  ## If the RPM is needed for Fedora and Suse ... can I combine the two?
  echo "Downloading and Installing the Atom Text Editor"

  if [ "${distroBase}" == 'ubuntu' ]; then

    curl -o atom.deb https://atom.io/download/deb

    clear
    dpkgInstall atom.deb

  	echo "Atom Text Editor installed"

    ## Cleanup
    rm atom.deb

    clear

  elif [ "${distroBase}" == 'fedora' ]; then
      echo -e "Placeholder"

  elif [ "${distroBase}" == 'opennsuse' ]; then
    curl -o atom.rpm https://atom.io/download/rpm

    ## ?? Don't I need to install lsb first due to errors?

    #this is obviously not done

  elif [ "${distroBase}" == 'arch' ]; then
      echo -e "Placeholder AUR function needed "
  else
     echo "FILLER TEXT FOR NOW ... "
  fi

}


function installChrome
{

  if [ "${distroBase}" == 'ubuntu' ]; then

    echo -e " Adding Google Chrome \(Stable\) "
    wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
    sudo sh -c 'echo "deb http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'

    aptUpdate
    clear

    installApp google-chrome-stable
    clear

  elif [ "${distroBase}" == 'fedora' ]; then
      echo -e "Placeholder"

  elif [ "${distroBase}" == 'opennsuse' ]; then

    ## Leap 421 and 422
    ## Removed installApp code as this is adding a repo ...  http://dl.google.com/linux/chrome/rpm/stable/x86_64 Google-Chrome

    ## Refresh Repos
    zypperRefresh

    ## Deal with signing key
    wget https://dl.google.com/linux/linux_signing_key.pub
    
    sudo rpm --import linux_signing_key.pub

    ## Install
    installApp google-chrome-stable

  elif [ "${distroBase}" == 'arch' ]; then
        ## Removed installApp as this needs to be passed to the AUR, not just pacman google-chrome
        echo -e "AUR pass needed here "
  else
     echo "FILLER TEXT FOR NOW ... "
  fi
}


function equalizerInstall
{
    ## Function for pulse-audio equalizer
    echo "Filler"
}
