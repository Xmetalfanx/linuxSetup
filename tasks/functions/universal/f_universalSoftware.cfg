sublimetextFunctions= . "$rootdir"/tasks/functions/universal/software/f_sublimeText.cfg
$sublimetextFunctions

#########################################################################
## To be moved later

function checkDownloadLink
{
  ## if distroName == Fedora or OpenSuse, than downloadURL/programURL (whatever atm) = $RPMURL

  ## if distroName == Ubuntu, than downloadURL/programURL (whatever atm) = $DEBURL


  # GOAL OF THIS FUNCTION:  to use distroName to determine what the programURL/DownloadURL

  ## After that...

}





#########################################################################
function LAMPInstall
{
  ## Assumes packages names are same cross-distro

  ## This code below is probably from an Ubuntu based distro 
  installApp apache2 mysql-server php libapache2-mod-php
}

function wineInstall
{
    programName="Wine Emulator"
    programHomepage=http://www.winehq.com


    if [ "$distroBase" == 'ubuntu' ]; then
        # Source: https://wiki.winehq.org/Ubuntu
        clear
        sudo dpkg --add-architecture i386

        addPPA ppa:wine/wine-builds

        ubuntuUpdate
        clear

        installApp --install-recommends winehq-devel

        installApp playonlinux

    elif [ "$distroBase" == 'fedora' ]; then
         echo "FILLER TEXT FOR NOW ... "

    elif [ "$distroBase" == 'opennsuse' ]; then
         echo "FILLER TEXT FOR NOW ... "

         ## Add Wine Repos

    elif [ "$distroBase" == 'arch' ]; then
        installApp wine
    else
       echo "FILLER TEXT FOR NOW ... "
    fi

}


function etcherInstall
{
  programName="Etcher"
  packageURL=https://github.com/resin-io/etcher/releases/download/v1.3.1/etcher-1.3.1-linux-x86_64.zip
  

  ## Can I put this elsewhere, since this will ALWAYS be the case? 
  ## Commented out line below just in case 
  #packageName=${packageURL/*\//}
   
   # Downloads file 
   wget $packageURL

   #unpacks file into Download folder  
   unzip packageName -d ~/Downloads

   echo -e "Etcher's AppImage is now located in your Downloads folder"
   echo -e "Please navigate to that folder and click the icon to run it"
   echo -e "or navigate to it in a terminal and type \"./Etcher-linux-x64.AppImage\" "
}


function deadbeefInstall
{

  programName="DeadBeef Media Player"
  programHomepage=http://deadbeef.sourceforge.net/
  DEBURL=http://sourceforge.net/projects/deadbeef/files/debian/deadbeef-static_0.7.2-2_amd64.deb/download


  # NOTE TO SELF: DEADBEEF IS NOW IN ALOT OF default repos
  echo "Installing DeadBeef Media Player"


    ## HOW DO I ALLOW universal installer for both
    if [ "$distroBase" == 'ubuntu' ]; then

      packageURL=$DEBURL


    elif [ "$distroBase" == 'fedora' ]; then
      ## Add UnitedRPM repo
      ### Prompt user that a repo must be installed and ask them for a response, so they can say "no"

      echo "filler"

    elif [ "$distroBase" == 'opennsuse' ]; then

      # Leap and Tumbleweed has this repos
      echo "Filler - in Multimedia:apps repo - from OBS reference"

    elif ["$distroBase" == 'solus']; then
      sudo eopkg install deadbeef

    else
       echo "FILLER TEXT FOR NOW ... "
    fi

    ## Moved install line outside of the loop and removed arch check since its in the pacman repos
    installApp deadbeef
}

function equalizerInstall
{
    ## Function for pulse-audio equalizer
    echo -e "Filler"
}



function chromeInstall
{

  chromegpgpkey=https://dl.google.com/linux/linux_signing_key.pub
  chromeRPMLink=https://dl.google.com/linux/direct/google-chrome-stable_current_x86_64.rpm


    if [ "$distroBase" == 'ubuntu' ]; then
       read "Adding Google Chrome (Stable)"
        wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        sudo sh -c 'echo "deb http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'

        sudo apt update

        clear
        sudo apt-get install google-chrome-stable
        clear


    elif [ "$distroBase" == 'opensuse' ]; then

        ## Get Key
        wget $chromegpgpkey
        sudo rpm --import linux_signing_key.pub

        wget $chromeRPMLink

        sudo rpm -i google-chrome-stable_current_x86_64.rpm


    elif [ "$distroBase" == 'fedora' ]; then

        ## Get Key
        wget $chromegpgpkey
        sudo rpm --import linux_signing_key.pub

        wget $chromeRPMLink

        sudo dnf --localinstall google-chrome-stable_current_x86_64.rpm


    elif [ "$distroBase" == 'arch' ]; then
         echo "FILLER TEXT FOR NOW ... "
    else
       echo "FILLER TEXT FOR NOW ... "
    fi
}


function filebotInstall
{
  programName="Filebot"
  programHomepage=https://sourceforge.net/projects/filebot/
  DEBURL=https://sourceforge.net/projects/filebot/files/filebot/FileBot_4.7.9/filebot_4.7.9_amd64.deb/download
  
   if [ "$distroBase" == 'ubuntu' ]; then
        echo -e "Add the way to install the DEB"


    elif [ "$distroBase" == 'arch' ]; then
        echo -e "Filler ... AUR code needed, here i think "
    else
       echo "FILLER TEXT FOR NOW ... "
    fi


}

function tinyMediaManagerInstall
{
  ## Note to self: Java has to be installed 

  programName="Tiny Media Manager"
  tarballURL=https://release.tinymediamanager.org/dist/tmm_2.9.8_6644bb9_linux.tar.gz

  mkdir tmm
  cd tmm

  # This is going to have a problem with all the . . .. . in the file extention 

  url=https://release.tinymediamanager.org/dist/tmm_2.9.8_6644bb9_linux.tar.gz

  curl $url -o $tmmName
  echo "Tiny Media Manager file downloaded"
  userPrompt

  clear
  echo  -e "Extracting Tiny Media Manager archive"
  mkdir tinyMediaManager
  tar -xvzf $tmmName -C tinyMediaManager
  clear 
  echo -e "File Extracted"
  userPrompt

  echo -e "Moving Tiny Media Directory to The home directory's Download folder"
  mv tinyMediaManager/ ~/Downloads
  userPrompt

  # Cleanup 
  clear
  echo "Cleanup Un-needed folder"
  cd ..
  rm -rf tmm/
  userPrompt

}
