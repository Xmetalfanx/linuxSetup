## Shouldn't this be in universal function? since installApp will determine what line to run base on distro 

function LAMPInstall
{
  ## Assumes packages names are same cross-distro 
  installApp apache2 mysql-server php libapache2-mod-php
}

function wineInstall
{
    if [ "$distroBase" == 'ubuntu' ]; then
        # Source: https://wiki.winehq.org/Ubuntu
        clear
        sudo dpkg --add-architecture i386

        addPPA ppa:wine/wine-builds

        ubuntuUpdate
        clear

        installApp --install-recommends winehq-devel

        installApp playonlinux

    elif [ "$distroBase" == 'fedora' ]; then
         echo "FILLER TEXT FOR NOW ... "
    
    elif [ "$distroBase" == 'opennsuse' ]; then
         echo "FILLER TEXT FOR NOW ... "

         ## Add Wine Repos

    elif [ "$distroBase" == 'arch' ]; then
        installApp wine
    else
       echo "FILLER TEXT FOR NOW ... "
    fi

}


function etcherInstall
{
   
   ## This is not going to work with the URL constantly changing 
   url=https://resin-production-downloads.s3.amazonaws.com/etcher/1.0.0-beta.17/Etcher-1.0.0-beta.17-linux-x64.zip

   stripFileInfo $url
   wget $url

   unzip Etcher-1.0.0-beta.17-linux-x64.zip -d ~/Downloads
   #unzip $file

   echo -e "Etcher's AppImage is now located in your Downloads folder"
   echo -e "Please navigate to that folder and click the icon to run it"
   echo -e "or navigate to it in a terminal and type \"./Etcher-linux-x64.AppImage\" "
}


function deadbeefInstall 
{
    # NOTE TO SELF: DEADBEEF IS NOW IN ALOT OF default repos
    echo "Installing DeadBeef Media Player"


      ## HOW DO I ALLOW universal installer for both
      if [ "$distroBase" == 'ubuntu' ]; then

        ## Add GetDebs PPA
        getDebsPPA


      elif [ "$distroBase" == 'fedora' ]; then
        ## Add UnitedRPM repo
        ### Prompt user that a repo must be installed and ask them for a response, so they can say "no"

        echo "filler"

      elif [ "${distroBase}" == 'opennsuse' ]; then

        # Leap and Tumbleweed has this repos
        echo "Filler - in Multimedia:apps repo - from OBS reference"

      elif ["${distroBase}" == 'solus']; then 
        sudo eopkg install deadbeef

      else
         echo "FILLER TEXT FOR NOW ... "
      fi

    ## Moved install line outside of the loop and removed arch check since its in the pacman repos
    installApp deadbeef
}

function equalizerInstall
{
    ## Function for pulse-audio equalizer
    echo -e "Filler"
}



function chromeInstall
{
  
  chromegpgpkey=https://dl.google.com/linux/linux_signing_key.pub
  chromeRPMLink=https://dl.google.com/linux/direct/google-chrome-stable_current_x86_64.rpm


    if [ "$distroBase" == 'ubuntu' ]; then
       read "Adding Google Chrome (Stable)"
        wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        sudo sh -c 'echo "deb http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
       
        sudo apt update
        
        clear
        sudo apt-get install google-chrome-stable
        clear


    elif [ "$distroBase" == 'opensuse' ]; then
    
        ## Get Key 
        wget $chromegpgpkey
        sudo rpm --import linux_signing_key.pub

        wget $chromeRPMLink

        sudo rpm -i google-chrome-stable_current_x86_64.rpm

    
    elif [ "$distroBase" == 'fedora' ]; then
          
        ## Get Key 
        wget $chromegpgpkey
        sudo rpm --import linux_signing_key.pub

        wget $chromeRPMLink

        sudo dnf --localinstall google-chrome-stable_current_x86_64.rpm


    elif [ "$distroBase" == 'arch' ]; then
         echo "FILLER TEXT FOR NOW ... "
    else
       echo "FILLER TEXT FOR NOW ... "
    fi
}


function filebotInstall
{
  
   if [ "$distroBase" == 'ubuntu' ]; then
       echo -e "Add the way to install the DEB"


    elif [ "$distroBase" == 'arch' ]; then
        installApps filebot
    else
       echo "FILLER TEXT FOR NOW ... "
    fi


}

function tinyMediaManagerInstall
{
  mkdir tmm
  cd tmm

  url=https://release.tinymediamanager.org/dist/tmm_2.9.7_8513bee_linux.tar.gz

  stripFileInfo $url 

  #echo -e "Filename:\t $filename"

  wget $url
  echo "File Downloaded"
  userPrompt

  echo "Filename:\t $filename"
  echo "Filenamewoext:\t $filenamewoext"
  userPrompt

  mkdir $filenamewoext
  clear -e "About to Extract file"
  extractTar $filename $filenamewoext
  userPrompt

  


  echo -e "File Extracted"
  userPrompt
  clear
  

}