functionsdir="$rootdir"/tasks/functions

updateFunctions= . $functionsdir/universal/pmanagement/upgrade.cfg
$updateFunctions

addSourceFunction= . $functionsdir/universal/pmanagement/addSource.cfg
$addSourceFunction

addInstallFunction= . $functionsdir/universal/pmanagement/installDistro.cfg
$addInstallFunction 


#################################################

function universalUpgrade
{

  clear

  if [ "$distroBase" == 'ubuntu' ]; then
    ubuntuUpgrade

  elif [ "${distroBase}" == 'fedora' ]; then
        clear
          echo "About to upgrade Fedora to latest packages"
          userPrompt
          sudo dnf upgrade

        clear

  elif [ "${distroBase}" == 'opensuse' ]; then
      suseUpgrade

  elif [ "${distroBase}" == 'arch' ]; then
      sudo pacman -Syyu

  elif [ "${distroBase}" == 'solus' ]; then 
    echo -e "Updating Solus via eopkg"
    sudo eopkg up

  else
      echo -e "(Test message only) Else condition reached"
      userPrompt
      clear 

      #the idea is to exit the function NOT JUST the if statement
      ## I do not want the output of writing the last upgraded date being recorded IF there was nothing done 
  fi

  clear

  ##################################################
  # the idea of this is to keep track (in my scripts anyway) of the last time the system was updated.   I do have a few ideas for why that may be needed that I am throwing around in my head.

  upgradeDate=$(date +%D%t:%r)


  echo -e "Last Upgraded:\t $upgradeDate" >> updateInfo.txt

  #######################################################

  echo -e "System Up-to-date"
  userPrompt

}


#############################################################
## Install related


function installApp
{

    if [ "${distroBase}" == 'ubuntu' ]; then
      sudo apt install $1 $2 $3 $4 $5 $6 $7 $8 $9 $10 $11

    elif [ "${distroBase}" == 'fedora' ]; then
        sudo dnf install $1 $2 $3 $4 $5 $6 $7 $8
    elif [ "${distroBase}" == 'opennsuse' ]; then
        sudo zypper install $1 $2 $3 $4 $5 $6 $7 $8 $9 $10 $11

    elif [ "${distroBase}" == 'arch' ]; then
        sudo pacman -S $1 $2 $3 $4 $5 $6 $7 $8 $9 $10 $11
    else
       echo "FILLER TEXT FOR NOW ... "
    fi

}
