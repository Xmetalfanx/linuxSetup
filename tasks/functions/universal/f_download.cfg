function stripFileInfo
{

  # get a URL from the theme function
  packageURL=$1

  
  #############################################
  ### Will be removed later 
  clear
  # Display Test for the full URL
  echo -e "\n\nFull URL is:\t $packageURL"
  ###########################################

  # Filename with extension 
  filenameWEXT=${packageURL##*/}

 
  #############################################
  ### Will be removed later 
  # Display Test for Total file Extension
  echo -e "\nTotal Filename is:\t $filenameWEXT"
  ###############################################


  # Filename by itself, NO extention 
  filename=${filenameWEXT%%.*}

  #############################################
  ### Will be removed later 
  echo -e "Filename by itself: \t $file"
  ###########################################

  extonly=${filenameWEXT#*.}


  ################################################

  ## Need for this? ... ?? 
  ## I think this was for say "massivefilenamefoobar-2.0.0.0.4.5.... perhaps"
  ## Another factor is "Foobar.tar.gz"
    ### extonly + the removal of the periods sed, get me to "targz" 

  # Strip Numbers then Periods 
  extfinal=`echo "$extonly" | sed 's/[0-9]*//g;s/\.//g' `

  ## Display Test for final output
  echo -e "Final Extension for test loop:\t $extfinal"

  
}

###############################################################################

## This is should be what is called from program functions 
function downloadFile
{
    # $1 = Program Name (var)
    # $2 = URL (var)

    # Get info from the URL 
    stripFileInfo $2 

    # This has to have the stripFileInfo function run first
    ## NOW the $packageName should be known 

    echo -e "Downloading $1 package"
    if [ "$extfinal" == 'git' ]; then
        git clone $1

    else
        ## remember $2 is the url 
        wget -O $packageName $2
        echo "$1 downloaded"
        
    fi

    # Needed? ... I will leave it for now
    userPrompt
}

###############################################################################################

function extractDownload
{
  echo -e "About to Extract $programName's archive "

    ## What gets passed SHOULD BE the entire file name WITH ext info (?? what did i name that var?) , but due to other functions running before this .. extfinal should be KNOWN 

    # I SHOULD have it make a temp location before extracting so the extracted downloads are organized in one place and not say ... in the root dir of these scripts 

    if [ "$extfinal" == 'targz' ] || [ "$extfinal" == 'tgz' ]; then
         tar -zxvf $1

    elif [ "$extfinal" == 'tar' ]; then
         tar -xvf $1

    elif [ "$extfinal" == 'tarxz' ]; then
        echo "Get code for this tarxz archive type"

    ## Double Check the ext on this one
    elif [ "$extfinal" == 'tarbz' ]; then
       tar -xJf $1

    elif [ "$extfinal" == 'zip' ]; then
        # unzips to the user's Downloads folder s
        unzip $1  -d ~/Downloads
    
    else
       echo "Debugging hello message"
    fi
  

  echo -e "$programName archive extracted"
  
  userPrompt
  
  clear

}


## I have no idea if this is a duplicate function ... I may have this elsewhere 
function installThirdParty
{
    $1 = ProgramName
    $2 = packageName?... I need the full file name WITH the ext, I beleive 

    
    echo "Installing $1"

    if [ "$extfinal" == 'deb' ]; then
        sudo dpkg -i $2 
        echo -e "$1 has been successfully installed"
    elif [ "$extfinal" == 'rpm' ]; then
        sudo rpm -i $2
        echo -e "$1 has been successfully installed"
    else 
        echo -e "$1 not installed"
    fi 

}

#######################################################################################
#######################################################################################

function listInstall
{
  listFile= . $downloadListDir/$1

  progNum=0
  while read -r listPrograms[progNum]; do
    ((progNum++))
  done < $listFile

  # Test only 
  clear

  echo -e "sudo apt install {listProgram[progNum]}"


}