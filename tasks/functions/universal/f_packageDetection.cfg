## This is for the meta function (??) below ... if its Ubuntu's base that is detected .. this will get called vs having all this code in the other function 

#############################################################################################
## This is for the meta function (??) below


function detectPackageStatus()
{
  # $1 is the package you want info on
  
  if [ "$distroBase" == 'ubuntu' ]; then
      # $1, here = the package you want info on

      ## Clear Var if it was assigned a value before
      unset packageStatus

      ubuntuPackageStatus=$(dpkg -l | grep $1)

      # IF package IS installed 
      
      if [ -z "$ubuntuPackageStatus" ]; then
          packageStatus=false
      else
          packageStatus=true
      fi 

  elif [ "$distroBase" == 'fedora' ] || [ "$distroBase" == 'opennsuse' ]; then
     
     rpmPackage=$(rpm -q $1)

      ## Package not installed 
      if [ "$rpmPackage" == "package $1 is not installed" ]; then 
        packageStatus=false
      else
        packageStatus=true
      fi 

    elif [ "$distroBase" == 'arch' ]; then
       
        archPkgStatus="pacman -Qi $1 &> /dev/null"


        ## Fill this out more later
        if [ "$archPkgStatus" == "error: package $1 was not found" ]; then
          packageStatus=false
        else
          packageStatus=true
        fi

    elif [ "$distroBase" == 'solus' ]; then

      solusPkgDetection=$(eopkg li | grep $1)

      ## TEST ONLY 
      #clear
      #echo -e "solusPkgDetection:$solusPkgDetection"
      #userPrompt


      if [ $solusPkgDetection == '' ]; then
        packageStatus=false
      else
        packageStatus=true
      fi

    else

       echo "detect package status filler text"
    fi


}


#################################################################################

# Test output function
function pkgInstallIfNeeded()
{
  
  if [ "$packageStatus" == 'false' ]; then
    ## Echo just for testing atm 
    #echo -e "Package $1 IS NOT installed"

    installApps $1 
  elif [ "$packageStatus" == 'true' ]; then
    
    #Echo is a test only 
    #echo -e "Package $1 is ALREADY INSTALLED"
    return 
    
  else 
    echo -e "Something went wrong detecting if $1 is installed"
  fi


}

##################################################################
## What gets called from other 
function checkPackage()
{
  # $1 is package name passed to this function 

  ## Checks of package is installed and if its not install sends data to installApps (Universal Installer) function 

  # Detection function, called
  detectPackageStatus $1

  ## Function for testing only, called 
  pkgInstallIfNeeded $1
}