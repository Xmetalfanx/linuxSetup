function addYaourt
{

    clear
    echo "Setting Up Yaourt"
    user=$(whoami)

    sudo git clone https://aur.archlinux.org/package-query.git
    sudo chown $user package-query
    sudo chmod 775 package-query

    cd package-query
    makepkg -si
    cd ..
    #cleanup
    #rm -rf package-query
    echo "package-query installed"

    sudo git clone https://aur.archlinux.org/yaourt.git
    sudo chown $user yaourt
    sudo chmod 775 yaourt

    cd yaourt
    makepkg -si
    cd ..

    #cleanup
    #rm -rf yaourt
    echo "Yaourt installed"
    read

}


function archiveSupport
{

  clear
  echo "Adding Archive Support to Arch "

  ## A way to detected the DE is needed and and if/then loop below should work 

  # for the XFCE desktop use
  #installApp zlib p7zip unzip zip zziplib

  yaourt -S engrampa-thunar

  # for the cinnamon desktop use
  #installApp nemo-fileroller zlib p7zip unzip zip zziplib

  # for Gnome Desktop
  #installApp file-roller zlib p7zip unzip zip zziplib


}

function optimizeMirrors
{

  clear
  echo -e "About to Optimize Pacman Mirrors, while backing up  the current mirror list"

  # Backing up Current mirror list, TODO: Add option to "auto-reset" mirrorlist in the case of a bork
  sudo cp /etc/pacman.d/mirrorlist /etc/pacman.d/mirrorlist.bak

  # Install Reflector
  installApp reflector

  # Run Reflector - this is a basic run
  sudo reflector --verbose -l 6 --sort rate --save /etc/pacman.d/mirrorlist

}

function soundSupport
{

  ## Volume settings
  clear
  echo -e "Adding Sound Support to Arch"

  ## Volume settings

  ### XFCE
  installApp pavucontrol pulseaudio-alsa

  # For keyboard volume buttom usage
  yaourt -S xfce4-volumed

  echo "VolumeD settings will take effect after a reboot"

}



function installVirtualBox
{

    clear
    echo -p "Installing VirtualBox"
    archPacInstall virtualbox virtualbox-host-dkms virtualbox-host-modules
    yaourt -S virtualbox-ext-oracle

    echo -p "\n\n Modprobing the Virtualbox Driver"
    sudo modprobe vboxdrv

    echo -p "Giving User Permissions to use features in Virtualbox"
    sudo gpasswd -a $USER vboxusers


    # To load the VirtualBox module at boot time, refer to Kernel_modules#Loading and create a *.conf with the line:
    # vboxdrv

    # in location
    # /etc/modules-load.d/virtualbox.conf

}

###############################################
## Manjaro related 

function manjaroRankMirrors
{
  
  sudo pacman-mirrors -f 0 && sudo pacman -Syy
}

function manjaroRankMirrorsFastTrack
{
  
  sudo pacman-mirrors -f 5 && sudo pacman -Syy
}

function manjaroOptDBSpeed
{
  sudo pacman-optimize && sync

}

function manjaroChroot
{
  # Install needed package to CHROOT - Manjaro only 

  
  clear
  echo -e "Refreshing repos"
  sudo pacman -Syy 
  echo -e "Repos are now Up-to-Date"
  userPrompt

  echo -e "Installing Needed package for Manjaro Chroot"
  sudo pacman -S mhwd-chroot

  clear
  echo -e "Its REALLY important to know your Manjaro partition, if not .. click Control + Z to exit, NOW "
  echo -e "After the next commannd is ran, choose your Manjaro partition"

  sudo mhwd-chroot-shell


  clear
  echo -e "Now you need to reinstall the kernel (Ex- for 4.14* you would type 'sudo pacman -S linux414' "
  echo -e "You MAY WANT to 'sudo grub-install /dev/sda ' "
  echo -e "I am not putting this code in on purpose to not have other people running this and possibly borking their system."
  echo -e
  echo -e "USE THIS KNOWLEDGE AT YOUR OWN RISK - This is what I have to do to get around the kernel panic on a failed kernel install, issue "
}

################################################################################################

function manjaroMenu
{
  
  clear
  echo -e "Xmetal's Manjaro,  Post-Installation Script \n"
  echo -e "Please NOTE: Many of these tasks are predone on distros such as Antergos \n\n"
  echo -e "Please Select task: \n"


  echo -e   "1. \t Manjaro Rank-Mirrors"
  echo -e   "2. \t Manjaro Optimize Mirrors"
  echo -e   "3. \t CHROOT into Manjaro [to be used from a live Media] "

  echo -e   "m. \t Return to Main Menu"
  echo -e   "q. \t Exit to Prompt\n\n"

  read -p   "Your Choice?:"  manjaroSelection


  case $manjaroSelection in

      1)  manjaroRankMirrors
      x=1 ;;

      2)  manjaroOptDBSpeed
      x=1 ;;

      3)  manjaroChroot
      x=1 ;;


   [aA]) sudo pacman -Syyu
         OptimizeMirrors
      addYaourt
      SoundSupport
      archiveSupport
      archInstallArc
      yaourt -s packer
      x=1
      ;;

    [mM])   clear 
        exit
        ;;

    [qQ])  quitScript   ;;

    * ) invalidSection ;;

    esac

done

}