## This is for the meta function (??) below ... if its Ubuntu's base that is detected .. this will get called vs having all this code in the other function 

function ubuntuPackageDetection
{
  # $1, here = the package you want info on

  ## Clear Var if it was assigned a value before
  unset packageStatus

  ubuntuPackageStatus=$(dpkg -l | grep $1)

  # IF package IS installed 
  ## later note: I probably should fill this out a bit more to make sure the else means the package IS installed 
  if [ "$ubuntuPackageStatus" == "" ]; then
      packageStatus=false
  else
      packageStatus=true
  fi 
}

function rpmDetection
{

  rpmPackage=$(rpm -q $1)

  ## Package not installed 
  if [ "$rpmPackage" == "package $1 is not installed" ]; then 
    packageStatus=false
  else
    packageStatus=true
  fi 
}

function archPackageDetection
{
  pacman -Qi $1 &> /dev/null

  EXITSTATUS=$?

  ## Fill this out more later
  if [ $EXITSTATUS == 1 ]; then
    packageStatus=false
  elif [ $EXITSTATUS == 0 ]; then
    packageStatus=true
  fi


}

function solusPackageDetection
{
  
  solusPkgDetection=$(eopkg li | grep $1)

  ## TEST ONLY 
  #clear
  #echo -e "solusPkgDetection:$solusPkgDetection"
  #userPrompt


  if [ "$solusPkgDetection" == '' ]; then
    packageStatus=false
  else
    packageStatus=true
  fi

}


#################################################################################
## This is for the meta function (??) below

function detectPackageStatus
{
  # $1 is the package you want info on

  # If Ubuntu is detected
  if [ "$distroBase" == 'ubuntu' ]; then
    ubuntuPackageDetection $1

  # If either Fedora or OpenSuse is detected 
  elif [ "$distroBase" == 'fedora' ] || [ "$distroBase" == 'opensuse' ]; then
    rpmDetection $1

  # If an arch base is detected
  elif [ "$distroBase" == 'arch' ]; then
    archPackageDetection $1

  elif [ "$distroBase" == 'solus' ]; then
    solusPackageDetection $1
    
  fi

}


# Test output function
function testOutputFunction
{
  
  if [ "$packageStatus" = false ]; then
    ## Echo just for testing atm 
    echo -e "Package $1 IS NOT installed"

    #installApps $1 
  else
    
  #Echo is a test only 
    echo -e "Package $1 is ALREADY INSTALLED"

    #return
  fi


    # These two lines of from tests only .. .they will be removed 
    userPrompt
    clear

}

##################################################################

function checkPackage
{
  ## Checks of pacakge is installed and if its not install sends data to installApps (Universal Installer) function 

  # Detection function, called
  detectPackageStatus $1

  ## Function for testing only, called 
  testOutputFunction $1


}