f_DEInfo= . "$rootdir"/tasks/functions/f_DEInfo.cfg
$f_DEInfo

function osreleaseInfo
{

  ## Remove any double quotes that may appear in the results
  removeDQuotes="sed s/\"//g"

  ## Removes everything before the equals sign = the cut command 
  ### ?? Think of a better var name for this? 
  cutEquals="cut -d = -f 2"
 

  ################################################
  name=$(cat /etc/os-release | grep ^NAME= | $removeDQuotes | $cutEquals)
  
  idlike=$(cat /etc/os-release | grep ^ID_LIKE= | $removeDQuotes | $cutEquals)
  
  id=$(cat /etc/os-release | grep ^ID= | $removeDQuotes | $cutEquals)
  
  versionid=$(cat /etc/os-release | grep VERSION_ID= | $removeDQuotes | $cutEquals)
  
  version=$(cat /etc/os-release | grep ^VERSION= | $removeDQuotes | $cutEquals)
  
  # Consider this to the Ubuntu specific check function
  ubuntuName=$(cat /etc/os-release | grep ^UBUNTU_CODENAME= | $removeDQuotes | $cutEquals)

  # Function call to get info about Desktop (DE) being ran 
  getDesktopInfo

}

################################################################

function checkSupportStatus
{

  if [ "$supported" == 'yes' ]; then
    # Gets EOL info from a config
    echo -e "The version of Linux you are currently on, ${bold}IS still ${normal}supported"

    echo -e "The End of your distro/version's support is: ${bold}\t $EOL ${normal}"
  else
    echo -e "The version of Linux you are currently on, is no longer supported."
  fi


  if [ "$rollingRelease" == 'yes' ]; then
    echo -e "You seem to be on a ${bold} Rolling Release${normal}"
  fi

}

################################################################

function lsbreleaseCheck
{

  lsbreleaseCut='cut -d = -f 2'

  lsbDescription='$lsb_release | grep DISTRIB_DESCRIPTION | $lsbreleaseCut'

  lsbRelease='$lsb_release | grep DISTRIB_RELEASE | $lsbreleaseCut'

  lsbCodename='$lsb_release | grep DISTRIB_CODENAME | $lsbreleaseCut'

  lsbDistribID='$lsb_release | grep DISTRIB_ID | $lsbreleaseCut'

}