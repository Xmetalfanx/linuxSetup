
# Yes the function name is bad ... 
# the idea is to check for things based on LTS that may have different lsb-release and/or os-info ... this should only be checking for stuff that is different
  # what i mean is if say ElementaryOS's UbuntuCodename = "Xenial" or something that is already checked for .. there is NO NEED for extra checks 
function ltsFlavorCheck()
{
  # Placeholder 
  echo "Ubuntu Flavor Check will go here "


}


## I THINK UbuntuName is an old reference to OSRELEASE_UBUNTU_CODENAME ... i didn't use lsb-release at that time and I am not sure what else it could be 

function ubuntuVersionCheck()
{
  ## Here we KNOW its an Ubuntu base already 
  ## $UbuntuName is OSRELEASE_UBUNTU_CODENAME I think now 
  
  ## Trusty's EOL is April 2019 .... I may want to weed Trusty out and put a message in "you may want to upgrade soon"
  if [ "$ubuntuName" == 'trusty' ] || [ "$ubuntuName" == 'xenial' ] || [ "$ubuntuName" == 'bionic' ]; then
      supported="yes"
      ubuntuLTS="yes"
    

      ## Consider moving this elsewhere 
      echo
      echo -e "You are currently on a ${bold}Long Term Supported Version ${normal}of Ubuntu"

  # only put NON-EOL point releases in this check 
  ### WAIT A SECOND ... Loki as a Codename? ... that seems like it SHOULD BE "Xenial" or something like that? ... this seems off 
  elif [ "$ubuntuName" == 'cosmic' ] || [ "$ubuntuName" == 'loki' ]; then
    supported="yes"
    ubuntuLTS="no"

      # Consider moving this elsewhere ... 
      echo
      echo -e "You are ${bold}NOT on a long term supported release of Ubuntu"
    

  else
    supported="no"

    ## Unsupported distro is detected 
    echo
    echo "You are possibly on a distro that is no longer supported"

  fi 


}

## The fear I have is loading this function up with way too many EOL releases 
# I need to limit this and/or find a better way to do it 
function EOLUbuntuCheck()
{
  
    ## LTS Related 
    if [ "$ubuntuName" == 'trusty' ]; then
      EOL=$LTS1404EOL
    elif [ "$ubuntuName" == 'xenial' ]; then
      EOL=$LTS1604EOL

    ## NON-LTS
    ## 1704
    elif [ "$ubuntuName" == 'zesty' ]; then
      EOL=$ubuntu1704EOL
    # 1710
    elif [ "$ubuntuName" == 'artful' ]; then
      EOL=$ubuntu1710EOL
    fi

}


## Metafunction - if distro is/'is based on' Ubuntu 
function ubuntuBaseCheck()
{
  # HOLD ON ... when in this getting called? ... i have to sort of know its an Ubuntu base ... i think at this point ... there may be redundent checks i dont need below 
  
  # This will expand, as needed later to include more distros that are Ubuntu based, later
  # Currently supports: Linux Mint, Ubuntu (and many of it's flavors), (KDE) Neon, Peppermint, and ElementaryOS 


  # $id below is NOW OSRELEASE_ID i think ... something like that 


  if [ "$id" == 'linuxmint' ] || [ "$id" == 'ubuntu' ] || [ "$id" == 'neon' ] || [ "$id" == 'peppermint' ] || [ "$id" == 'elementary' ]; then
    distroBase="ubuntu"

    ## Function call to detect "version" or "branch" of ubuntu 
    ubuntuVersionCheck
    
    # Gets support info for the ubuntu based distro 
    EOLUbuntuCheck

  fi


}

########################################
# March 2019 Redo starts below 

# idea: ubuntuBase (var name used anywhere else) will be the final var IN an if loop 
## the value of this var is the ubuntu codename ... the idea is that 18.04 and 18.04.2 (doing a BASE check ) may get detected differently 

#I will check various things in os-release and lsb-release for example to determine the branch 


## What to check: 
  ## OSRELEASES_UBUNTU_CODENAME which is sort of the same as my final var value 

  ## os-release based version id ... which is "16.04" (with quotes... i will have to strip that out ) 

