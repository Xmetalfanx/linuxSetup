
# Checks if installed
function lsbReleaseCheck()
{
	# Detect Package Manager
    packageManDetection

	userPrompt

	echo -e "About to check for a few packages that are needed for the scripts to run"
	echo -e "This includes LSB related packages, inxi, wget, and curl"
	clear
    echo -e "Checking for lsb-release, as it's not installed by default in all distros"

    # Check for /usr/bin/lsb_release
    if [ -f /usr/bin/lsb_release ]; then
        # Installed - no tasks needed
        echo -e "lsb_release is already installed"
        return

    else
    # If not installed
    echo -e "lsb release package not installed"
    userPrompt

        # note to self: here the package manager is known, but NOT the distro
        # ?? what about Solus? and OpenSuse?

        case $pmanager in

            apt) installApp "lsb-base lsb-release" ;;
            dnf) installApp "redhat-lsb-core" ;;
            pacman|zypper) installApp "lsb-release" ;;

        esac

    fi

}

# Needed since arch default repos do not have inxi
# I probably should move this function elsewhere
function inxiArchInstall
{
    # 1 - Install Build Essentials
    echo -e "Installing Build Essentials"
    userPrompt
    universalBuildEssentials

    # 2 - AurHelper check/install
    echo -e "Installing inxi from the AUR"
    userPrompt
    aurAppInstall "inxi"
}


#idea: metafunction
function commandCheck()
{
    echo -e "Checking for $1"
    if [ $(command -v $1 ) ]; then
        # command/command package is installed

        # unsure if i will keep this echo
        echo -e "$1 already installed"

        return
    else

		echo
		echo -e "$1 is not installed, now installing"
        # if the package i am checking is inxi
        # ?? - Do i know distroBase at this point?

        if [ "$1" == "inxi" ] && [ "$distroBase" == "arch" ]; then
            inxiArchInstall
        else

            installApp "$1"

        fi
    fi

}

function wgetAndCurlCheck()
{
    detectPackageStatus "wget curl"

    return
}