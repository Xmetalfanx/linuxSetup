# Function to check for Debian supporte
function debianSupportedCheck()
{
    clear
    echo -e "Checking Debian Support status"

    if  [ "$lsbCodename" == "buster" ] || \
        [ "$lsbCodename" == "bullseye" ] || \
		[ "$lsbCodename" == "sid" ] || \
        [ "$lsbRelease" == "unstable" ] || \
        [ "$OSRELEASE_VERSION_ID" == "10" ] || \
        [ "$OSRELEASE_VERSION_ID" == "11" ]; then

        supported="yes"
    else
        supported="no"
    fi

    echo "supported: $supported"
}

# Checks for Debian spins
function debianSpinCheck()
{
	#TODO
	return

}

# Branch to get/check for info on supported version of Debian
function debianBranchCheck()
{
   # Here distroBase=Debian should be set

    ## TODO: added code for os-release file


	# in Sparky Linux .. lsbRelase is the Sparky version NUMBER
    if 	[ "$lsbRelease" = "stable" ] || \
		[ "$lsbCodeName" = "buster" ] || \
		[ "$lsbRelease" = "10" ]; then

		debianBranch="stable"
        rollingRelease="yes"

    elif 	[ "$lsbRelease" = "testing" ] || \
			[ "$lsbCodeName" = "bullseye" ] || \
			[ "$lsbRelease" = "11" ]; then
        debianBranch="testing"
        rollingRelease="yes"

    elif 	[ "$lsbRelease" = "unstable" ] || \
		[ "$lsbCodeName" = "sid" ]; then
        debianBranch='unstable'
        rollingRelease="yes"
    else
        echo -e "Debian branch could NOT be detected"
    fi

    ## Check the support status
    debianSupportedCheck

    userPrompt

}
########################################################################


# This needs Testing
# some of the extra packages listed are for if "apt-add-repo... " is not working
function debianAddUsefulPackages()
{
    packages="synaptic apt-xapian-index policykit-1-gnome software-properties-common dirmngr apt-transport-https lsb-release ca-certificates apt-transport-https dirmngr"
	clear
    echo -e "Adding $packages"
	userPrompt
    installApp "$packages"

	clear

}

# Think I found this in a guide
# the check doesn't seem right ... even if i am not getting errors i am not sure this is right-
function debianAddSudoToUser()
{
    clear
    checkSudoForUser=$(grep "$USER" /etc/passwd)

    # if not empty
    if [[ -n $checkSudoForUser ]]; then
        echo -e "It appears ${bold}$USER ${completeReset}already has sudo permissions"
    else
        echo -e "Adding sudo permissions to $USER"
        adduser $USER sudo

        echo -e "$USER now should have sudo permissions"
    fi

    userPrompt

}


###############################################################################################################
function debianAptSectionCheck()
{

    sectionTest=$(grep "^deb http*" /etc/apt/sources.list | grep "$1")

    # if not empty
    if [[ ! -z $sectionTest ]]; then
        echo -e "$1 does exist in sources.list file line"
    else
        echo -e "$1 does NOT exist in sources.list file line"
		echo
		echo -e "Do you want to enable $1 in software sources?"
		read -p "Y/N )?" enableSourceSelection

		case $enableSourceSelection in

			yes|Y|y) sudo apt-add-repository $1 ;;

			no|N|n)

				echo -e "To Expand the list of available packages, you may want to open (with root permissions) your /etc/apt/sources.list file and in the main lines you will probably see just \"main\" listed ... after that, type \"contrib\" and/or \"non-free\" "
        		echo -e "Than save and exit the text editor and run \"sudo apt update\" "

			return ;;


		esac


	fi

 	userPrompt

	#note: this should really only stop/pause and show a message if these entries  are not there ... otherwise there is no reason to pause/annoy the user

}

############################################
# sort of a meta function-
function debianContribAndNonFreeCheck()
{
    # put here so it only runs ONCE
	debianAddUsefulPackages

	# Cant i combine the two lines below?

	# Contrib Check
    debianAptSectionCheck "contrib"

    # Non-free check
    debianAptSectionCheck "non-free"

    clear

	echo -e "Refreshing Repos"
	$refresh


}

############################################################################


# Add Firmware related packages
function debianLinuxFirmmware()
{
    # needs non-free and contrib
	debianContribAndNonFreeCheck


	clear
    echo -e "Install Firmware related packages"
    installApp "gdebi firmware-linux-free firmware-linux-nonfree"

    userPrompt
}

# Add archive support
# issue: different DE's do better with different "archive" packages
function debianArchiveSupport()
{
    # needs non-free and contrib
	debianContribAndNonFreeCheck


	installApp "file-roller rar unrar"
}


#################################################

# I did this to possibly expand this later
function batchDebianTasks()
{
    debianContribAndNonFreeCheck



    ## Adds Synpatic and other simimar packages
    debianAddSynaptic

    # Add Archive support
    # debianArchiveSupport

    # Add Firmware packages
    debianLinuxFirmmware

}
