## Load config files
. $functionsdir/f_mainMenus.cfg
. $functionsdir/info/includeInfoDir.cfg
. $functionsdir/check/includeCheckDir.cfg

##########################################################
# Variables 
downloadListDir=$(eval pwd)/data/
menusDir=$(eval pwd)/menus/

kernel=`uname -r`
stripDQuotes='sed s/\"//g'
software="filezilla picard easytag deluge hexchat firefox deadbeef mpv smplayer variety dconf-editor gparted youtube-dl inxi mediainfo bleachbit fish git"


####################################################################
## Function Directories for each distro base 

fedoraDir=$(eval pwd)/functions/fedora/
opensuseDir=$(eval pwd)/functions/opensuse/
ubuntuFunctDir=$(eval pwd)/functions/ubuntu/

#####################################################################
themeHome=~/.themes
iconHome=~/.icons

## Why is this here? 
packageName=${packageURL/*\//}

# End Variables 
################################################

## Misc Functions

function paddingBorder()
{
  ## Doesn't appear to work atm, anyway
  printf "%*s" $COLUMNS | tr " " "=" 

}


function quitScript()
{
    clear
    echo "Goodbye"
    exit
}


function invalidSection()
{
    echo "invalid selection "
    sleep 2s
    x=1
}


function userPrompt()
{
  read -p "Press [Enter] to continue "
}


###########################################################
## IDEA: make this displayable from various parts of the scripts so if people forget different info, they can just hit a button and this function is called


## the only point for this is TESTING only ... a normal user wouldn't see this  function's output 
function mainDisplayDistroInfo()
{
  clear
  echo "Detected Distro base: " $distroBase
  echo
  echo "OSRELEASE_NAME:" $OSRELEASE_NAME
  echo "OSRELEASE_IDLIKE: "  $OSRELEASE_IDLIKE
  echo "OSRELEASE_ID: " $OSRELEASE_ID
  echo "OSRELEASE_VERSIONID: " $OSRELEASE_VERSIONID
  echo "OSRELEASE_VERSION: " $OSRELEASE_VERSION

  echo 
  echo "OSRELEASE_UBUNTU_CODENAME: " $OSRELEASE_UBUNTU_CODENAME
  echo  

  #######################################################
  ## Keep for now ... 
  ## echo -e "Your Desktop Environment:\t\t\t ${bold}$desktopNameWVersion ${completeReset}"
  ## echo -e "Your GTK Version:\t\t\t\t ${bold} ${gtkVersion:0:7} ${completeReset} \n"
  #########################################################

  echo
  echo -e "PACKAGE INFO test output"
  echo "Your distro's install command is: " $install
  echo "Your distro's refresh command is: " $refresh 
  echo "Your distro's update/upgrade command is: " $update 
  echo
  echo "Your Desktop: " $DE 
  #echo
  #echo "install software test: $install $software" 
  echo
  echo "GTK Version Detected: " $gtkVersion
  userPrompt
}

function intialTasks()
{
  ## Intial tasks to run before even displaying the menu 

  ## Issue I see ... the issue is I need to use inxi to get info to see what the distroBase is; HOWEVER, if inxi is NOT INSTALLED, the detection will have issues ... so "which comes first?"

  # Gets info about distro
  # This is located in the f_distoCheck.cfg file
  printf "Getting Info about distro..\n"
  intialChecks

  
  # Displays some info about the distro used 
  ## I think this is a test thing of output only ... for now
  ## reformatting it and still displaying it may be a good idea 
  mainDisplayDistroInfo

}


##################################################################3
## idea

# Similar to a "run all tasks" script, this will be the function that runs all the tasks that would be in the ForME scripts (maybe removed at some point from that folder )

## When this is called ... all the general checks and specific checks are DONE ... no need to redo checks 
function xmetalTasks()
{
  #Optimize mirrors/repo function
  ## for faster downloads 
  optimizeRepos

  # Universal Updater function here 
  universalUpgrade

  # Third party repo function
    ## This doesn't say add the cinnamon specific repos for say OpenSuse TW ..
    ## THIS DOES add (if Fedora) RPMFusion [both], (if openSuse) the general pacman repo 

  # Codec installation 
  # location: /functions/universal/software/f_multimediaSoftware.cfg 
  universalCodecInstall  

  # Add Common software, function 
  
}