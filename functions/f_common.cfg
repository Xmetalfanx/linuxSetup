## Load config files


. $functionsDir/universal/pmanagement/includePackageManager.cfg
## some includes in other locations MAY be redundant now ...


## Misc Functions
## 2019: not sure this is needed anymore..
function paddingBorder()
{
  ## Doesn't appear to work atm, anyway
  printf "%*s" $COLUMNS | tr " " "="

}
##############################################################
function quitScript()
{
    clear
    echo "Goodbye"
    exit
}

function invalidSection()
{
    echo "invalid selection "
    sleep 2s
    x=1
}

function userPrompt()
{
  read -p "Press [Enter] to continue "
}
##############################################


function supportStatusDetection()
{
  # EOL = actual date of the EOL
  # supported=yes or supported=no

  case $supported in

    yes) return ;;

    no)
        clear
        echo -e "Your distro/distro version of Linux is no longer supported"
        echo

        # idea: perhaps have another fuction that gives a link to the detected distro's homepage
        echo -e "Scripts Exited"
        exit ;;

    *) echo -e "Your Distro's support status can not be detected"

  esac

}

##############################################
function packageManDetection()
{
  ## TODO: put the vars in d-quotes 
  if [ $(command -v pacman) ]; then

      pmanager="pacman"

      install=$admin$pmanager" -S "
      refresh=$admin$pmanager" -$y"
      update=$admin$pmanager" -Syu"


    elif [ $(command -v dnf ) ]; then
      pmanager="dnf"

      install=$admin$pmanager" install"
      refresh=$admin$pmanager" check-update"
      update=$admin$pmanager" upgrade"

    #openSuse
    elif [ $(command -v zypper) ]; then
            pmanager="zypper"

            install=$admin$pmanager" install"
            refresh=$admin$pmanager" refresh"

            # update info missing due to up vs dup depending on what branch you are on

    # Solus
    elif [ $(command -v eopkg) ]; then
              pmanager="eopkg"

              install=$admin$pmanager" install"
              refresh=$admin$pmanager" "
              update=$admin$pmanager" up"

    # I dont like the way this looks
    elif  [ $(command -v apt) ]; then

            pmanager="apt"

            install=$admin$pmanager" install"
            refresh=$admin$pmanager" update"

            update=$admin$pmanager" upgrade"

    elif [ $(command -v apt-get) ]; then

            pmanager="apt-get"

            install=$admin$pmanager" install"
            refresh=$admin$pmanager" update"
            update=$admin$pmanager" upgrade"

            # KDE Neon updates needed here too?

      # Send to function to get more info about say Debian vs Ubuntu and what Ubuntu spin it could be
    fi

}


##########################################################################################



function intialTasks()
{

  # Gets info about distro
  # This is located in the f_generalInfo.cfg file
  printf "Getting Info about distro..\n"

  intialChecks

  # Displays some info about the distro used
  ## I think this is a test thing of output only ... for now
  ## reformatting it and still displaying it may be a good idea

  mainDisplayDistroInfo

}

##################################################################3

# Similar to a "run all tasks" script, this will be the function that runs all the tasks that would be in the ForME scripts (maybe removed at some point from that folder )

## When this is called ... all the general checks and specific checks are DONE ... no need to redo checks

function xmetalTasks()
{
  clear
  echo -e "Xmetal Task's selected"
  echo -e
  echo -e "Are you sure you want to run these tasks back to back?... if you interrupt them when they are running, there MAY be problems, down the road"

  read -p "Your Choice? (Y/N)" xmetalTasksChoice

  case $xmetalTasksChoice in

  [yY])

      # optimize mirrors/repo function for faster downloads
      # Location: /functions/universal/pmanagement/f_pmanagement.cfg

      clear
      echo -e "(If applicable) Optimizing Repos/Mirrors"
      optimizeRepo
      echo -e "Mirror/Repo Optimizing Done"
      userPrompt

      ##################################################################

      # Universal Updater
      echo -e "Updating Packages"
      universalUpdate
      echo -e "Packages Updated"


      #################################################################
      # Third party repo function
        ## This doesn't say add the cinnamon specific repos for say OpenSuse TW ..
        ## THIS DOES add (if Fedora) RPMFusion [both], (if openSuse) the general pacman repo

      echo -e "(If applicable) "
      universalExtraRepos

      ####################################################################


      # Codec installation
      # location: /functions/universal/software/f_multimediaSoftware.cfg
      echo -e "Installing Codecs"
      universalCodecInstall
      userPrompt

      #######################################################################

      # Add Common software, function
      clear
      echo -e "Installing commonly used Apps"
      echo -e
      echo -e "* There are some third party apps downloaded here"
      universalSoftwareInstaller
      userPrompt


      ##############################################################################
      # Install OMF - fish shell, Oh-My-Fish for the fish shell, and some OMF addons
      # location: /function/universal/software/f_cli_related.cfg
      clear
      echo -e "Installing fish shell and Oh-My-Fish Addition"
      metaFishShell
      echo -e "Fish shell Added"
      userPrompt

      ##############################################################

      clear
      echo "Installing some common theming"
      metaThemeInstall
      echo -e "Theming Added"
      userPrompt

      # Vivaldi/ Google Chrome?

    echo -e "Xmetal's Batch scripts are DONE"
    userPrompt
    clear

    ;;

    [nN]) return ;;

  esac


}