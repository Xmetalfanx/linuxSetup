function gitDL()
{
    stripFileInfo

    git clone $1
    echo -e "File Variable is now ${file}"
    userPrompt

    cd $file

    pwd
    userPrompt

}


#############################################################


# Todo: Add Openbox Arc Theme
function gitArcOpenBox
{
  # Source: https://github.com/dglava/arc-openbox/

  clear

  echo "Installing 'Unofficial' Arc Theme Component for OpenBox"
  userPrompt
  gitCloneDL https://github.com/dglava/arc-openbox.git

  mkdir $themeHome/Arcbox

}


##############################################################################

function MintyIcons
{

    echo "Installing Mint-y Icons "
    git clone https://github.com/linuxmint/mint-y-icons.git
    clear
    mkdir $iconHome/mint-y-icons
    cd mint-y-icons/usr/share/icons
    mv * $iconHome/mint-y-icons
    clear
}
################################################################
function gitThemesMenu
{

  . $dir/tasks/functions/f_common.cfg
  . $dir/tasks/themes/github/functions/gitFunctions.cfg

  #######################################################################
  x=1
  clear

  while [[ $x=1 ]]; do


      echo -e   "What Theme would you like to install?\n "
      echo -e   "1) \t Arc Theme and Icons Pack (includes Openbox Support)"

      echo -e   "\nM) \t Return to Main Menu"
      echo -e   "Q) \t Exit to Prompt\n\n"

      read -p "Your Choice?:" gitThemeSelection

      case $gitThemeSelection in

    1)  gitArcThemes
        gitArcIcons
        gitArcOpenBox
        echo "installed Arc"
        x=1
        ;;

    [mM]) bash "$rootdir"/xmetalLinuxScripts.sh
          ;;

    [qQ]) $commonFunctions
          quitScript
          ;;

      esac

  done
}



## MOVE THIS LATER 
function gitCloneInstall
{
  # $1  gitURL 

  #git clone $gitURL

  # matches longest match until / (double ##)
  gitRepoNameWExt=${gitURL##*/}

  gitRepoName=${gitRepoNameWExt%*.git}

  # Channge PWD 
  cd ~/Downloads

  mkdir $gitRepoName
  cd $gitRepoName

  userPrompt

  #makepkg -si 

  #cleanup 
  cd ..

  echo "cleanup"
  # remove directory
  rm -rf $gitRepoName

}