debian_menu_items=(
		1 'Install Linux Firmware Packages (Both)'
		2 'Install Intel MicroCode Package'
		3 'Install Archive Support'
		4 'Add a few useful packages including Synaptic'
		5 'Check for contrib and non-free sections in sourceslist and add them if desired'
		6 'Check/Add if not there, sudo permissions, for the current user'
		B 'Bulk Debian Tasks'
		M 'Return to Main Menu'
		Q 'Exit to Prompt'
	)

function debianMenuCaseStatement()
{

	case $debian_menu in

		1) debianLinuxFirmmare ;;
		2) installIntelMicroCode ;;
		3) debianArchiveSupport ;;
		4) debianAddUsefulPackages ;;
		5) debianContribAndNonFreeCheck ;;
		6) debianAddSudoToUser ;;
		B) batchDebianTasks ;;
		M) mainMenuDialog ;;
		Q) quitScript   ;;
	esac

}

function debianMenuDialog() {

	TITLE="Debian Menu"
	HEIGHT=25
	WIDTH=65
	CHOICEHEIGHT=15

	debian_menu=$(dialog 	--title "$TITLE" \
							--backtitle "$BACKTITLE" \
							--menu "$MENU" \
							30 60 $CHOICEHEIGHT \
							"${debian_menu_items[@]}" \
							3>&2 2>&1 1>&3)

	debianMenuCaseStatement

	# ending loop here
	menuLoop
}

function debianMenuEcho() {
	menuName="debianMenu"
	menuArrayName="debian_menu_items"
	currentMenuCaseStatementName="debianMenuCaseStatement"
	currentMenuSelectionVar="debian_menu_items"


	menuHeader

	# intiallize menu loop
	menuLoop=0

	if [ $menuLoop = 0 ]; then

		setupMenu "$menuArrayName"

		echo
		read -p "Your choice: " archMenuSelection

		debianMenuCaseStatement
	else
		return

	fi

	# for the menu to loop back as long as Q is not pressed
	menuLoop

}

function debianMenuType() {
	menuName="debianMenu"
	menuTitle="Xmetal's Debian Related Menu"


	detectMenuVariant
}