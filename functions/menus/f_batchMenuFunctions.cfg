<<<<<<< HEAD
function assignMenuName() {
	case $menuType in
    	"dialog") menuName=$baseMenuName"Dialog" ;;
    	"echo") menuName=$baseMenuName"Echo" ;;
		*) menuName="unknown menuName" ;;
	esac
}

# the name of the array is what gets passed
function setupMenu() {

	currentArrayName="$1"
	declare -n currentArray=${currentArrayName}

	for element in "${currentArray[@]}"
    do

		# get the length of that element
		elementLength=${#element}

		# check the length of the element
		if [ $elementLength -lt 2 ]; then
			menuKey=$element
			echo -en " $menuKey:\t"
		else
			menuText=$element
			echo -en "$menuText\n"
		fi

    done
}


function menuHeader() {

	clear
	echo -e " $menuBorder"
	echo -e " $menuTitle"
	echo -e " $menuBorder\v"
}


#idea for now: this is the Meta function
function echoMenuLoop() {

	menuHeader

	# intiallize menu loop
	menuLoop=0

	if [ $menuLoop = 0 ]; then
		setupMenu "$menuArrayName"

		echo
		read -p "Your choice: " $currentMenuSelectionVar

		# calls the case statement
		$currentMenuCaseStatementName
	else
		return
	fi

	menuLoop $echoMenuLoop

}
=======
function checkLengthOfElement() {

	if [ $elementLength -lt 2 ]; then
		menuKey=$element
		echo -en " $menuKey:\t"
	else
		menuText=$element
		echo -en "$menuText\n"
	fi
}
<<<<<<< HEAD
>>>>>>> 11543977 (menu work and code refactoring)
=======

function menuHeader() {

	clear
	echo -e " $menuBorder"
	echo -e " $menuTitle"
	echo -e " $menuBorder\v"
}
>>>>>>> 28e67e53 (move to function for menu header display)
