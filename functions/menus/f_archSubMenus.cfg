
arch_menu_items=(
		1 '[Sub-Menu] AUR Support Options'
		2 '[Sub-Menu] Manjaro specific'
		3 'Reset to Original Mirrors'
		4 'Add Sound Support'
		5 'Adds Archive Support'
		M 'Return to Main Menu'
		Q 'Exit to Prompt'
	)



function archMenuCaseStatement() {

	case $archMenuSelection in

			1) aurHelperMenu ;;
			2) manjaroMenu ;;
			3) resetMirrors ;;
			4) soundSupport ;;
			5) archiveSupport ;;
			[mM]) mainMenuDialog ;;
			[qQ])
					quitScript
					x=1 ;;
			* ) invalidSection ;;

		esac
}


#######################################################################################

function archMenuEcho() {
menuTitle="Xmetal's Arch/Manjaro Base Menu"

	clear
	echo -e " $menuBorder"
	echo -e " $menuTitle"
	echo -e " $menuBorder\v"

	# intiallize menu loop
	menuLoop=0

	if [ $menuLoop = 0 ]; then

		# while there are elements in the array
		for element in "${arch_menu_items[@]}"
		do

			# get the length of that element
			elementLength=${#element}

			checkLengthOfElement

			menuKey=""
			menuText=""

		done

		echo
		read -p "Your choice: " archMenuSelection

		archMenuCaseStatement
	else
		return

	fi

	# for the menu to loop back as long as Q is not pressed
	menuLoop
}




function archMenuDialog()
{

	TITLE="Arch Menu"
	MENU="Please Select an option"
	HEIGHT=25
	WIDTH=65
	CHOICEHEIGHT=15



	arch_menu=$(dialog 	--title "$TITLE" \
						--backtitle "$BACKTITLE" \
						--menu "$MENU" \
						15 45 $CHOICEHEIGHT \
						"${arch_menu_items[@]}" \
						3>&2 2>&1 1>&3)

	case $arch_menu in

		1) aurHelperMenu ;;
		2) manjaroMenu ;;
		3) resetMirrors ;;
		4) soundSupport	;;
		5) archiveSupport ;;
		M) mainMenuDialog ;;
		Q) quitScript   ;;
	esac

	# ending loop here
	menuLoop

}

