mainMenuArray=(
    1 'Update System'
    2 'Optimize Mirrors'
    3 'Arch Related'
    4 'Debian Related'
    5 'Fedora Related'
    6 'OpenSUSE Related'
    7 'Solus Related'
    8 'Ubuntu Related'
	C 'Install Multimedia Codecs'
	I 'Display Info about current install'
	R "Install Third Party Codecs"
    S 'Install Software'
    T 'Install Theming'
	X 'Xmetal Bulk Tasks'
	Q 'Quit To Prompt'
)

# Idea: for either type of Menu
function mainMenuCaseStatement() {

	case $mainMenuSelection in

		1) universalUpdate

            ## For updating Snaps and/or Flatpaks
            universalAppUpdates
            ;;

        2) optimizeRepo ;;

        # Located in /functions/f_mainSubMenus.cfg
        3) archMenuType ;;
        4) debianMenuType ;;
        5) mainFedoraMenu ;;
        6) mainOpenSUSEMenu ;;
        7) mainSolusMenu ;;
        8) mainUbuntuMenu ;;

        [cC]) universalCodecInstall ;;
        [iI]) massInfoOutput ;;
        [rR]) thirdPartyRepoCheck ;;
        [sS]) universalSoftwareMenu ;;
        [tT]) universalThemingMenu ;;
        [xX]) xmetalTasks ;;
        [qQ])
			quitScript
			menuLoop=1
			break
			;;
        *) invalidSection ;;

	esac
}



# night time note: there is no looping yet
function mainMenuDialog(){

	TITLE="Main Menu"
	HEIGHT=25
	WIDTH=65
	CHOICEHEIGHT=15

	mainMenuSelection=$(dialog 	--title "$TITLE" \
						--backtitle "$BACKTITLE" \
						--menu "$MENU" \
						$HEIGHT $WIDTH $CHOICEHEIGHT \
						"${mainMenuArray[@]}" \
						3>&2 2>&1 1>&3)

	mainMenuCaseStatement

	# still needed?
	menuLoop

}


#######################################################


function mainMenuEcho() {

	menuName="mainMenuEcho"
	menuTitle="Xmetal Linux Scripts Main Menu"

	clear
	echo -e " $menuBorder"
	echo -e " $menuTitle"
	echo -e " $menuBorder\v"

	# intiallize menu loop
	menuLoop=0

	if [ $menuLoop = 0 ]; then

		# while there are elements in the array
		for element in "${mainMenuArray[@]}"
		do

			# get the length of that element
			elementLength=${#element}

			checkLengthOfElement

			menuKey=""
			menuText=""

		done

		echo
		read -p "Your choice: " mainMenuSelection

		mainMenuCaseStatement
	else
		return

	fi

	# for the menu to loop back as long as Q is not pressed
	menuLoop $mainMenuEcho
}
#####################################################

# META function
function mainMenuType() {
	menuName="mainMenu"

	detectMenuVariant
}