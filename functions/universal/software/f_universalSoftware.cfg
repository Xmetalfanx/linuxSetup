# Meta function for installing build essentials
function universalBuildEssentials()
{

	fancy_message info "About to install build essential packages based on your distro"

	case $distroBase in

		arch) $install base-devel ;;

		debian) $install build-essential ;;
		fedora)
			sudo dnf groupinstall "Development Tools"
			sudo dnf groupinstall "C Development Tools and Libraries"

			$install zlib-devel openssl-devel expat-devel ffmpeg ffmpeg-devel qt5-qtbase-devel
			;;

		opensuse) $install -t pattern devel_basis ;;

		solus) sudo eopkg it -c system.devel ;;

		ubuntu)
			$install build-essential pkg-config libc6-dev libssl-dev libexpat1-dev libavcodec-dev libgl1-mesa-dev zlib1g-dev

	esac

	fancy_message info "Build Essentials are now installed"
	userPrompt

}

function ytdlp-pip() {
	echo -e "Installing yt-dlp with pip"
	
	# official instructions listed on: https://github.com/yt-dlp/yt-dlp/wiki/Installation#with-pip
	python3 -m pip install -U yt-dlp
}


##################################################################################3##
# July 2022: i think this function was only created to cleanup the function BELOW IT ... consider remerging the two and calling that instead
function massSoftwareInstall()
{

	#refresh/update, the repos first
	refreshRepositories

	## a better name is needed
	# this file is in a subfolder now ... this seems like this "link" would not work
	installAppList "defaultRepoSoftware.list"
	userPrompt

	# Install Firefox ... due to package name and/or case issues in the package names, i put these by themselves
	# Feb 2023: commented out since the code never got back after this step was done ... at least I dont think it did
	#installFirefoxMeta

	# the point is use a default package manager's version when possible... the version a distro provides

	# yt-dlp: https://github.com/yt-dlp/yt-dlp
	case $distroBase in
		arch|debian|fedora|ubuntu) installApp "yt-dlp"
	esac

	case $distroBase in
		opensuse)
			[ "${openSUSEBranch}" == "tumbleweed" ] && installApp "yt-dlp"
			[ "${openSUSEBranch}" == "leap" ] && ytdlp-pip ;;
		solus) fancy_message info "not coded/supported ... yet"
			;;

	esac

}



# Metafuntion
function universalSoftwareInstaller {

    #Installs software located in most distro bases
    massSoftwareInstall

    #installs vscode
    installVSCode

    #install XNViewMP
    installXNViewMP

    # tiny Media Manager install
    installTinyMediaManager

    # etcher install
    installEtcher

    installMakeMKV

}
