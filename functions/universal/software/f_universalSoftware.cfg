
#########################################################################

## Question to self: WHAT is the point of having "packageName" in these functions? ... shouldn't stripFileInfo find that info? ... is this var being here a leftover from the old pre-template way of doing things?

#############################################################################

function massSoftwareInstall
{
  # Call to third party repo check 

  echo -e "About to install $software"
  userPrompt
  $install $software 

}

# Meta function 
function universalBuildEssentials()
{

  echo -e "About to install build essential packages based on your distro"

  case $distroBase in 

  arch) sudo pacman -Sy base-devel ;; 

  fedora) 
      sudo dnf groupinstall "Development Tools"
      sudo dnf groupinstall "C Development Tools and Libraries"

      $install zlib-devel openssl-devel expat-devel ffmpeg ffmpeg-devel qt5-qtbase-devel
      ;; 

  opensuse) sudo zypper install -t pattern devel_basis ;; 

  solus) sudo eopkg it -c system.devel ;; 

  ubuntu)
    
    $install build-essential pkg-config libc6-dev libssl-dev libexpat1-dev libavcodec-dev libgl1-mesa-dev libqt4-dev zlib1g-dev ;; 

  esac 


}

function etcherInstall()
{
  programName=Etcher

  # Todo - make this URL dynamic 
  packageURL=https://github.com/balena-io/etcher/releases/download/v1.5.5/balena-etcher-electron-1.5.5-linux-x64.zip


  externalDownload $programName $packageURL
  
  # note to self comment to be removed later: HERE the etcher AppImage file is extracted to the user's Download folder 
  userPrompt
  echo 
  echo -e "Etcher's AppImage is now located in your Downloads folder"
  echo -e "Please navigate to that folder and click the icon to run it"
  echo -e "or navigate to it in a terminal and type \"./Etcher-linux-x64.AppImage\" "
}


##############################################################################################################
# Java Section start

function javaInstall()
{

  # Note to self: these package names will have to be checked 
  case $distroBase in 

  arch) 
      $install java-runtime-common
  ;; 
  
  fedora) 
    # you have to select the package (due to numbering) manually ... this may be tricky
    # I need to boot into Fedora and check myself 
    return ;; 

  opensuse) 
    # source: https://en.opensuse.org/SDB:Installing_Java
    
    oracleJavaURL="https://javadl.oracle.com/webapps/download/AutoDL?BundleId=238718_478a62b7d4e34b78b671c754eaaf38ab"
    
    cd /Downloads/
    mkdir javaInstall
    cd javaInstall

    # this needs to be in quotes for wget and fish 
    wget -O javaJRE.rpm $oracleJavaURL

    # install RPM 
    sudo rpm -ivh javaJRE.rpm 

    # cleanup
    rm *.rpm 
    cd .. 
    rm javaInstall

    # This just downloads it so far  
    
    ;; 

  solus) 
    # openjfx-8 ... not just "openjfx"
    $install openjfx-8 
    ;; 


  esac 

  $install $javaPackages 

}


function checkForJava()
{
  # JavaDetected
  if  [ -z "java --version" ] || \
      [ -z "which jdk" ] || \ 
      [ -z "which java" ]; then
        
        echo -e "Java is detected"
        
        # Testing
        userPrompt

  else

    echo -e "JRE not detected"
    echo -e "About to install"
    
    # Testing only 
    userPrompt


    javaInstall
  
  fi 

}

# End of Java section 
#######################################################################################



# Metafuntion
function universalSoftwareInstaller {
    
    # $software should carry over from f_common.cfg 
    
    clear 
    echo -e "About to install $software"
    userPrompt


    # problem: in Fedora this throws errors if RPM Fusion is not installed first ... I would assume that OpenSuse and Pacman is the same way 
    $install $software

    vscodeInstall

    xnViewMPInstall

    # tiny Media Manager install 
    tinyMediaManagerInstall

    # etcher install
    etcherInstall

    makeMKVInstall


}