
# NOTE TO SELF: there is code for this in the debian section i did before making this a universal thing... move that code here and remove that code, as it is no longer needed
function installIntelMicroCode
{
  clear
  echo -e "Installing the Intel Microcode package"

  case $distroBase in

    arch) installApp "intel-ucode" ;;

    debian|solus|ubuntu) installApp "intel-microcode" ;;

    ## This for Leap AND TW? ...
    # IT WORKS on TW but I am not 100% sure it's the correct package
    opensuse) installApp "ucode-intel" ;;

    # seems like the right package
    fedora) installApp "iucode-tool" ;;

  esac

}

#############################################################################
function installBleachbit()
{
  case $fedoraVersion in

    # ?? add "32" to this?
    31) echo -e "Bleachbit not in the Fedora 31 Repos, due to a Python issue, according to the Bleachbit maintainer for Fedora" ;;

    *) installApp "bleachbit" ;;

  esac


}

##################################################################################3##
## Cant remember  the point of this but leave it for now
function massSoftwareInstall()
{
  ## Checks if distro is supported
  supportStatusDetection

  # Message to debian users that they may want/need to add "contrib" and "nonfree" to sources.list
  # ... if they already have, this ... could get annoying
  case $distroBase in
    debian) debianMessage ;;
  esac

  # no echo/prompt here, as i probably put the echo in the function itself
  thirdPartyRepoCheck

  #refresh/update, the repos first
  $refresh

  ## a better name is needed
  installAppList "defaultRepoSoftware.list"
  userPrompt

  # Install Firefox and Bleachbit ... due to package name and/or case issues in the package names, i put these by themselves
  installFirefox
  installBleachbit

  # for Variety
  # this may be a good place for other distro and odd "dep issues"
  case $distroBase in


    opensuse)
		echo -e "Installing Python Request file that is needed for Variety in OpenSUSE"
		installApp "python-requests" ;;

    *) return ;;

  esac

}
#########################################################################

# Meta function for installing build essentials
function universalBuildEssentials()
{

  echo -e "About to install build essential packages based on your distro"

  case $distroBase in

  arch) sudo pacman -Sy base-devel ;;

  debian) installApp "build-essential" ;;
  fedora)
      sudo dnf groupinstall "Development Tools"
      sudo dnf groupinstall "C Development Tools and Libraries"

      installApp "zlib-devel openssl-devel expat-devel ffmpeg ffmpeg-devel qt5-qtbase-devel"
      ;;

  opensuse) sudo zypper install -t pattern devel_basis ;;

  solus) sudo eopkg it -c system.devel ;;

  ubuntu)
      # This seems like too much code
      if [ "$OSRELEASE_UBUNTU_CODENAME"  == "focal" ]; then
          # libqt4-dev was dropped in 20.04 ... if i find out nothing in my scripts REALLY needs it ... i may just remove this extra code later and K I S S again and make the list EXCLUDING that lib
          installApp "build-essential pkg-config libc6-dev libssl-dev libexpat1-dev libavcodec-dev libgl1-mesa-dev zlib1g-dev"

      elif [ "$OSRELEASE_UBUNTU_CODENAME"  == "bionic" ] || \
           [ "$OSRELEASE_UBUNTU_CODENAME"  == "eoan" ]; then

          installApp "build-essential pkg-config libc6-dev libssl-dev libexpat1-dev libavcodec-dev libgl1-mesa-dev libqt4-dev zlib1g-dev"

      else
          echo -e "Your current Ubuntu branch is not supported"

      fi

  esac

}

###################################################################################

function installEtcher()
{
  programName="etcher"
  programTitle="Etcher"
  etcherURL=$(curl -s "https://github.com/balena-io/etcher/releases" | grep -m1 "x64*.AppImage" | cut -d\" -f2)
  packageURL=$githubURL$etcherURL

  metaExternalDownload $programName $packageURL

}

##########################################################################


##############################################################################################################
## Java Section start

function installJava()
{

  clear
  echo -e "About to install Java support"


  # Note to self: these package names will have to be checked
  case $distroBase in

    arch)
        installApp "java-runtime-common" ;;

    fedora|opensuse)
      # UNTESTED on Fedora ... taking a chance i can use the same code for both since they both use the offical RPM from Oracle

      # Source: https://www.digitalocean.com/community/tutorials/how-to-install-java-on-centos-and-fedora

      # source for OpenSuse: https://en.opensuse.org/SDB:Installing_Java

      oracleJavaURL="https://javadl.oracle.com/webapps/download/AutoDL?BundleId=238718_478a62b7d4e34b78b671c754eaaf38ab"

      # Enter user's Downloads directory
      cd $downloadsDir
      clear

      # this needs to be in quotes for wget and fish
      echo -e "Downloading Java RPM from Oracle"
      wget -O javaJRE.rpm --no-cookies --no-check-certificate --header "Cookie: gpw_e24=http%3A%2F%2Fwww.oracle.com%2F; oraclelicense=accept-securebackup-cookie" "$oracleJavaURL"

      # install RPM
      echo -e "Installing Java RPM file from Oracle"
      sudo rpm -ivh javaJRE.rpm
      userPrompt

      # cleanup
      echo -e "Removing Java RPM file"
      rm javaJRE.rpm

      ;;

    solus)
      # openjfx-8 ... not just "openjfx"

      ## This seems like it's going to be an issue version wise
      installApp "openjfx-8"
      ;;

    debian|ubuntu) installApp "default-jre" ;;

    *) echo -e "Distro Base not detected, Java not installed" ;;

  esac

  ## leave this for now (commented out), but I dont see where i ever declared what $javaPackage is ...
  #$install $javaPackages

  ###############
  userPrompt
  ###################
}


function checkForJava()
{
  javaPresent="openjdk"
  javaVersion=$(java --version)

  # The first check seems ok in Ubuntu and Arch ... but has an error message to "java virtual machine can not start" or something like that ... but that is where the second check should come in


  clear
  echo -e "Checking for Java "

  if  [ "$javaVersion" == *"$javaPresent"* ] || \
      [ ! -z "$(which java)" ]; then
       echo -e "Java is detected"
       userPrompt
  else

    echo -e "JRE not detected"
    echo -e "About to install Java support"
    userPrompt

    installJava

  fi

}

## End of Java section
#######################################################################################


# Metafuntion
function universalSoftwareInstaller {

    #Installs software located in most distro bases
    massSoftwareInstall

    #installs vscode
    installVSCode

    #install XNViewMP
    installXNViewMP

    # tiny Media Manager install
    installTinyMediaManager

    # etcher install
    installEtcher

    installMakeMKV

}