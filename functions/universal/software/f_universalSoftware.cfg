
#########################################################################

## Question to self: WHAT is the point of having "packageName" in these functions? ... shouldn't stripFileInfo find that info? ... is this var being here a leftover from the old pre-template way of doing things?

#############################################################################



# the plan: call this instead of just "$install $software" in the menus
# some distro bases have issues that may be able to be solved by doing it this way 
function massSoftwareInstall()
{
  # no comment here as i probably put the echo in the function itself 
  thirdPartyRepoCheck 

  
  echo -e "About to install $software"
  userPrompt
  $install $software 

  # for Variety 
  # this may be a good place for other distro and odd "dep issues"
  case $distroBase in 

    opensuse) $install python-requests ;; 
  
    *) returm ;; 

  esac

}

# Meta function 
function universalBuildEssentials()
{

  echo -e "About to install build essential packages based on your distro"

  case $distroBase in 

  arch) sudo pacman -Sy base-devel ;; 

  fedora) 
      sudo dnf groupinstall "Development Tools"
      sudo dnf groupinstall "C Development Tools and Libraries"

      $install zlib-devel openssl-devel expat-devel ffmpeg ffmpeg-devel qt5-qtbase-devel
      ;; 

  opensuse) sudo zypper install -t pattern devel_basis ;; 

  solus) sudo eopkg it -c system.devel ;; 

  ubuntu)
    
    $install build-essential pkg-config libc6-dev libssl-dev libexpat1-dev libavcodec-dev libgl1-mesa-dev libqt4-dev zlib1g-dev ;; 

  esac 


}

function etcherInstall()
{
  programName="Etcher"
  releaseURL=$(curl -s "https://github.com/balena-io/etcher/releases" | grep -m1 AppImage | cut -d\" -f2 )

  packageURL=$githubURL$releaseURL

  cd ~/Downloads
  wget $packageURL

  # note to self: Maybe reword this later 
  echo 
  echo -e "Etcher's AppImage is now located in your Downloads folder"
  echo -e "Please navigate to that folder and click the icon to run it"
  echo -e "or navigate to it in a terminal and type \"./Etcher-linux-x64.AppImage\" "
  echo
  echo -e "If you have issues, you may have to make it executable, before running it"
}


##############################################################################################################
# Java Section start

function javaInstall()
{

  # Note to self: these package names will have to be checked 
  case $distroBase in 

  arch) 
      $install java-runtime-common
  ;; 
  
  fedora) 
    # you have to select the package (due to numbering) manually ... this may be tricky
    # I need to boot into Fedora and check myself 
    return ;; 

  opensuse) 
    # source: https://en.opensuse.org/SDB:Installing_Java
    
    oracleJavaURL="https://javadl.oracle.com/webapps/download/AutoDL?BundleId=238718_478a62b7d4e34b78b671c754eaaf38ab"
    
    cd /Downloads/
    mkdir javaInstall
    cd javaInstall

    # this needs to be in quotes for wget and fish 
    wget -O javaJRE.rpm $oracleJavaURL

    # install RPM 
    sudo rpm -ivh javaJRE.rpm 

    # cleanup
    rm *.rpm 
    cd .. 
    rm javaInstall

    # This just downloads it so far  
    
    ;; 

  solus) 
    # openjfx-8 ... not just "openjfx"
    $install openjfx-8 
    ;; 


  esac 

  $install $javaPackages 

}


function checkForJava()
{
  # JavaDetected

  clear
  echo -e "Checking for Java "


  if  [ -z "java --version" ] || \
      [ -z "which jdk" ] || \ 
      [ -z "which java" ]; then
        
        echo -e "Java is detected"
        
        # Testing
        userPrompt

  else

    echo -e "JRE not detected"
    echo -e "About to install"
    
    # Testing only 
    #userPrompt

    javaInstall
  
  fi 

}

# End of Java section 
#######################################################################################



# Metafuntion
function universalSoftwareInstaller {
    
    
    vscodeInstall

    xnViewMPInstall

    # tiny Media Manager install 
    tinyMediaManagerInstall

    # etcher install
    etcherInstall

    makeMKVInstall


}