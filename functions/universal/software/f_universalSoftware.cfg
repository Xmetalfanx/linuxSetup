
# NOTE TO SELF: there is code for this in the debian section i did before making this a universal thing... move that code here and remove that code, as it is no longer needed
function installIntelMicroCode
{
  clear
  echo -e "Installing the Intel Microcode package"

  case $distroBase in

      arch) $install intel-ucode ;;

      debian|opensuse|ubuntu) $install intel-microcode ;;

      # seems like the right package
      fedora) $install iucode-tool ;;

      solus)  return ;;


  esac


}

#############################################################################


##################################################################################3##
## Cant remember  the point of this but leave it for now
function massSoftwareInstall()
{
  case $distroBase in

    debian) debianMessage ;;

  esac


  # no comment here as i probably put the echo in the function itself
  thirdPartyRepoCheck

  #refresh repos first
  $refresh

  echo -e "About to install $software"
  userPrompt
  $install $software

  # Install Firefox
  installFirefox

  # for Variety
  # this may be a good place for other distro and odd "dep issues"
  case $distroBase in

    opensuse) $install python-requests ;;

    *) return ;;

  esac

}
#########################################################################

# Meta function for installing build essentials
function universalBuildEssentials()
{

  echo -e "About to install build essential packages based on your distro"

  case $distroBase in

  arch) sudo pacman -Sy base-devel ;;

  debian) $install build-essential ;;
  fedora)
      sudo dnf groupinstall "Development Tools"
      sudo dnf groupinstall "C Development Tools and Libraries"

      $install zlib-devel openssl-devel expat-devel ffmpeg ffmpeg-devel qt5-qtbase-devel
      ;;

  opensuse) sudo zypper install -t pattern devel_basis ;;

  solus) sudo eopkg it -c system.devel ;;

  ubuntu)

    $install build-essential pkg-config libc6-dev libssl-dev libexpat1-dev libavcodec-dev libgl1-mesa-dev libqt4-dev zlib1g-dev ;;

  esac

}

###################################################################################

function etcherInstall()
{
  programName="etcher"
  programTitle="Etcher"
  packageURL=$(curl -s "https://github.com/balena-io/etcher/releases" | grep -m1 AppImage | cut -d\" -f2)

  metaExternalDownload $programName $packageURL

}

##########################################################################


##############################################################################################################
## Java Section start

function javaInstall()
{

  # Note to self: these package names will have to be checked
  case $distroBase in

  arch)
      $install java-runtime-common
  ;;

  fedora)
    # you have to select the package (due to numbering) manually ... this may be tricky
    # I need to boot into Fedora and check myself
    return ;;

  opensuse)
    # source: https://en.opensuse.org/SDB:Installing_Java

    oracleJavaURL="https://javadl.oracle.com/webapps/download/AutoDL?BundleId=238718_478a62b7d4e34b78b671c754eaaf38ab"

    cd $downloadsDir
    mkdir javaInstall
    cd javaInstall

    # this needs to be in quotes for wget and fish
    wget -O javaJRE.rpm $oracleJavaURL

    # install RPM
    sudo rpm -ivh javaJRE.rpm

    # cleanup
    rm *.rpm
    cd ..
    rm javaInstall

    # This just downloads it so far

    ;;

  solus)
    # openjfx-8 ... not just "openjfx"
    $install openjfx-8
    ;;


  esac

  $install $javaPackages

}


function checkForJava()
{
  # JavaDetected

  clear
  echo -e "Checking for Java "

  if  [ "java -version 2>&1 >/dev/null" ]; then

        echo -e "Java is detected"

  else

    echo -e "JRE not detected"
    echo -e "About to install"

    javaInstall

  fi

}

## End of Java section
#######################################################################################


# Metafuntion
function universalSoftwareInstaller {

    #Installs software located in most distro bases
    massSoftwareInstall

    #installs vscode
    vscodeInstall

    #install XNViewMP
    xnViewMPInstall

    # tiny Media Manager install
    tinyMediaManagerInstall

    # etcher install
    etcherInstall


    makeMKVInstall


}