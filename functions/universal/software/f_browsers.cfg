. $uniFunctionDir/software/browsers/includeBrowsersDir.cfg
<<<<<<< HEAD

#########################################################################################
# Chromium related

# function for default repo
function installChromiumDefault() {
	clear
	fancy_message action "Installing Chromium Web Browser"
	installApp $programName

	# Addition for (only?) Ubuntu
	case $distroBase in
		ubuntu) installApp "chromium-codecs-ffmpeg" ;;
	esac

}

<<<<<<< HEAD
function chromiumMenu() {

	x=1

	while [[ $x=1 ]]; do
    	clear
		echo -e "Chromium Installation Menu"
		echo -e "1. \tDownload Chromium from your distro's default repo"
		echo -e "2. \tInstall Chromium Flatpak"
		echo -e "3. \tInstall Chromium Snap"

		echo -e 	"m. \t Return to Main Menu"
		echo -e		"q. \t Exit to Prompt\n\n"

		read -p  "Your Choice?:" chromiumInstallSelection


		case $chromiumInstallSelection in

			1) installChromiumDefault
				x=0 ;;

			2)
				# flatpak support is checked in the function below
				installFlatpakApp $chromiumFP
				x=0 ;;

			3)
				# snap support is checked


				snapType="normal"
				snapName="chromium"
				installSnapApp $snapType $snapName

				snapName="chromium-ffmpeg"
				installSnapApp $snapType $snapName

				# clear vars
				snapType=""
				snapName=""

				x=0 ;;

<<<<<<< HEAD
<<<<<<< HEAD
			[mM]) mainMenuDialog ;;
=======
			[mM]) dialogMenu ;;
>>>>>>> 92e2edc0 (Menu Work)
=======
			[mM]) mainMenuDialog ;;
>>>>>>> 3abf306d (submenu redo)

			[qQ]) quitScript   ;;

			* ) invalidSection ;;

		esac

	done
}

=======
>>>>>>> b574982e (most all menus working)
function installChromiumMeta() {
	programTitle="Chromium"

	case $distroBase in
		arch|debian|fedora|opensuse|solus) programName="chromium" ;;
		ubuntu) programName="chromium-browser" ;;
	esac

	chromiumInstallMenuType

}

# End Chromium Related
################################################################################

function installUngoogledChromium() {
	programName="ungoogled-chromium"
	programTitle=""
	programHomepage=""

	# seems many options the official page lists haven't been maintained in years.

<<<<<<< HEAD
<<<<<<< HEAD
##################################################################################
## Google Chrome Related

## Cant remember where i found instructions to add the key but does installing the DEB or RPM do that for you? (at least in Google Chrome's case? ... if so this seems like an un-needed function )

# I THINK I may have had this function for "adding the Chome repo" vs just installing the RPM or DEB
function addGoogleChromeKey
{
	## Assign Chrome Key URL to a variable
	pgpkey="https://dl.google.com/linux/linux_signing_key.pub"
	pgpkeyname=$(basename $gpgpkey)

	clear

	## Adding Google Chrome's Key
	fancy_message action "Getting key information needed for Google Chrome"

	case $distroBase in

		fedora|opensuse) sudo rpm --import $chromegpgpkey ;;

		debian|ubuntu)

			## Adding Google Chrome's Key
			addGPGKey "$gpgKey" "%gpgkeyname" ;;

		*)  fancy_message info "The distro you are on either can not be detected or is not supported by my scripts, here " ;;

	esac

}

# metaFunction for Google Chrome
function installChrome()
{
	# this name seems wrong ... like it should not be declared here 
		# idea: declare it as "google-chrome" or "google-chrome-stable", when needed
	programName="google-chrome"
	programTitle="Google Chrome"

	rpmURL="https://dl.google.com/linux/direct/google-chrome-stable_current_x86_64.rpm"
	debURL="https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb"

	case $distroBase in

		arch) aurAppInstall google-chrome ;;

		fedora|opensuse)

			packageURL=$rpmURL
			metaExternalDownload ${programTitle} ${packageURL} ;;

		solus)

			# Instructions FROM Solus themselves
			sudo eopkg bi --ignore-safety https://raw.githubusercontent.com/getsolus/3rd-party/master/network/web/browser/google-chrome-stable/pspec.xml
			sudo eopkg it google-chrome-*.eopkg;
			sudo rm google-chrome-*.eopkg
			;;

		debian|ubuntu)

			if [ "${debgetInstalled}" == "yes" ]; then fancy_message action "installing ${programName}, with deb-get"; deb-get install ${programName}-stable; userPrompt; return; fi
				packageURL=$debURL
				metaExternalDownload ${programTitle} ${packageURL}
			;;

		*)
			fancy_message action "Error installing Google Chrome"
			return ;;

		esac

}
## End of Google Chrome Section
###################################################################


###################################################################
# Firefox Section

# Function to download tarball from Mozilla's site
function installFirefoxTarball() {

	packageURL=$(curl -s "https://download.mozilla.org/?product=firefox-latest-ssl&os=linux64&lang=en-US" | awk -F \" '{ print $2}')

	fancy_message action "Downloading Firefox tar file from Mozilla"
	metaExternalDownload $programName $packageURL


	clear
	fancy_message info "Firefox Tar file downloaded and extracted.\n"
	echo -e "To run Firefox, navigate to the Firefox folder in your Downloads folder, and run './firefox.sh' "

	## toDO: add a menu option to add it to user's menus

}

<<<<<<< HEAD
function firefoxChoiceMenu()
{

<<<<<<< HEAD
	x=1

	while [[ $x=1 ]]; do
    	clear
		echo -e "Firefox Installation Menu"
		echo -e "1. \tDownload Firefox from your distro's default repo"
		echo -e "2. \tDownload the LATEST Firefox Archive from Mozilla? "
		echo -e "3. \tInstall Firefox Flatpak"
		echo -e "4. \tInstall Firefox Snap"

		echo -e 	"m. \t Return to Main Menu"
		echo -e		"q. \t Exit to Prompt\n\n"

		read -p  "Your Choice?:" firefoxInstallSelection


		case $firefoxInstallSelection in

			## Inside the f_universalSoftware.cfg file
			# $progName used since some distros have other names than just "firefox" for the package
			1) installApp "$progName"
				x=0 ;;

			2) installFirefoxTarball
				x=0 ;;

			3)
				# flatpak support is checked in the function below
				installFlatpakApp $firefoxFP
				x=0 ;;

			4)
				# snap support is checked

				snapName="firefox"
				snapType="normal"

				installSnapApp $snapName $snapType
				x=0 ;;


<<<<<<< HEAD
<<<<<<< HEAD
			[mM]) mainMenuDialog ;;
=======
			[mM]) dialogMenu ;;
>>>>>>> 92e2edc0 (Menu Work)
=======
			[mM]) mainMenuDialog ;;
>>>>>>> 3abf306d (submenu redo)

			[qQ]) quitScript   ;;

			* ) invalidSection ;;


		esac

	done

}
=======
>>>>>>> b574982e (most all menus working)

=======
>>>>>>> 341e0b90 (fixes after git rebase mishap)
# Meta function
function installFirefoxMeta() {
	programTitle="Firefox"

	# ONLY because OpenSUSE and Debian, names it differently

	# 1 - Assign programName variable
	case $distroBase in
		debian) programName="firefox-esr" ;;
		opensuse) programName="MozillaFirefox" ;;
		arch|fedora|solus|ubuntu)  programName="firefox" ;;
	esac


	clear


	# the POINT is to give the user the choice of
		# default repo
		# tarball from Firefox's website
		# Flatpak
		# snap

	firefoxInstallMenuType

}

#############################################################################

# this seems like an issue atm since i think it will run line by line
function firefoxRepoPriority() {

	#Step 3: Next, alter the Firefox package priority to ensure the PPA/deb/apt version of Firefox is preferred. This can be done using a slither of code from FosTips (copy and paste it whole, not line by line):

	clear

	fancy_message action "Step 3 of 5: Pin the Mozilla PPA's Prioriy"

	# without the -r, the spaces/tabs preceeding the line are printed
	echo -e 'Package: firefox*
		\rPin: release o=LP-PPA-mozillateam
		\rPin-Priority: 501

		\rPackage: firefox*
		\rPin: release o=Ubuntu
		\rPin-Priority: -1
	' | sudo tee /etc/apt/preferences.d/mozilla-firefox

	userPrompt

}

function removeAndDisableFirefoxSnap(){

	# 1 - remove the snap
	clear
	fancy_message action "Step 1 of 5: Disable and Remove the Firefox Snap"

	fancy_message action "Disabling Firefox Snap"
	snap disable firefox

	fancy_message action "Removing Firefox Snap"
	snap remove --purge firefox

	fancy_message action "Removing Empty Firefox DEB wrapper"
	sudo apt remove --autoremove firefox
	userPrompt

}


function removeFirefoxSnapForPPA() {


	# Source: https://fostips.com/ubuntu-21-10-two-firefox-remove-snap/

	# 1 - Remove and Disable Firefox Snap
	removeAndDisableFirefoxSnap

	# 2 -  Add the (Ubuntu) Mozilla team PPA to your list of software sources
	clear
	fancy_message action "Step 2 of 5: Add Mozilla PPA"
	sudo add-apt-repository ppa:mozillateam/ppa
	userPrompt

	# 3
	firefoxRepoPriority

	# 4 - Allow Firefox upgrades from this new source
	clear
	fancy_message action "Step 4 of 5: Allow Upgrades from Mozilla PPA"++
	echo 'Unattended-Upgrade::Allowed-Origins:: "LP-PPA-mozillateam:${distro_codename}";' | sudo tee /etc/apt/apt.conf.d/51unattended-upgrades-firefox
	userPrompt

	# 5 - install Firefox
	clear
	fancy_message action "Step 5 of 5: Install Firefox from Mozilla PPA"
	sudo apt install -t 'o=LP-PPA-mozillateam' firefox
}

function metalFirefoxSnapChangeUbuntu() {

		clear
		echo -e "This will replace the Firefox snap with the Mozilla PPA version of Firefox"
		echo -e "Here steps are taking to allow upgrades from the new source to be done, when they are available"
		echo -e ", as well as giving the DEB/PPA/apt version (non snap I mean) priority"

		read -r -p "Do you want to continue? (Y/N) " firefoxSnapChangeSelection

		case $firefoxSnapChangeSelection in

			[yY]) removeFirefoxSnapForPPA ;;
			[nN]) return ;;
			*) fancy_message lwarn "invalid selection" ;;
		esac

}
=======
>>>>>>> 7923c255 (browser refactoring)
=======
	# The flatpak IS updated 
	installFlatpakApp ${ungoogledChromiumFP}

}
>>>>>>> 06133379 (Added UnGoogled Chromium)
=======
>>>>>>> 030bf9ae (Moved Chromium based browser code to it's own CFG file)
