function vivaldiAddKey()
{
  	vivaldiKey="https://repo.vivaldi.com/stable/linux_signing_key.pub"

  	echo -e "Adding Vivaldi Key"

  	case $distroBase in

		fedora|opensuse) sudo rpm --import $vivaldiKey ;;

		ubuntu)
		# not sure about solus here ... pretty sure it's in the Solus default repos

		# Download Key file
		wget $vivaldiKey
		gpg --import linux_signing_key.pub

		# remove key file
		rm linux_signing_key.pub ;;

		*) return ;;

  	esac

}


function installVivaldi()
{
	progName="vivaldi"
	progTitle="Vivaldi Web Browser"


	# Resource related to keys and installing: https://help.vivaldi.com/article/obtaining-official-builds/

	# Add/Import Vivaldi Key
	## This always needed?
	vivaldiAddKey

	case $distroBase in

		arch)
			installApp "vivaldi"
			return ;;

		fedora|opensuse)

			packageURL=$(curl -s "https://vivaldi.com/download/" | grep -o '"https://[^"]*x86_64*.rpm"' |  tr -d '"' )

			metaExternalDownload $progName $packageURL
			;;

		debian|ubuntu)

			packageURL=$(curl -s "https://vivaldi.com/download/" | grep -o '"https://[^"]*amd64.deb"' |  tr -d '"' )


			metaExternalDownload $progName $packageURL
			;;


		solus) installApp "vivaldi-stable" ;;


		*) echo -e "Error installing Vivaldi" ;;

	esac

}

#########################################################################################
# Chromium related

# function for default repo
function installChromiumDefault()
{
	clear
	echo -e "Installing Chromium Web Browser"
	installApp $progName

	# Addition for (only?) Ubuntu
	case $distroBase in
		ubuntu) installApp "chromium-codecs-ffmpeg" ;;
	esac

}

function chromiumMenu() {

	x=1

	while [[ $x=1 ]]; do
    	clear
		echo -e "Chromium Installation Menu"
		echo -e "1. \tDownload Chromium from your distro's default repo"
		echo -e "2. \tInstall Chromium Flatpak"
		echo -e "3. \tInstall Chromium Snap"

		read -p  "Your Choice?:" chromiumInstallSelection


		case $chromiumInstallSelection in

			1) installChromiumDefault
				x=0 ;;

			2)
				# flatpak support is checked in the function below
				installFlatpakApp $chromiumFP
				x=0 ;;

			3)
				# snap support is checked


				snapType="normal"
				snapName="chromium"
				installSnapApp $snapType $snapName

				snapName="chromium-ffmpeg"
				installSnapApp $snapType $snapName

				# clear vars
				snapType=""
				snapName=""

				x=0 ;;

		esac

	done
}

function installChromiumMeta() {
	progTitle="Chromium"

	case $distroBase in
		arch|debian|fedora|opensuse|solus) progName="chromium" ;;
		ubuntu) progName="chromium-browser" ;;
	esac

	chromiumMenu

}



# End Chromium Related
################################################################################



##################################################################################
## Google Chrome Related


## Cant remember where i found instructions to add the key but does installing the DEB or RPM do that for you? (at least in Google Chrome's case? ... if so this seems like an un-needed function )

# I THINK I may have had this function for "adding the Chome repo" vs just installing the RPM or DEB
function addGoogleChromeKey
{
	## Assign Chrome Key URL to a variable
	pgpkey=https://dl.google.com/linux/linux_signing_key.pub

	clear

	## Adding Google Chrome's Key
	echo -e "Getting key information needed for Google Chrome"

	case $distroBase in

		fedora|opensuse) sudo rpm --import $chromegpgpkey ;;

		debian|ubuntu)
			## Adding Google Chrome's Key
			wget -q -O - $chromegpgpkey | sudo apt-key add - ;;

		*)  echo -e "The distro you are on either can not be detected or is not supported by my scripts, here " ;;

	esac

}

# metaFunction for Google Chrome
function installChrome()
{

  progName="Google Chrome"
  progTitle="Google Chrome"

  rpmURL="https://dl.google.com/linux/direct/google-chrome-stable_current_x86_64.rpm"
  debURL="https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb"

  case $distroBase in

    arch)
      aurAppInstall google-chrome ;;

    fedora|opensuse)

      packageURL=$rpmURL
      metaExternalDownload $progName $packageURL ;;

    solus)

      # Instructions FROM Solus themselves
      sudo eopkg bi --ignore-safety https://raw.githubusercontent.com/getsolus/3rd-party/master/network/web/browser/google-chrome-stable/pspec.xml
      sudo eopkg it google-chrome-*.eopkg;
      sudo rm google-chrome-*.eopkg
      ;;

    debian|ubuntu)

      packageURL=$debURL
      metaExternalDownload $progName $packageURL
      ;;

      *)
        echo -e "Error installing Google Chrome"
        return ;;


    esac

}
## End of Google Chrome Section
###################################################################


###################################################################
# Firefox Section

# Function to download tarball from Mozilla's site
function installFirefoxTarball()
{

	packageURL=$(curl -s "https://download.mozilla.org/?product=firefox-latest-ssl&os=linux64&lang=en-US" | awk -F \" '{ print $2}')

	echo -e "Downloading Firefox tar file from Mozilla"
	metaExternalDownload $progName $packageURL

	##############
	userPrompt
	################

	clear
	echo -e "Firefox Tar file downloaded and extracted."
	echo -e
	echo -e "To run Firefox, navigate to the Firefox folder in your Downloads folder, and run './firefox.sh' "

	## toDO: add a menu option to add it to user's menus

}

function firefoxChoiceMenu()
{

	x=1

	while [[ $x=1 ]]; do
    	clear
		echo -e "Firefox Installation Menu"
		echo -e "1. \tDownload Firefox from your distro's default repo"
		echo -e "2. \tDownload the LATEST Firefox Archive from Mozilla? "
		echo -e "3. \tInstall Firefox Flatpak"
		echo -e "4. \tInstall Firefox Snap"

		read -p  "Your Choice?:" firefoxInstallSelection


		case $firefoxInstallSelection in

			## Inside the f_universalSoftware.cfg file
			# $progName used since some distros have other names than just "firefox" for the package
			1) installApp "$progName"
				x=0 ;;

			2) installFirefoxTarball
				x=0 ;;

			3)
				# flatpak support is checked in the function below
				installFlatpakApp $firefoxFP
				x=0 ;;

			4)
				# snap support is checked

				snapName="firefox"
				snapType="normal"

				installSnapApp $snapName $snapType
				x=0 ;;

		esac

	done

}

# Meta function
function installFirefoxMeta()
{
	progTitle="Firefox"

	# ONLY because OpenSUSE and Debian, names it differently

	case $distroBase in

		debian) progName="firefox-esr" ;;
		opensuse) progName="MozillaFirefox" ;;
		arch|fedora|solus|ubuntu)  progName="firefox" ;;

	esac


	clear


	# the POINT is to give the user the choice of
		# default repo
		# tarball from Firefox's website
		# Flatpak
		# snap
	firefoxChoiceMenu


    # idea that will not work:  putting installApp out here ... because even IF the debian user chooses to install the tarball,
    # the default repo package would install anyway

}