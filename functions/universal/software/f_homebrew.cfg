# to set things up BEFORE installing Homebrew
function installHomebrewDependencies() {

    fancy_message action "Installing Homebrew dependencies"
    case $distroBase in        
        debian|ubuntu)
            $refresh && sudo apt install -y build-essential curl git ruby ;;

		fedora)
    		sudo dnf group install -y "development-tools"
    		sudo dnf install -y curl git ruby ruby-devel libffi-devel bzip2 bzip2-devel zlib zlib-devel
    		;;

        opensuse)
            $refresh && sudo zypper install -y curl git ruby tar gzip bzip2 make gcc ;;
    esac 

    userPrompt

}


function installHomebrew() {
    # source: https://brew.sh/

    installHomebrewDependencies

    fancy_message action "Installing Homebrew"
    userPrompt
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
    userPrompt

    post_homebrew_install
}

function notify_homebrew_install() {
    fancy_message info "Homebrew has been installed. You can now use it to install packages."
    fancy_message info "To use Homebrew, you may need to run 'source ~/.bashrc' or restart your terminal."
    fancy_message info "Even if you installed software with Homebrew in these scripts, you may need to run 'source ~/.bashrc' to make it available in the current session. OR you could restart your terminal, and things should work as expected."
    userPrompt
}


function post_homebrew_install() {
    home="/home/$USER/"
    bashrc="${home}/.bashrc"
    
    fancy_message action "Setting up Homebrew environment"

    if ! grep -q 'brew shellenv' "$HOME/.bashrc"; then
        echo >> ${bashrc}
        echo 'eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"' >> ${bashrc}
    fi

    eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
    
    userPrompt

    source ${bashrc}

 }

# Function used to install packages 
function installhomebrewPackages() {
    if [ ! -x "/home/linuxbrew/.linuxbrew/bin/brew" ] && [ ! -x "$HOME/.linuxbrew/bin/brew" ]; then
        # install Homebrew
        fancy_message warn "Homebrew not found. Installing Homebrew first."
        userPrompt
        installHomebrew
    fi

    fancy_message action "Installing ${1} via Homebrew"
    brew install "${1}"

    # Notify user they MAY have to restart their terminal or run 'source ~/.bashrc' to use the installed software
    notify_homebrew_install
}


homebrew_menu_items=(
    1 "['cat' alternative] bat"
    2 "['ls' alternative] eza"
    3 "['du'/'df' alternative] dust"
    4 "[Fuzzy Finder] fzf"
    5 "[Man Page summerizer] tldr"
    6 "[Better Bash History tool] Atuin"
    7 "[Helps navigate your FS, easier] Zoxide"
	8 "[Terminal File Manager] yazi"
    I "Install Homebrew"
    M "Return to Main Menu"
    Q "Exit to Prompt"
)

function homebrewMenuCaseStatement() {
    case $homebrewSelection in
        1) installhomebrewPackages "bat" ;;
        2) installhomebrewPackages "eza" ;;
        3) installhomebrewPackages "dust" ;;
        4) installhomebrewPackages "fzf" ;;
        5) installhomebrewPackages "tldr" ;;
        5) installhomebrewPackages "atuin" ;;
        6) installhomebrewPackages "zoxide" ;; 
        7) installhomebrewPackages "yazi" ;;
        [iI]) installHomebrew ;;
        [sS]) mainSoftwareMenu ;;
        [mM]) mainMenuType ;;
        [qQ]) quitScript ;;
        *) invalidSection ;;
    esac
}

function homebrewMenuDialog() {
    createDialogMenu
}

function homebrewMenuEcho() {
    createEchoMenu
}

function homebrewSoftwareMenu() {
    baseMenuName="homebrewMenu"
    menuTitle="Xmetal Homebrew Software Menu"
    currentMenuCaseStatementName="homebrewMenuCaseStatement"

    declare -n menuArrayName=homebrew_menu_items
    declare -n currentMenuSelection=homebrewSelection

    $menuName
}
