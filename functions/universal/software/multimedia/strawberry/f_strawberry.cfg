. ${softwareDir}/multimedia/strawberry/f_strawberry_branch_checks.cfg


function strawberry_set_variables() {
  programName="strawberry"
  programTitle="Strawberry Media Player"
  programHomepage="https://www.strawberrymusicplayer.org/"
  strawberry_download="https://www.strawberrymusicplayer.org/#download"

  # 99.9% sure the PPA is maintained by the creator of the program 
  PPASource="https://launchpad.net/~jonaski/+archive/ubuntu/strawberry"

  PPALink="ppa:jonaski/strawberry"
}


function handle_strawberry_gitpage_download() { 

  # Debian 
    ## Debian 12 (oldstable) - bookworm
    ## Debian 13 (stable) - trixie

  # Ubuntu
    # 20.04 - focal
    ## 22.04 - Jammy
    ## 24.04 - Noble
    ## 25.04 - Plucky


  case "$distroBase" in
    debian) branch="$debian_branch" ;;
    ubuntu) branch="$ubuntu_branch" ;;
    *) echo "Unsupported distroBase: $distroBase" ; return 1 ;;
  esac

  if [ "$distroBase" = "ubuntu" ] && [ "$ubuntu_branch" = "focal" ]; then
    fancy_message info "Support for Ubuntu 20.04, needs extra work and is not done yet" && return 1
  fi

  strawberry_filter="-${branch}_amd64.deb"

  get_and_handle_github_downloads "jonaski" "strawberry" "${strawberry_filter}"


}


function handle_strawberry_ubuntu_menu() {
  echo "How would you like to install Strawberry Media Player?"
  echo "1) Github release page"
  echo "2) Flatpak"
  echo "3) PPA"


  if [ "${ubuntu_branch}" == "jammy" ]; then
    echo -e "\nNOTE: On Jammy, the version available via Github or PPA is a year old due to the Strawberry refactor after Jammy.\n"
  fi
  read -p "Enter your choice (1/2/3): " strawberry_choice
  
  case "$strawberry_choice" in
    1)  handle_strawberry_gitpage_download ;;
    2)
      # ref: https://flathub.org/en/apps/org.strawberrymusicplayer.strawberry
      installFlatpakApp ${strawberryFP}
      ;;
    3)
      echo "You chose PPA."
      installStrawberryPPA
      ;;
    *)
      echo "Invalid choice."
      ;;
  esac
}


######################################################
# do i need to pass anything as $1 or can i use distro codenames?
function getStrawberryURL() {

  starwberry_download_links=$(curl -s "${strawberry_download}" | awk -F '"' '/https:\/\/file/ { print $2 }')

  # Debian SHOULD be OK, Fedora too 
  case $distroBase in
    debian) programURL=$(curl -s ${strawberryDownload} | awk -F '"' '/${debian_codename}/ { print $2}') ;;

    fedora) programURL=$(curl -s ${strawberryDownload} | awk -v fbranch=$fedora_branch -F '"' '$0 ~ fbranch { print $2}') ;;

    opensuse) programURL=$(curl -s ${strawberryDownload} | awk -v slb=$stripped_leap_branch -F '"' '$0 ~ slb { print $2}') ;;

    ubuntu) handle_strawberry_ubuntu_menu  ;;

  esac

}
###############################################################################################

# Sept 2025: experimental builds
# I really dont know what needs this... the appimages I found are unoffical btw
# function strawberry_experimental_download_install() {

#   # Sept 2025: is this overcomplicated? can it be condensed?
#   strawberry_exp_latest=$(curl -s "${strawberry_exp_base}" | awk -F '"' '/64.rpm/ && $0 !~ "debug" { print $6 }' | tail -n1)

#   programURL="${strawberry_exp_base}/${strawberry_exp_latest}"
  
#   # Sept 2025: this seems exactly the say as (close enough 4 this comment) FileNameWEXT var wise
#   # why do i need this? 
#   strawberry_local_download=$(basename ${programURL})

#   # not REALLY needed but i will leave it for now ... you know its opensuse or fedora by this point
#   case ${distroBase} in

#     fedora|opensuse) metaExternalDownload ${program_url}  ;;

#   esac
# }

# Sept 2025: experimental builds ... do i need this? 
function strawberry_experimental_releases(){
  strawberry_exp_base_url="https://builds.strawberrymusicplayer.org/${distroBase}"
}


###############################################################################
# Meta function
function installStrawberry() {
  strawberry_set_variables

  clear
  fancy_message action "Installing $programTitle"

  # Nov 2022 idea: this may be redone (or maybe just the functions listed in the case's will be) to maybe all use "gitDownload" when i get that working
  case $distroBase in

    arch|solus) installApp "strawberry" ;;
    debian|fedora|opensuse|ubuntu) strawberry_branch_distro_check  ;;

  esac

}
