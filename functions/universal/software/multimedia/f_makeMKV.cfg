. $softwareDir/multimedia/f_makeMKVSource.cfg

# Switch to use the packman repos (vs Flatpak) on openSUSE but keep this functtion here anyway
function makeMKVFlatpakInstall()
{
  # Info/Source: https://flathub.org/apps/details/com.makemkv.MakeMKV
  flatpakName="com.makemkv.MakeMKV"
  flatpakRep="flathub"

  # installFlatpakApp DOES check and install (if the user picks it, I think) to install Flatpak support, so nothing extra like that is needed here

  # install software
  installFlatpakApp $flatpakRepo $flatpakName

}


###################################################################


function makeMKVKeyInfo()
{
  betaKeyURL="https://www.makemkv.com/forum/viewtopic.php?t=1053"


  # curl -s = silent curling
  currentBetaKey=$(curl -s "$betaKeyURL" | grep -o -P '(?<=<code>).*(?=</code>)')

  # End of this period
  currentBetaKeyExpiration=$(curl -s "https://www.makemkv.com/forum/viewtopic.php?t=1053" | grep -o -P '(?<=end of).*(?=. Please)')


  ## Message about the key and the link to the site should be here
  clear
  echo -e "MakeMKV is free, though every 30 or so days the key changes"
  echo -e "if you are prompted for the key, here is the current info (at script run time) "
  echo
  echo -e "MakeMKV Beta Key:  ${bold}${fglightred}$currentBetaKey${completeReset}"
  echo -e "This key expires at the end of ${bold}${fglightyellow}$currentBetaKeyExpiration${completeReset}"
  echo

  userPrompt

}


# MakeMKV Dependency installs
function makeMKVDependencies()
{
 # Clears the screen
 clear
 
  # ??? - is this for just running it or for compiling and installing? ... I think I need to add this AND build Deps (function)
  echo -e "Installing needed dependencies "
  echo

  case $distroBase in

    fedora) installApp "openssl-devel expat-devel qt4-devel qt5-devel ffmpeg-devel" ;;

    opensuse)
        # for compiling

        # Why is this commented out (below)
        # $install libqt4

        return  ;;

    solus)

        # install needed dependencies
        # qt5-base-devel is needed for Budgie (test)... not sure if the other two are "needed", but i will leave them for now
        installApp "gstreamer-1.0-devel ffmpeg-devel qt5-base-devel" ;;

    ## Added Debian as a guess
    debian|ubuntu)
      # This list is from MakeMKV itself and may have duplicates from the Develop packages addition i did at the start
      installApp "build-essential pkg-config libc6-dev libssl-dev libexpat1-dev libavcodec-dev libgl1-mesa-dev libqt4-dev zlib1g-dev" ;;


  esac

  userPrompt

}


# note to self: this is for both OSS and BIN file
function compileAndInstallMakeMKV()
{
  # Source: https://www.makemkv.com/forum/viewtopic.php?f=3&t=224

  # change pwd, to user's Downloads folder
  cd ~/Downloads

  # Create and enter directory
  mkdir makeMKVInstall
  cd makeMKVInstall

  # Build Dependencies
  #universalBuildEssentials

  # These userPrompts will be removed later .. they are only there for testing
  echo -e "Compiling and Installing MakeMKVOSS"
  userPrompt
  makeMKVOSSInstall

  # clear to be UNcommented out later, after testing
  # clear
  echo -e "Compiling and Installing MakeMKVBin"
  userPrompt
  makeMKVBinInstall

}


function installMakeMKVOpenSuse()
{

    case $openSUSEBranch in

        leap|tumbleweed)

          # 1 - enable/add packman repo
          packmanSuseRepo

          # 2 - install makemkv
          $install makemkv ;;

      *) echo -e "OpenSUSE branch not detected " ;;

    esac
}


###############################################################################################################

## Lets the user choose the compile and install path or the "install via Flatpak Path"
function makeMKVMenu(){

	x=1

	while [ $x=1 ]; do

	clear
	echo -e   "Please Select Task \n"

	echo -e   "1. \t Compile and Install MakeMKV"
	echo -e	  "2. \t Install MakeMKV Flatpak"

	echo -e  "\vm. \tReturn to Main Menu"

	read -p "Your Choice?: " makeMKVSelection

	case $makeMKVSelection in

		1) compileAndInstallMakeMKV
			 ;;

		2) makeMKVFlatpakInstall
		 ;;

		[mM]) clear
			exit
			;;

		*) invalidSection ;;

		esac

	done


}


###################################################################################
# Meta-function to install MakeMKV
function installMakeMKV()
{
  progName="makemkv"
  progTitle="MakeMKV"
  progHomepage="http://www.makemkv.com"

  # to get the newest tarballs of either the OSS or BIN file
  makeMKVOSSURL=$(curl -s "https://www.makemkv.com/forum/viewtopic.php?f=3&t=224" | grep ".tar.gz" | grep "oss" | cut -d "\"" -f 2)
  makeMKVBinURL=$(curl -s "https://www.makemkv.com/forum/viewtopic.php?f=3&t=224" | grep ".tar.gz" | grep "bin" | cut -d "\"" -f 2)

  # undecided still but I have picked to compile and install for Ubuntu, rather than add the PPA, I may add an option to do either, later


  # 1 - install codecs (assuming it's a fresh install of a distro that doesn't have them)
  # Should be here since codecs will be needed no matter how you install makeMKV
  #universalCodecInstall

  # 2 - Dependencies - not sure if all of these for each distro base are needed A) For compiling or B) just needed afterwards (no matter how you install MakeMKV), so it can run, but I will leave this here for now 
  #makeMKVDependencies

  # Build Dep + extra Dep step SHOULD NOT be here since compiling and installing is not always going to be the choice

  case $distroBase in

    arch|debian|fedora|solus|ubuntu) 
    
    makeMKVMenu ;;

    opensuse)

      # makeMKV is in packman Repos it seems? (I forgot) so no need to compile... i guess offering the FP option would be good but i will leave that off, for now 
      installMakeMKVOpenSuse
      ;;

    *) echo "distroBase not detected; therefore, MakeMKV was not installed" ;;

  esac


  # Show Key info
  makeMKVKeyInfo

  ###################
  userPrompt
}
