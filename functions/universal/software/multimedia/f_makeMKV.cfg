# I shouldn't need to do this here but ... whatever 
# question: can i move these vars to the f_variables.cfg file and skip this extra function? 
function makeMKVFileInfo()
{
  # $1 = URL for current file being downloaded

  fileNameFULL=${1##*/}
  fileName=${fileNameFULL%.tar.gz}

}

# Compile and install makeMKVOSS package 
function makeMKVOSSInstall()
{

  makeMKVFileInfo $makeMKVOSSURL

  # Download MakeMKV-OSS tarball 
  wget $makeMKVOSSURL

  # Extract and enter directory 
  tar -zxvf $fileNameFULL --one-top-level && cd $fileName

  # compile and install
  echo -e "Compile MakeMKVOSS"
  ./configure
  
  echo -e "Make makeMKVOSS"
  make
  
  echo -e "Install MakeMKVOSS"
  sudo make install

  # Cleanup 
  #cd ..
  #rm -rf $fileName

}


# Compile and install makeMKVBin package 
function makeMKVBinInstall()
{

    makeMKVFileInfo $makeMKVBinURL
    
    # Download MakeMKVBin tarball 
    wget $makeMKVBinURL
    
    # Extract and enter directory 
    tar -zxvf $fileNameFULL --one-top-level && cd $fileName

    # Make/Make install 
    echo -e "Make MakeMKVBin"
    userPrompt
    make


    echo -e "Install MakeMKVBin"
    sudo make install

    # Cleanup 
    cd .. 
    rm -rf $fileName 

}

function makeMKVKeyInfo()
{
  betaKeyURL="https://www.makemkv.com/forum/viewtopic.php?t=1053"


  # curl -s = silent curling 
  currentBetaKey=$(curl -s "$betaKeyURL" | grep -o -P '(?<=<code>).*(?=</code>)')
  
  # End of this period
  currentBetaKeyExpiration=$(curl -s "https://www.makemkv.com/forum/viewtopic.php?t=1053" | grep -o -P '(?<=end of).*(?=. Please)')

  
  ## Message about the key and the link to the site should be here 
  clear
  echo -e "MakeMKV is free, though every 30 or so days the key changes"
  echo -e "if you are prompted for the key, here is the current info (at script run time) "
  echo 
  echo -e "MakeMKV Beta Key:  ${bold}${fglightred}$currentBetaKey${completeReset}"
  echo -e "This key expires at the end of ${bold}${fglightyellow}$currentBetaKeyExpiration${completeReset}"
  echo


}

# MakeMKV Dependency installs
function makeMKVDependencies()
{

  echo -e "Installing needed dependencies "
  case $distroBase in 
    
  solus) 
      #  Install Codecs 
      # not sure if this is needed, but i'll include it
      universalCodecInstall
      
      # install needed dependencies
      # qt5-base-devel is needed for Budgie (test)... not sure if the other two are "needed", but i will leave them for now 
      $install gstreamer-1.0-devel ffmpeg-devel qt5-base-devel ;;
  
  esac 

  userPrompt 

}


# Meta-function to install MakeMKV 
function installMakeMKV()
{
  programName="makemkv"
  programTitle="Make MKV"
  programHomepage="http://www.makemkv.com"

  makeMKVOSSURL=$(curl "https://www.makemkv.com/forum/viewtopic.php?f=3&t=224" | grep ".tar.gz" | grep "oss" | cut -d "\"" -f 2)
  makeMKVBinURL=$(curl "https://www.makemkv.com/forum/viewtopic.php?f=3&t=224" | grep ".tar.gz" | grep "bin" | cut -d "\"" -f 2)


  # Get Build Dependencies (in case they are not already installed)
  universalBuildEssentials

  makeMKVDependencies
  
  ######################################################
  # Show Key info 
  makeMKVKeyInfo


  # change pwd, to user's Downloads folder 
  cd ~/Downloads
  

  case $distroBase in 

  arch|fedora|opensuse|solus) 


      # Source: https://www.makemkv.com/forum/viewtopic.php?f=3&t=224

      mkdir makeMKVInstall
      cd makeMKVInstall

      ## What about the Ubuntu PPA? 

      # These userPrompts will be removed later .. they are only there for testing 
      echo -e "Compiling and Installing MakeMKVOSS"
      userPrompt
      makeMKVOSSInstall

      # clear to be UNcommented out later, after testing 
      # clear 
      echo -e "Compiling and Installing MakeMKVBin"
      userPrompt
      makeMKVBinInstall 

      ;; 
      

  *) echo "distroBase not detected; therefore, MakeMKV was not installed" ;; 

  esac 

}
