
function strawberry_set_variables() {
  programName="strawberry"
  programTitle="Strawberry Media Player"
  programHomepage="https://www.strawberrymusicplayer.org/"
  strawberryDownload="https://www.strawberrymusicplayer.org/#download"

  PPASource="https://launchpad.net/~jonaski/+archive/ubuntu/strawberry"
}

######################################################
# do i need to pass anything as $1 or can i use distro codenames? 
function getStrawberryURL_redo() {


      # I think at this point "${nameFormat}*.${fileFormat}" is detected
      case $distroBase in
        debian) programURL=$(curl -s ${strawberryDownload} | awk -F '"' '/${debian_codename}/ { print $2}') ;;

        fedora) programURL=$(curl -s ${strawberryDownload} | awk -F '"' '/fc${fedoraBranch}/ { print $2}') ;;

        opensuse) programURL=$(curl -s ${strawberryDownload} | awk -F '"' '/fc${fedoraBranch}/ { print $2}') ;;

        ubuntu) programURL=$(curl -s ${strawberryDownload} | awk -F '"' '/${ubuntuBranch}/ { print $2}') ;;

      esac


}

#####################################

function strawberry_fedora_branch_check() {

  # Fedora
  case ${fedoraBranch} in
    39|40) getStrawberryURL_redo "fc${fedoraBranch}"

    metaExternalDownload ${programTitle} ${programURL}  ;;
  esac

}


function strawberry_openSUSE_branch_check() {
  # OpenSuse Leap and/or Tumbleweed

  # this is in the tumbleweed default repo - nothing more is needed
  [ "$openSUSEBranch" = "tumbleweed" ] && installApp "strawberry" && return 

  case $leapBranch in
    15.6) echo "no release for 15.6 yet"  ;;
    15.5) getStrawberryURL_redo "lp155"
          metaExternalDownload ${programTitle} ${programURL} ;;
  esac

}



function strawberry_branch_distro_check() {

  # debian
  [ "$distroBase" == "debian" ] && getStrawberryURL_redo && metaExternalDownload ${programTitle} ${programURL} && return

  # Fedora
  [ "$distroBase" == "fedora" ] && strawberry_fedora_branch_check && return

  # openSUSE
  [ "$distroBase" == "opensuse" ] && strawberry_openSUSE_branch_check && return 

}

# i am only going to use this "when i have to"
function strawberry_experimental_releases(){
  # if noble/24.04 

  strawberry_noble_exp_base="https://builds.strawberrymusicplayer.org/ubuntu/noble/"
  strawberry_noble_exp_latest=$(curl -s "https://builds.strawberrymusicplayer.org/ubuntu/noble/" | awk -F '"' '/href/ {print $6} ' | tail -n1)
  strawberry_noble_exp_DEB_URL="${strawberry_noble_exp_base}/${strawberry_noble_exp_latest}"
  strawberry_noble_local_deb_name=$(basename ${strawberry_noble_exp_DEB_URL})

  programURL=${strawberry_noble_exp_DEB_URL}

  gdebiInstall


}



###############################################################################
# Meta function
function installStrawberry() {
  strawberry_set_variables

  clear
  fancy_message action "Installing $programTitle"


  # Nov 2022 idea: this may be redone (or maybe just the functions listed in the case's will be) to maybe all use "gitDownload" when i get that working
  case $distroBase in

    arch|solus) installApp "strawberry" ;;
    debian|fedora|opensuse) strawberry_branch_distro_check ;;
    ubuntu)

      # if noble 
      [ "${ubuntuBranch}" == "noble" ] && strawberry_experimental_releases && return 

      # May 21, 2024 .. does this actually install debget and strawberry through that? 
      # it feels like i missed a step in the middle 
      debGetInstall && return

      fancy_message action "Adding Official Strawberry PPA" && installStrawberryPPA && fancy_message action "Installing Strawberry after the official PPA was added" && $install strawberry

      ;;

  esac

  userPrompt

}
