#  idea

# 1 - keep getStrawberryURL function
# 2 - in each other function assign programURL=totalStrawberryURL
#   - this should be out of the loop that calls getStrawberryURL
# 3 - do the usual pass to massExternalDownload


######################################################
# Nov 2022 this seems like it needs to be redone since adding (TOTALLY UNTESTED AND NOT ABLE TO NOW) "gitDownload"
function getStrawberryURL_redo() {

    # at this point the repoName should be known
    # can i just pass to gitDownload from here?

    fileFormat=$defaultFileFormat

      # I think at this point "${nameFormat}*.${fileFormat}" is detected 
      case $distroBase in
        debian)
          # i need to look for ${debianCodename}
           ;;
        fedora)
          # i need to look for ${fedoraBranch}
          ;;
        opensuse)
          # FIRST leap versus TW
            # if Leap, then look for ${leapVersion}
        ;;
        ubuntu)
          # I need to check ${UBUNTU_CODENAME}
         ;;
      esac

    # **** KEEP IN MIND that gitDownload's goal is only to download the desired file .... is a gitInstall type function a good idea?
      # OR would that idea be redundant (I think "yes" off the top of my head) .. just pass it to say "handleDownload" I think i named it 
      # This seems like a "meta" function would be a good idea OR put "gitDownload" code in the download function before "handleDownload"
        # say "if github.com is in the URL" or something

}


function getStrawberryURL() {

	# $1 is used to determine what package to download


	strawberryURL=$(curl -s "${githubBaseURL}/strawberrymusicplayer/strawberry/releases" | awk -F \" -v branch="$1" '$2 ~ branch && !/dbgsym/ {print $2;exit}')

	totalStrawberryURL="$githubBaseURL$strawberryURL"

	programURL=${totalStrawberryURL}
}

#####################################

# Nov 2022 idea: use the gitdownload function here too just have "AppImage" as fileFormat
function strawberryAppImage() {
  fileFormat="AppImage"

  # Nov 2022 way (not done or tested )
  gitDownload ${fileFormat}

  # old way - delete when gitDownload way works
  #	getStrawberryURL "AppImage"

	# Mark as executable
	sudo chmod +X $strawberryPackage
}

# Nov 2022 idea to simplify things
function StrawberryBranchDistroCheck() {

  ## Debian
  # my thinking is if these are set to what i have, it has to be debian
  case ${debianCodeName} in
      buster|bullseye)
  			getStrawberryURL "${debianCodeName}"
  			metaExternalDownload ${programTitle} ${programURL} ;;

  esac

  # Fedora
  case $fedoraBranch in
    35|36) getStrawberryURL "fc${fedoraBranch}"

    metaExternalDownload ${programTitle} ${programURL}  ;;
  esac


  # OpenSuse Leap and/or Tumbleweed
  # Nov 2022 Idea

  if [ "$openSUSEBranch" = "leap" ]; then

    case $leapVersion in
      15.3) getStrawberryURL lp153
        			metaExternalDownload ${programTitle} ${programURL} ;;

      15.4) getStrawberryURL lp154
            metaExternalDownload ${programTitle} ${programURL} ;;
    esac


  elif [ "$openSUSEBranch" = "tumbleweed" ]; then
  	# this is in the tumbleweed default repo - nothing more is needed
    installApp "strawberry"

  fi

}


#################################################################################
# Meta function
function installStrawberry() {
  programName="strawberry"
  programTitle="Strawberry Media Player"
  programHomepage="https://www.strawberrymusicplayer.org/"

  PPASource=""

  clear
  fancy_message action "Installing $programTitle"


  # Nov 2022 idea: this may be redone (or maybe just the functions listed in the case's will be) to maybe all use "gitDownload" when i get that working
  case $distroBase in

    arch|solus) installApp "strawberry" ;;
    debian|fedora|opensuse ) StrawberryBranchDistroCheck ;;
    ubuntu)

      # check for deb-get and uses that if installed
      if [ "${debgetInstalled}" == "yes" ]; then fancy_message action "Installing ${programName}, with deb-get"; deb-get install ${programName}; userPrompt; return; fi

      # Nov 2022: while the debs for each branch are on github, Strawberry's page also lists the PPA as the way to install so maybe keep this the way it is
      installStrawberryPPA
      ;;

  esac

}
