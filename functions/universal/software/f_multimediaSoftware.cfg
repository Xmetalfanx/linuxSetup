
#################################################################################################################

function installXNViewMP()
{
  progTitle="XNView MP"
  progName="xnViewMP"
  progHomepage="https://www.xnview.com/en/xnviewmp/"
  tarballURL="https://download.xnview.com/XnViewMP-linux-x64.tgz"
  appImageURL="https://download.xnview.com/XnView_MP.glibc2.17-x86_64.AppImage"

  debURL="https://download.xnview.com/XnViewMP-linux-x64.deb"

  # note to self: other functions move the pwd ... no need for that here

  case $distroBase in

    arch|fedora|opensuse|solus) packageURL=$appImageURL ;; 

    ## The same exact DEB works on Debian and Ubuntu
    debian|ubuntu) packageURL=$debURL ;; 

    *) return ;;

  esac
  ##############################################################

  #############################################################
  case $distroBase in 

    fedora) sudo dnf install libnsl ;; 

  esac 

  metaExternalDownload $progName $packageURL

}
############################################################
############################################################

function installDeadbeef()
{
  progName="deadbeef"
  progTitle="DeadBeef Media Player"
  progHomepage="http://deadbeef.sourceforge.net/"

  snapName="deadbeef-vs"
  snapType="classic"

  clear
  echo -e "Installing $programTitle"

  case $distroBase in

    opensuse|solus|arch)

      # OpenSuse should be ok (Leap and TW), Solus has this in the repos ...
      # Arch should have this without the need for the AUR

      return ;;

    fedora)

      # Fedora needs RPMFusion first .. .after that it's just "install deadbeef"
      thirdPartyRepoSoftwareNotice

      # Here the repo is added and "refreshed"

      # 2- Install Deadbeef
      $install deadbeef

      return ;;

    ## Debian added here is a test

    debian|ubuntu)

      # Check for, (+ install if not installed) gdebi since thathandles dependencies better and dpkg -i ends up with dep issues on Debian
      clear
      echo -e "Checking for Gdebi for the install"
      commandCheck gdebi


      # Get DEB link from https://deadbeef.sourceforge.io/download.html

      # deadbeefDEBURL = $(curl -s "https://deadbeef.sourceforge.io/download.html" | grep "deb" | cut -d '"' -f2)

      # Clears the Screen
      clear

      cd ~/Downloads

      # Get the DEB
      echo -e "Downloading the latest Deadbeef DEB file"
      wget $(curl -s "https://deadbeef.sourceforge.io/download.html" | grep "deb" | cut -d '"' -f2) -O deadbeef.deb

      echo -e "Installing Deadbeef Media Player"
      sudo gdebi deadbeef.deb


      # remove the DEB
      echo -e "Removing the Downloaded DEB"
      rm deadbeef.deb

      ;;

    *) # The catch-all step
        echo "Deadbeef not installed. You are not (detected to be..) on a supported distro for my scripts" ;;

  esac

}


##########################################
function installTinyMediaManager()
{
  ## Note to self: Java has to be installed
  ## I need to put a check/install if not installed thing in for java/jre

  progTitle="Tiny Media Manager"
  progName="tinyMediaManager"
  progHomepage="https://www.tinymediamanager.org/"
  releaseDomain="http://release.tinymediamanager.org/"
  releaseVersion=$(curl "https://release.tinymediamanager.org/" | grep -m 1 "tar.gz" | cut -d\' -f 2 )

  packageURL="$releaseDomain$releaseVersion"

  # ? -  Do I need to put this in quotes/dquotes?
  iconFile=tmm.png
  execFile=tinyMediaManager.sh


  menuFile=tinymediamanager.desktop

  # Check for Java, as this app can not run without jre/java
  # Location: f_universalSoftware.cfg file

  clear
  echo -e "Checking for Java support"
  checkForJava
  userPrompt

  clear
  echo -e "Installing/Downloading/Extracting Tiny Media Manager in your Downloads folder "
  userPrompt
  metaExternalDownload $progName $packageURL
  echo -e "Tiny Media Manager setup and ready to use"
  
  userPrompt

  # Moves program from user\'s Downloads ( ~/Downloads) folder to ~/Programs 
  moveToProgramsFolder

  # There are errors on this step 
  customMenuItemChoice

  # For Debugging
  userPrompt


}
##########################################################################
function audioRecorderDebianMenu()
{

	x=1
	while [ $x=1 ]; do

		clear

		echo -e "1. \tInstall DEB Multimedia \"Repo\" and install Audio-Recorder from said repo"
		
    
    echo -e "2. \tInstall Snap Version"

		read -p "Your Choice?: " aRecorderDebianChoice

		case $aRecorderDebianChoice in

			1)
				metaInstallSnapSupport
				userPrompt
				;;

			2)
				flatPakSupportInstall
				userPrompt
				;;

			3)	snapCheck
				flatpakCheck
				userPrompt
				;;

		esac
	done

}



# Meta Function
function installAudioRecorder()
{

  progName="audio-recorder"
  progTitle="Audio Recorder"
  progHomepage=""


  # Universal Apps
  snapName="audio-recorder"
  snapType="edge"

  case $distroBase in

    arch|fedora|solus)

      echo -e "About to install the snap version of "
      installSnapApp $snapName ;;

    opensuse)

      # audio-recorder is in the Leap 42.3, Leap 15, and TW repos (not pacman, btw )
      $install audio-recorder ;;

    ubuntu) installAudioRecorderPPA ;;

  esac


}

function installMediaElch
{
    progName="mediaElch"
    progTitle="Media Elch"
    programHomepage="https://www.kvibes.de/mediaelch/"

    # https://github.com/Komet/MediaElch/releases

    mediaElchURL=$(curl -L https://github.com/Komet/MediaElch/releases | grep AppImage | grep -m 1 href | awk -F \"  '{ print $2 }')
    
    ## TODO: Make this non-static
    packageURL=$githubURL$mediaElchURL

    case $distroBase in

      arch|debian|fedora|opensuse|solus|ubuntu)
        metaExternalDownload $progName $packageURL ;;
    esac

}
