
##############################################################################################
# Start of Wine HQ code  ... specific to WineHQ and the offical Wine PPA ...
# Needed for Wine 5.0 / and WineHQ repo



# Checks the versrion of Ubuntu and determines the URL based on that
function wineHQDependBranchCheck()
{
	libfaudioURLBionic="https://download.opensuse.org/repositories/Emulators:/Wine:/Debian/xUbuntu_18.04/all/libfaudio-dev_19.07-0~bionic_all.deb"
	
	
	# || = "or"
	# no libfaudio file for eoan (19.10) ... already there?
	if [ "$lsCodename" == "bionic"  ] || [ "$OSRELEASE_UBUNTU_CODENAME" == "bionic"  ]; then

		packageURL=$libfaudioURLBionic

	else
		echo "No Extra packages added or needed at this time "

	fi

	metaExternalDownload $packageURL


}


function installWineHQDeps()
{
	# This function should get called but based on conditions below ONLY  works WHEN NEDED

	# Check architecture
	# 64 bit
	if [ "currentArchitecture" == "x86_64" ]; then

		echo -e "Adding extras package(s) needed for Wine 5.0, IF NEEDED "

			# Changes PWD
			cd ~/Downloads

			#Determines the need packages based on the currently running
			wineHQDependBranchCheck
	else

		echo -e "Architecture can not be determined"

	fi

}

# Add Repo
function wineHQUbuntuRepos()
{

	# Add the WineHQ key - text output to the user IS displayed in this function
	addUbuntuWineKeys


	echo -e "Checking for Ubuntu version (or Ubuntu based Linux Mint) and adding appropriate Repo "

	# The idea of having Mint first is due to the fact that the other checks (say for the Mint based on Bionic) WOULD get triggered
	# This means it'd think Linux Mint is Ubuntu and it wouldn't go down to the Linux Mint check further down the line
	if 	[ "$lsbDistribID" == "LinuxMint" ] || \\
		[ "$OSRELEASE_NAME" == "Linux Mint" ]; then

			# Check for Linux Mint
			## how do the point versions factor into this
			case $lsbRelease in

				18|18.1|18.2|18.3) $aptAddRepo'deb https://dl.winehq.org/wine-builds/ubuntu/ xenial main' ;;
				19|19.1|19.2|19.3) $aptAddRepo 'deb https://dl.winehq.org/wine-builds/ubuntu/ bionic main' ;;

			esac

	# Ubuntu 18.04 - Bionic
    elif [ "lsbCodename" = 'bionic' ] || \
        [ "$lsbRelease" = '18.04' ]; then

            $aptAddRepo 'deb https://dl.winehq.org/wine-builds/ubuntu/ bionic main'

    # Ubuntu 16.04 - xenial
    elif  [ "lsbCodename" = 'xenial' ] || \
          [ "$lsbRelease" = '16.04' ]; then

            $aptAddRepo 'deb https://dl.winehq.org/wine-builds/ubuntu/ xenial main'

	 # Ubuntu 19.10 - eoan
    elif  [ "lsbCodename" = 'eoan' ] || \
          [ "$lsbRelease" = '19.10' ]; then

		  echo -e "TODO later"

	fi

	# Refresh repo/repo list
	$refresh

}

############################################

# Meta function for installing from the WineHQ repo
function wineHQUbuntuBasedInstall()
{


	# Handles installing the repo
	# The KEYs ARE ADDED in this function
	wineHQUbuntuRepos

	# Adds some Deps (depends on distro version) needed for Wine 5.0
	installWineHQDeps

	# At THIS point any extra dependencies are added


    # install
    $install --install-recommends winehq-stable

    $install playonlinux

}

# End of WineHQ code
###########################################################################################
