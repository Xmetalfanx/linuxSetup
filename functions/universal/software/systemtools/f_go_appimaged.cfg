# note: I split this up into different functions

function remove_preexisting_similar_appimage_tools() {

    clear
    fancy_message action "Removing (if they exist) pre-existing simliar AppImage related tools"

    fancy_message info "I think if pre-existing methods are NOT there ... this code may result in some error message"


    # Remove pre-existing similar tools
    systemctl --user stop appimaged.service || true
    sudo apt-get -y remove appimagelauncher || true

}

function clearing_appimage_related_cache() {

    # Clear cache
    fancy_message action "Clearing AppImage related cache"

    rm "$HOME"/.local/share/applications/appimage*

    [ -f ~/.config/systemd/user/default.target.wants/appimagelauncherd.service ] && rm ~/.config/systemd/user/default.target.wants/appimagelauncherd.service
}
######################################################################################

# instructions below from: https://github.com/probonopd/go-appimage/tree/master/src/appimaged
function download_and_setup_go_appimaged() {

    # create ~/Applications if its not already there
    [ ! -d "~/Applications" ] && fancy_message action "Creating ~/Applications" && mkdir -p ~/Applications

    # Download
    fancy_message action "Downloading Go-Appimaged AppImage"
    wget -c https://github.com/$(wget -q https://github.com/probonopd/go-appimage/releases/expanded_assets/continuous -O - | grep "appimaged-.*-x86_64.AppImage" | head -n 1 | cut -d '"' -f 2) -P ~/Applications/

    fancy_message action "Setting GoAppimaged Appimage to executable"
    chmod +x /home/$USER/Applications/appimaged-*.AppImage
}

# ref: https://github.com/probonopd/go-appimage/tree/master/src/appimaged
function install_go_appimaged() {

    remove_preexisting_similar_appimage_tools
    clearing_appimage_related_cache

    # Optionally, install Firejail (if you want sandboxing functionality)

    download_and_setup_go_appimaged

    # Launch

    fancy_message action "Launching AppImaged AppImage"
    ~/Applications/appimaged-*.AppImage
}