function getAtomLink
{
  # curl -L to follow redirects 
  ## $packageFormat so i can use the same line below, and just change minor things (what that var is) to get the DEB OR the RPM file 
  atomURL=$(curl -s -L "https://github.com/atom/atom/releases/latest" | grep -m 1 $packageFormat | cut -d\" -f 2)

  # the full link to the RPM or DEB file depending on what is passed for $packageformat
  atomDownloadURL=$githubURL$atomURL
  
  # Should be just the full name of the DEB or RPM file 
  atomPackageName=${atomDownloadURL##*/}

}

## Meta Function for Atom 
function installAtom
{

  programTitle="Atom Editor"
  programName="atom"
  programHomepage="http://atom.io"
  latestURL="https://github.com/atom/atom/releases/latest"

  # change pwd
  cd ~/Downloads

  echo "Downloading and Installing the Atom Text Editor"

  case $distroBase in 
  
    debian|ubuntu) 
        
        packageFormat="amd64.deb"
        getAtomLink 

        # Commented out while debugging, since the download part works fine, its the install that fails 
        wget $atomDownloadURL

        sudo gdebi $atomPackageName
        
        ;; 

    fedora|opensuse) 

      packageFormat="rpm"
      getAtomLink 

      wget $atomDownloadURL

      $install $atomPackageName
      ;; 

    arch|solus) 

      $install atom ;;

    *) echo -e "Issue, installing Atom Text Editor" ;; 

  esac 

  ## Debugging?
  userPrompt

  rm $atomPackageName


  $install $atomPackageName


  ###################################################################################
  # Idea to simplify 

  # if i send debURL and rpmURL to metaExternalDownloads ... the RPM and DEB will download and install 


}

##################################################################################
## VSCode Functions 

function refreshInstallVSCode()
{
    # refresh/update repo 
    $refresh
    
    # install (vs)code
    $install code

}


## Meta VSCode Function
## I should include an option to install the snap 

function installVSCode()
{
  programTitle="VS Code"
  
  # name this vscode or code? 
  programName="vscode"
  programHomepage=""
  
  vscodeKey="https://packages.microsoft.com/keys/microsoft.asc"

  ## If the RPM is needed for Fedora and Suse ... can I combine the two?
  echo "Downloading and Installing vscode"

  case $distroBase in 

  opensuse) 

    sudo rpm --import $vscodeKey
          
    sudo sh -c 'echo -e "[code]\nname=Visual Studio Code\nbaseurl=https://packages.microsoft.com/yumrepos/vscode\nenabled=1\ntype=rpm-md\ngpgcheck=1\ngpgkey=https://packages.microsoft.com/keys/microsoft.asc" > /etc/zypp/repos.d/vscode.repo'
  
    refreshInstallVSCode ;; 


  fedora) 

    sudo rpm --import $vscodeKey
    
    sudo sh -c 'echo -e "[code]\nname=Visual Studio Code\nbaseurl=https://packages.microsoft.com/yumrepos/vscode\nenabled=1\ngpgcheck=1\ngpgkey=https://packages.microsoft.com/keys/microsoft.asc" > /etc/yum.repos.d/vscode.repo'

    refreshInstallVSCode ;; 

  arch) 
      # code is the package name in arch, NOT vscode

      refreshInstallVSCode ;; 

  ubuntu) 

    ## official instructions
    # Source: https://code.visualstudio.com/docs/setup/linux

    curl $vscodeKey | gpg --dearmor > microsoft.gpg
    
    ## wait ... sudo install and not "sudo apt install" ?? 
    sudo install -o root -g root -m 644 microsoft.gpg /etc/apt/trusted.gpg.d/
    
    sudo sh -c 'echo "deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main" > /etc/apt/sources.list.d/vscode.list'

    $install apt-transport-https

    refreshInstallVSCode ;;  

  solus) 
      $install vscode ;;


  *) echo -e "Issue, installing vscode " ;; 

  esac 

  ## I had to put the refresh and install back in the if statement due to Solus being "vscode" and not "code" ... any other way I see, other than this revert is just going to be more code THAN the revert 

}

function installTypora
{
    progName="typora"
    progTitle="Typora"
    progHomepage=""

     # Universal Apps 
    snapName="typora-alanzanattadev"
    snapType="normal"

    case $distroBase in 

      arch|fedora|opensuse|solus|ubuntu)

        installSnapApp $snapType $snapname ;; 

    esac

}