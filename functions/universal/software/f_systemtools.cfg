# NOTE TO SELF: there is code for this in the debian section i did before making this a universal thing... move that code here and remove that code, as it is no longer needed
function installIntelMicroCode() {
	clear
	echo -e "Installing the Intel Microcode package"

	case $distroBase in

		arch) installApp "intel-ucode" ;;

		debian|solus|ubuntu) installApp "intel-microcode" ;;

		## This for Leap AND TW? ...
		# IT WORKS on TW but I am not 100% sure it's the correct package
		opensuse) installApp "ucode-intel" ;;

		# seems like the right package
		fedora) installApp "iucode-tool" ;;

  	esac

}

function installBleachbit() {
	programName="bleachbit"
	programTitle="BleachBit"
	programHomepage="https://www.bleachbit.org/"

	case $distroBase in

		arch|debian|fedora|opensuse|solus|ubuntu) installApp "bleachbit" ;;

		*) echo -e "unsupported distroBase" ;;

	esac


}

function installEtcher() {
	programName="etcher"
	programTitle="Etcher"
	programHomepage="https://balena-etcher.eu/"

	etcherURL=$(curl -s "https://github.com/balena-io/etcher/releases" | grep -m1 "x64*.AppImage" | cut -d\" -f2)

	packageURL=$githubURL$etcherURL
	metaExternalDownload $programName $packageURL

}


########################################################################################
# Vebtoy Related

# why is this at the top if it's the meta function?
function metaVentoyDownload() {
	clear

	# $1 = just the type a a string
	echo -e "Downloading Ventoy $1\n\nPlease be patience as it may SEEM like things are frozen for a few moments\n\n"
	wget "$totalISOURL" -P "$downloadsDir"


	echo "Ventoy Downloaded"
	userPrompt
}


function downloadVentoyISO() {
	# ISO vars
	ventoyISOURL=$(curl -s "$ventoyDownloadURL" | awk -F '"' '/download/ && /livecd.iso/ {print $2;exit }'  )
	totalISOURL=$githubBaseURL$ventoyISOURL

	metaVentoyDownload "ISO" $totalISOURL
}

function downloadVentoyTAR() {

	# TAR vars
	ventoyTARURL=$(curl -s "$ventoyDownloadURL" | awk -F '"' '/download/ && /.tar.gz/ {print $2;exit }'  )
	totalTARURL=$githubBaseURL$ventoyTARURL

	metaVentoyDownload "tarball" $totalTARURL
}

# End Ventoy Related
#######################################################################################################

function installStacer() {
	programName="stacer"
	programTitle="Stacer"

	case $distroBase in

		ubuntu)
			# this is "/oguzhaninan/Stacer/releases/download/v1.1.0/stacer_1.1.0_amd64.deb" for example
			stacerURL=$(curl -s "https://github.com/oguzhaninan/Stacer/releases" | awk -F \" '/deb/ && !/script/ {print $2;exit}')

			packageURL="$githubURL$stacerURL"
			metaExternalDownload $programTitle $packageURL

		;;

		*)
			stacerURL=$(curl -s "https://github.com/oguzhaninan/Stacer/releases" | awk -F \" '/AppImage/ {print $2;exit}')

			packageURL="$githubURL$stacerURL"

			stripFileInfo

			clear
			cd $downloadsDir
			wget "$packageURL"
			userPrompt

			clear
			appImageExecutable
			;;
	esac

}


function installOPI() {

	programName="opi"
	programTitle="opi"

	clear
	echo -e "Installing opi only if OpenSUSE is detected"
	case $distroBase in
		opensuse) installApp "opi" ;;
		*) return ;;
	esac


}

function installDebGet() {
	programName="deb-get"
	programTitle="Deb Get"

	# source: https://github.com/wimpysworld/deb-get

	echo -e "Installing $programTitle"
	curl -sL https://raw.githubusercontent.com/wimpysworld/deb-get/main/deb-get | sudo -E bash -s install deb-get


}

function installAppImageLauncherPPA() {
    PPATitle=${programTitle}
	PPAName=${programName}
	PPASource="ppa:appimagelauncher-team/stable"
	PPARef="https://launchpad.net/~appimagelauncher-team/+archive/ubuntu/stable"
	packageNames=${programName}
	supportedBase="focal jammy"

    $install software-properties-common

	universalAddRepo ${PPATitle} ${PPASource} ${packageNames}
}


function installAppImageLauncher(){
    programName="appimagelauncher"
    programTitle="AppImage Launcher"
    programHomepage="https://github.com/TheAssassin/AppImageLauncher"

    case $distroBase in

        arch) $install ${programName} ;;

        fedora|opensuse)
			echo -e "There are RPM files on ${programHomepage} that haven't been updated in 2 years"
				echo -e "without knowing what distro or versions they are for, I am not sure, I feel comfortable"
				echo -e "using those, so I am not adding support for this app here, at the moment "

				# should i use the appimage here?

				;;

		solus)
			echo -e "Support for ${programName} not added for Solus, (yet?)"

			# should i use the appimage here?

			;;

        ubuntu)
            if [ "${debgetInstalled}" == "yes" ]; then echo "installing ${programName}, with deb-get"; deb-get install ${programName}; userPrompt; return; fi

            installAppImageLauncherPPA
            ;;

    esac

}