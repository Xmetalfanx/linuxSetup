# NOTE TO SELF: there is code for this in the debian section i did before making this a universal thing... move that code here and remove that code, as it is no longer needed
function installIntelMicroCode()
{
	clear
	echo -e "Installing the Intel Microcode package"

	case $distroBase in

		arch) installApp "intel-ucode" ;;

		debian|solus|ubuntu) installApp "intel-microcode" ;;

		## This for Leap AND TW? ...
		# IT WORKS on TW but I am not 100% sure it's the correct package
		opensuse) installApp "ucode-intel" ;;

		# seems like the right package
		fedora) installApp "iucode-tool" ;;

  	esac

}



function bleachbitFedoraInstall(){


	# to strip out un-needed content -  sed 's/^.*href="//;s/">.*$//'

	case $fedoraVersion in

		33)
			fedoraBaseURL="https://download-ib01.fedoraproject.org/pub/fedora/linux/releases/33/Everything/x86_64/os/Packages/b/"

			currentBleachbit=$( curl -s $fedoraBaseURL | grep bleachbit | sed 's/^.*href=//;s/"//g' | cut -d ">" -f 1)
		;;

		34)
			fedoraBaseURL="https://download-ib01.fedoraproject.org/pub/fedora/linux/releases/34/Everything/x86_64/os/Packages/b/"

			currentBleachbit=$( curl -s $fedoraBaseURL | grep bleachbit | sed 's/^.*href=//;s/"//g' | cut -d ">" -f 1)

		;;

		*) echo -e "Your current version of Fedora is not supported, unable to install Bleachbit"

			# idea exit this function
			return

			;;
	esac

	bleachbitFedoraURL="$fedoraBaseURL$currentBleachbit"
	bleachbitFedoraBaseName=$(basename $bleachbitFedoraURL)

	# test
	echo -e "bleachbitFedoraURL: $bleachbitFedoraURL"

	wget "$bleachbitFedoraURL" -P ~/Downloads/

	clear
	echo -e "Installing $programName"
	sudo rpm -i ~/Downloads/$bleachbitFedoraBaseName

	echo -e "$programName Installed"

}

#############################################################################
function installBleachbit()
{
	programName="Bleachbit"


	case $distroBase in

		fedora) bleachbitFedoraInstall $programName ;;

		*) installApp "bleachbit" ;;


	esac


}

function installEtcher()
{
	programName="etcher"
	programTitle="Etcher"
	etcherURL=$(curl -s "https://github.com/balena-io/etcher/releases" | grep -m1 "x64*.AppImage" | cut -d\" -f2)

	packageURL=$githubURL$etcherURL
	metaExternalDownload $programName $packageURL

}

##############################################################################################################
## Java Section start

function installJava()
{

	clear
	echo -e "About to install Java support"


	# Note to self: these package names will have to be checked
	case $distroBase in

		arch)
			installApp "java-runtime-common" ;;

		fedora|opensuse)
		# UNTESTED on Fedora ... taking a chance i can use the same code for both since they both use the offical RPM from Oracle

		# Source: https://www.digitalocean.com/community/tutorials/how-to-install-java-on-centos-and-fedora

		# source for OpenSuse: https://en.opensuse.org/SDB:Installing_Java

		oracleJavaURL="https://javadl.oracle.com/webapps/download/AutoDL?BundleId=238718_478a62b7d4e34b78b671c754eaaf38ab"

		# Enter user's Downloads directory
		cd $downloadsDir
		clear

		# this needs to be in quotes for wget and fish
		echo -e "Downloading Java RPM from Oracle"
		wget -O javaJRE.rpm --no-cookies --no-check-certificate --header "Cookie: gpw_e24=http%3A%2F%2Fwww.oracle.com%2F; oraclelicense=accept-securebackup-cookie" "$oracleJavaURL"

		# install RPM
		echo -e "Installing Java RPM file from Oracle"
		sudo rpm -ivh javaJRE.rpm
		userPrompt

		# cleanup
		echo -e "Removing Java RPM file"
		rm javaJRE.rpm

		;;

		solus)
		# openjfx-8 ... not just "openjfx"

		## This seems like it's going to be an issue version wise
		installApp "openjfx-8 openjdk-11"
		;;

		debian|ubuntu) installApp "default-jre" ;;

		*) echo -e "Distro Base not detected, Java not installed" ;;

	esac

	## leave this for now (commented out), but I dont see where i ever declared what $javaPackage is ...
	#$install $javaPackages

	###############
	userPrompt
	###################
}


function checkForJava()
{
  javaPresent="openjdk"
  javaVersion=$(java --version)

  # The first check seems ok in Ubuntu and Arch ... but has an error message to "java virtual machine can not start" or something like that ... but that is where the second check should come in


  clear
  echo -e "Checking for Java "

  if  [ "$javaVersion" == *"$javaPresent"* ] || \
      [ ! -z "$(which java)" ]; then
       echo -e "Java is detected"
       userPrompt
  else

    echo -e "JRE not detected"
    echo -e "About to install Java support"
    userPrompt

    installJava

  fi

}

## End of Java section
#######################################################################################

function downloadVentoy() {
    ventoyDownloadURL="https://github.com/ventoy/Ventoy/releases"

}
