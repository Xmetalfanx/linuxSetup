# NOTE TO SELF: there is code for this in the debian section i did before making this a universal thing... move that code here and remove that code, as it is no longer needed
function installIntelMicroCode() {
	clear
	fancy_message action "Installing the Intel Microcode package"

	case $distroBase in

		arch) installApp "intel-ucode" ;;

		debian|solus|ubuntu) installApp "intel-microcode" ;;

		## This for Leap AND TW? ...
		# IT WORKS on TW but I am not 100% sure it's the correct package
		opensuse) installApp "ucode-intel" ;;

		# seems like the right package
		fedora) installApp "iucode-tool" ;;

  	esac

}

# Nov 2022: this function seems un-needed
# what i think happened is for awhile only (at best) certain Fedora and maybe OpenSUSE branches had bleachbit
# SO this function was more complex at one point
function installBleachbit() {
	programName="bleachbit"
	programTitle="BleachBit"
	programHomepage="https://www.bleachbit.org/"

	# Nov 2022: is this even needed ... it seems like i overcomplicated things...
		# if the distroBase is not listed here, i couldn't get to this function anyway

	installApp "bleachbit"

}

function installEtcher() {
	programName="etcher"
	programTitle="Etcher"
	programHomepage="https://balena-etcher.eu/"
	repoName="balena-io/etcher"

	# for now use the appImage for Debian until i know the DEB could work on Debian
	[[ "${distroBase}" == "ubuntu" ]] && fileFormat="deb" || fileFormat="AppImage"

	gitDownload ${repoName} ${fileFormat}

}


########################################################################################
# Ventoy Related

# why is this at the top if it's the meta function? - the two functions below it call it, thats why
# was I planning on simplifying something?
function metaVentoyDownload() {
	clear

	# $1 = just the type a a string
	fancy_message action "Downloading Ventoy $1\n\nPlease be patience as it may SEEM like things are frozen for a few moments\n\n"
	wget "$totalISOURL" -P "$downloadsDir"

	fancy_message info "Ventoy Downloaded"
	userPrompt
}

function downloadVentoyISO() {
	# ISO vars
	ventoyISOURL=$(curl -s "$ventoyDownloadURL" | awk -F '"' '/download/ && /livecd.iso/ {print $2;exit }'  )
	totalISOURL=$githubBaseURL$ventoyISOURL

	metaVentoyDownload "ISO" $totalISOURL
}

function downloadVentoyTAR() {

	# TAR vars
	ventoyTARURL=$(curl -s "$ventoyDownloadURL" | awk -F '"' '/download/ && /.tar.gz/ {print $2;exit }'  )
	totalTARURL=$githubBaseURL$ventoyTARURL

	metaVentoyDownload "tarball" $totalTARURL
}

# End Ventoy Related
#######################################################################################################

# Nov 2022: redo this
function installStacer() {
	programName="stacer"
	programTitle="Stacer"
	repoName="oguzhaninan/Stacer"

	# Nov 2022: where is ${releasePage} coming from? Answer: gitDownloads (but wait ... i wasn't calling that yet .. look at this again)

	################################################################
	# # Nov 2022: redo this for gitDownloa, below
	# case $distroBase in

	# 	ubuntu)
	# 		# this is "/oguzhaninan/Stacer/releases/download/v1.1.0/stacer_1.1.0_amd64.deb" for example
	# 		stacerURL=$(curl -s "${releasePage}" | awk -F \" '/deb/ && !/script/ {print $2;exit}')

	# 		programURL=${githubBaseURL}${stacerURL}
	# 		metaExternalDownload $programTitle $programURL

	# 	;;

	# 	*)
	# 		stacerURL=$(curl -s "${releasePage}" | awk -F \" '/AppImage/ {print $2;exit}')

	# 		programURL=${githubBaseURL$stacerURL}

	# 		stripFileInfo

	# 		clear
	# 		cd $downloadsDir
	# 		wget "$programURL"
	# 		userPrompt

	# 		clear
	# 		appImageExecutable
	# 		;;
	# esac

	#################################################################

	# try at redone (above) function
	case $distroBase in
		ubuntu)  fileFormat="deb" ;;
		*) fileFormat="AppImage" ;;
	esac

	# if the nameFormat is the same that can be moved down here
	nameFormat="${programTitle}-"

	# do not pass to metaExternalDownload, gitDownload does that now
		# gitDownload gets the link from github, and then passes it to metaExternal
	gitDownload ${programTitle} ${programURL}
}


function installOPI() {

	programName="opi"
	programTitle="opi"

	clear
	fancy_message action "Installing opi only if OpenSUSE is detected"
	case $distroBase in
		opensuse) installApp "opi" ;;
		*) return ;;
	esac


}

function installDebGet() {
	programName="deb-get"
	programTitle="Deb Get"
	# here at least to test my gitDownload function
	repoName="wimpysworld/deb-get"
	fileFormat="deb"

	# source: https://github.com/wimpysworld/deb-get
	# fancy_message action "Installing $programTitle"
	# LEAVE THIS LINE ... its the prior way and i may need to revert back ... when gitDownload works, then i can remove this after tests of deb-get work with that function
	#curl -sL https://raw.githubusercontent.com/wimpysworld/deb-get/main/deb-get | sudo -E bash -s install deb-get

    gitDownload $githubName $fileFormat

	userPrompt
}

function installAppImageLauncherPPA() {
    PPATitle=${programTitle}
	PPAName=${programName}
	PPASource="ppa:appimagelauncher-team/stable"
	PPARef="https://launchpad.net/~appimagelauncher-team/+archive/ubuntu/stable"
	packageNames=${programName}
	supportedBase="focal jammy"

    $install software-properties-common

	universalAddRepo ${PPATitle} ${PPASource} ${packageNames}
}

# Nov 2022: MAYBE redo
function installAppImageLauncher() {
    programName="appimagelauncher"
    programTitle="AppImage Launcher"
    repoName="TheAssassin/AppImageLauncher"
    programHomepage="https://github.com/${repoName}"

	# https://github.com/TheAssassin/AppImageLauncher has a chart showing what is supported

    case $distroBase in

        arch) $install ${programName} ;;

        fedora|opensuse)
			echo -e "There are RPM files on ${programHomepage} that haven't been updated in 2 years"
			echo -e "without knowing what distro or versions they are for, I am not sure, I feel comfortable"
			echo -e "using those, so I am not adding support for this app here, at the moment "

			# should i use the appimage here?

			;;

		solus)
			fancy_message info "Support for ${programName} not added for Solus in my scripts yet, (yet?)"

			# should i use the appimage here?

			;;

        ubuntu)
            if [ "${debgetInstalled}" == "yes" ]; then echo "installing ${programName}, with deb-get"; deb-get install ${programName}; userPrompt; return; fi

            installAppImageLauncherPPA
            ;;

    esac

}

# not done yet ... at all .. this is probably where i started the "gitDownload" template function idea
function installCzhawka() {
	programName="czhawka"
	programTitle="Czhawka"
	programHomepage="https://qarmin.github.io/czkawka/"

	repoName="qarmin/czkawka"
	fileFormat="AppImage"

}