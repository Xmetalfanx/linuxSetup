
# Check if repo is installed/enabled
function thirdPartyRepoCheck() {
 	
	# Opensuse has pacman installed
    # Fedora has RPMFusion installed
    # ubuntu has PPAs 
    ########################################


	# case statement to assign repoExistsCheck var and repoName 
	case $distroBase in 

		fedora) 
			repoName="rpmfusion" 
			local repoExistsCheck=$(dnf repolist | grep "$repoName" )
			;;
		
		opensuse) 
			repoName="packman" 
			local repoExistsCheck=$(zypper lr | grep "$repoName") 
			;; 

		ubuntu)
			repoName="${PPAName}"
			local repoExistsCheck=$(inxi -r | grep "$PPAName" )
			;;
	esac 

	# Check if thirdPartyRepoExists is not present
		# This could be an issue since ubuntu wise my thinking is the CURRENTLY addresssed PPA is the repo but there may be different 
		# repos/PPAs added 

	case $distroBase in 
		
		fedora|opensuse) 
			
			# if the results of the check are NOT null 
			if [ ! -z "${repoExistsCheck}" ]; then
				
				echo "$repoName already enabled"
				thirdPartyRepoExists="yes"

			else
				# echo for a test only
				echo -e "The $repoName repo, is not installed already"

				# I think this install step should be elsewhere 
				# # Install third party repo
        		# metaUniversalExtraReposInstall

        		thirdPartyRepoExists="no"

			fi 
		;;

		ubuntu)

			if [ ! -z "${repoExistsCheck}" ]; then
				thirdPartyRepoExists="yes"
				echo -e "PPA for $PPATitle exists/is already present"
				userPrompt
			else
				thirdPartyRepoExists="no"
			fi  
			;; 
		*) return ;; 

	esac 

}

############################################

## This will be the meta function for arch based stuff
## Mirrors/Repos/whatever
function optimizeRepo() {

    case $distroBase in

    	fedora)
			## Fedora  ... no need for extra checks, since the distroBase should be known here
			echo -e "Optimizing Fedora, by adding fastest mirror check to the dnf.conf file "

			su -c 'echo "fastestmirror=true" >> /etc/dnf/dnf.conf'
			echo -e "Done"
			userPrompt
			;;

		arch)

			# backup original mirrorlist but doesn't touch the original backup if it already exists
			echo -e "Backup Mirrorlist "
			backupMirrorlist

			if  [ "$OSRELEASE_NAME" = "Manjaro Linux" ] || \
				[ "$OSRELEASE_ID" = "Manjaro Linux" ] || \
				[ "$LSBDESCRIPTON" = "ManjaroLinux" ]; then

				# Manjaro
				optimizeManjaroMirror

			else
				# Arch
				optimizeArchMirrorsReflector

			fi
        ;;

    # debian)

	# 	# Feb 2022: IS THIS even needed anymore?

	# 	# netselect-apt creates a backup but .... the date is the extension ... i may want to keep this
	# 	# to do a "restore" alternate function maybe

	# 	netselectBackup="$sourceListDir/sources.list.netselectBackup"

	# 	clear
	# 	echo -e "Installing netselect-apt"
	# 	installApp "netselect netselect-apt"
	# 	clear

	# 	# Backup sources.list
	# 	echo -e "Backing up sources.list to $netselectBackup"
	# 	sudo cp $sourceListDir/sources.list $netselectBackup
	# 	echo -e "Sources.list is backed up"
	# 	echo -e "notice: netselect-apt also backs up your sources.list file it seems"
	# 	userPrompt


	# 	# -n = includes nonfree
	# 	clear
	# 	echo -e "Running netselect-apt - with non-free included "
	# 	$admin netselect-apt -n -o /etc/apt/sources.list

	# 	;;

      *) 	echo "No Optimizations performed"
    		return ;;

    esac

}

function thirdPartyRepoQuestion() {
    # $1 = function name to call if the user wants to proceed

    # This seems messesd up, but I suppose the thing to pass to this function would the function name?
        ## the logic/coding seems hacky to me, but i may come back to that later

    clear
    echo -e "Please note: this is a third party repo that I know works. I would never include repos that I did not trust to at least try on my own systems, but I know some users will not want to add things that are not officially from OpenSUSE\n"
    read -p "Do you still want to add this repo? (Y/N)" suseThirdPartyRepoChoice


    case $suseThirdPartyRepoChoice in

        [yY])

			# TODO: redo the echo statement
            echo -e "OpenSuse Repos would be added at this point"
            userPrompt

            ;;

        [nN]) return ;;

        *) echo -e "Invalid selection" ;;


    esac

}

## Meta function to add sources
## This IS the meta function
function universalAddRepo() {
	# july 2022: I think i can do better then $1 and $2 to be more descriptive 
 	# $1 - Repo Name
  	# $2 - Repo URL/Source

  	case $distroBase in

		fedora) sudo dnf config-manager --add-repo $2 ;;
		opensuse)
			## ANOTHER function had  "addrepo -f -n $1 $2"... what is -n ?
			sudo zypper addrepo -f $2
			;;

		solus)
			# probably would only be used for adding the default repo or (forgot what Solus calls it) the testing repo they have
			sudo eopkg add-repo $2 ;;

		ubuntu) addPPA $PPASource  ;;

  esac

}
