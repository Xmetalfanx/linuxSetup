
###################################################################################
## Start of functions for third party extraction to Programs folder 

function setPathVars()
{
    # idea: IN the script dir that is 
    # is this needed here? ... f_variables a better location? 
    localMenuFile="$localMenuDir/$programName.desktop"
    localIconFile="$localMenuDir/$iconFile"
    # due to say png vs svg ... the icon file's local location is set in each app's function before it gets here 

    # program related 
    fullProgramPath=$(find $programDir -type f -name "$programFile")
    execPath=$(echo -e "Exec=$fullProgramPath")   
    
    # Icon related
    fullIconPath=$(find $programDir -type f -name "$iconFile")
    iconPath=$(echo -e "IconFile=$fullIconPath") 
    
}

# only for debugging 
function debuggingVars() {
    echo -e "fullProgramPath:\t $fullProgramPath"
    echo -e "execPath:\t $execPath"
    echo -e "iconPath:\t $iconPath"
}

# this adds custom entries to the menu (.desktop) file 
function populateMenuFile() {

  clear 
  echo "Adding Exec= line, to menu file"
  # where am i doing this?  shouldn't this be moved somewhere first? 
  echo -e $execPath >> "$localMenuFile"
  
  echo "Adding IconFile= line, to menu file"
  echo -e $iconPath >> "$localMenuFile" 
  
}

function moveMenuToProgramsFolder() {
  echo -e "Moving customized Menu file to proper location"
  cp $localIconFile 

}


# Check if ~/Programs exists, and if not, create it
function programsDestinationDetection() {
    if [ -d $programDir ]; then
        echo -e "$programDir already exists"
    else
        echo -e "$programDir does not already exist, creating directory to store third party apps"
        mkdir $programDir
        echo -e "Program directory create.  The location is in your user's Home folder as \"Programs\" "

    fi

    ################################################################################################
    # Subdirectory/SubFolder check

    # If the subfolder does not exist, create it
    if [ ! -d "$programDir/$programName" ]; then
      echo -e "$programDir/$programName does not exist"

      # Create the directory
      mkdir $programDir/$programName

    elif [ ! -z "$(ls -A $programDir/$programName)" ]; then
        echo -e "$programDir/$programName is not empty"

        ## can not remember my intent for what happened here

    fi

}


# function to move third party app (tarballs, not really debs or rpm files) to a "Programs" folder
function moveToProgramsFolder() {
    clear

    # Checks for the destination and if what is needed is there
      # if not .... set it up
    programsDestinationDetection

    case $extonly in
      AppImage) moveAppImageToProgramsFolder ;;

      *)
                     
        echo -e "Moving $extractedDownloadDir to $programDir"
        cp -r "$extractedDownloadDir" "$programDir"
        
        # debugging pause 
        userPrompt

        echo -e "Copying Icon file over for menu"
        cp "$localIconFile" "$programDir/$programName"

      ;;

    esac
}

# this is for apps that can run if you just extract them... a sort of meta function i guess
  # think of better functio name later
function extractedApp() {

    setPathVars
    
    moveToProgramsFolder
    
    debuggingVars
    
    populateMenuFile

}

## End of functions for third party extraction to Programs folder 
##############################################################################################
