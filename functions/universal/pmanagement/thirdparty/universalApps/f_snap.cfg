
###################$$$$$$$$$$$$$$$$$$$$$$$##############################
# Snap Code

function opensuseLeapSnapInstall()
{

    case $OSRELEASE_VERSIONID in
        15.3) snapdURL="https://download.opensuse.org/repositories/system:snappy/openSUSE_Leap_15.3/system:snappy.repo" ;;
    esac

}

function opensuseSnapInstall()
{

    case $openSUSEBranch in

        tumbleweed) snapdURL="https://download.opensuse.org/repositories/system:snappy/openSUSE_Tumbleweed/system:snappy.repo" ;;

        leap) opensuseLeapSnapInstall ;;

    esac

    universalAddRepo "Snappy" $snapdURL
    $refresh
    installApp "snapd"
}

function metaInstallSnapSupport()
{
    # Install Snapd
    echo -e "Snap Support not detected, Installing  .. "

    case $distroBase in

        arch)
            # Resource: https://docs.snapcraft.io/installing-snap-on-arch-linux

            # install Build packages call here

            # change pwd
            cd ~/Downloads

            git clone https://aur.archlinux.org/snapd.git
            cd snapd
            makepkg -si

            # Cleanup
            cd ..
            rm -rf snapd

            sudo systemctl enable --now snapd.socket

            # Enable Classic Snap support
            sudo ln -s /var/lib/snapd/snap /snap

            sudo pacman -S squashfuse


            echo
            echo -e "Snap support installed"
            echo
            echo -e "You may want to reboot here"
            echo
            userPrompt
            clear

            ;;

        fedora)
            installApp "snapd"

            ## due to --classic not working on snaps by default
            sudo ln -s /var/lib/snapd/snap /snap
            ;;

        solus|ubuntu) installApp "snapd" ;;

        opensuse) opensuseSnapInstall ;;

    esac

}

# Seperate so i can call this alone later
function snapCheck()
{
    # Check for snapd being installed
    if [ -e /usr/lib/snapd ] || \
	   [ -f /usr/bin/snap ]; then

        echo -e "Snap support IS installed"
        snapSupport="yes"

    else
        echo -e "no Snap support currently installed"
        snapSupport="no"
    fi

}

# no need to do variables since they are in f_variables.cfg already
function snapConnRemoveMedia()
{
    echo -e "Connecting $snapName to removable-media"

    # the snap name passed has to be EXACT
    snap connect $snapName:removable-media

}


#####################################################################################
# Snap Meta function
# consider renaming this to "installSnap" later ... if i do that now, some other things will break (I am in the middle of other tasks now)

function installSnapApp()
{
    # What gets passed?
        # snapType = $1
        # snapName = $2

    ## Checks for Snap support
    snapCheck

    case $snapSupport in

        "no")
            # Snap support NOT detected, so install it first
            metaInstallSnapSupport
            ;;

        "yes")
            # Snap support found
            echo -e "Snap support found"

    esac

    echo -e "Installing $snapName Snap"

    # Check snap type, located in each app function's list of variables
    case $snapType in

		## note to self: I changed it to "normal or anything that is not listed in case $snapType is not passed in some cases "
        classic) snap install --classic $snapName ;;
        beta) snap install --beta $snapName ;;
        edge) snap install --edge $snapName;;
		normal|*) snap install $snapName ;;

    esac

}

#

# End of Snap code
####################################################################
