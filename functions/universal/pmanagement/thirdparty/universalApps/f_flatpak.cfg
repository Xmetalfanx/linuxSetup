
# Functino to install Flathub itself
function installFlatHub()
{
    clear
    echo -e "Adding Flathub Repo"
    sudo flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
    echo -e "Flathub Repo added"
    userPrompt

}



# Check to see if Flatpak support is enabled
function flatpakCheck()
{

    # new way
    [ -e /usr/bin/flatpak ] && echo -e "Flatpak Support IS detected" && flatPakSupport="yes" || echo -e "no Flatpak Support currently installed" || flatpakSupport="no"

    # DO NOT install here ... i may want to check, and not install FP support

}

# Install flatPak support
function flatPakSupportInstall()
{
    case $distroBase in

        arch|debian|opensuse|solus|ubuntu) installApp "flatpak" ;;

        fedora) echo -e "Flatpak Support enabled by default in Fedora" ;;

        *) return ;;

    esac


    case $distroBase in

        solus) installApp "xdg-desktop-portal-gtk" ;;

        debian|ubuntu) installApp "gnome-software-plugin-flatpak" ;;

    esac

    # Include message about rebooting to complete
    echo -e "Flatpak support installed: Some sources say it's best to reboot at this point"
    userPrompt

}

# meta function to check for/install Flatpak Support
function metaFlatpakSupport()
{
    # Check if flatpak is already installed, if not, install it (handled already)
    flatpakCheck

    # if FP support is not detected, install it
    [ "$flatpakSupport" == "no" ] && flatPakSupportInstall || return

}


###################################################################################
# Meta function - to install actual Flatpak Apps... not flatpak itself
function installFlatpakApp()
{
    clear

	# checks if Flatpak and/or Flathub are installed/enabled/whatever, FIRST
		## does this return EXIT the function? ... i DONT want that
	[ "$flatpakSupport" != "yes" ] && metaFlatpakSupport

	# issue with statement above alone ... it maybe that flatpak support is active BUT flathub is not installed
	# do a CHECK later, but leave this for now
	installFlatHub

	# note this var is a messy name but ... use it for now
    echo -e "Installing $@ Flatpak"
    flatpak install $@
	userPrompt

}



#################################################################
## Idea only below

function massInstallFlatpaks
{

    installFlathubFlatpak $firefoxFP


    installFlathubFlatpak $

}