
## This entire function is for testing only 
function stripFileInfoTestOutput
{
 
  clear
  # Display Test for the full URL
  echo -e "\n\nFull URL is:\t $packageURL"
  ###########################################


  # Display Test for Total file Extension
  echo -e "\nTotal Filename is:\t $filenameWEXT"
  ###############################################


  ## Display Test for final output
  echo -e "Final Extension for test loop:\t $extfinal"


  echo -e "Filename by itself: \t $file"
  ###########################################
}
###########################################################
###########################################################


## Gets info from URL to be used later 
function stripFileInfo
{
  
  # $1 is a URL 
  # DO I REALLY need to assign this to another variable? 
  packageURL=$1

  # Filename with extension 
  filenameWEXT=${packageURL##*/}

  ####################################
  # Old way of doing it 

  # Filename by itself, NO extention 
  filename=${filenameWEXT%%.*}

  extonly=${filenameWEXT#*.}
  ######################################


  # Call to test output function 
  # This will be removed later 
  # stripFileInfoTestOutput
  
}

###############################################################################

## This is should be what is called from program functions 
function downloadFile
{

    # This has to have the stripFileInfo function run first
    ## NOW the $packageName should be known 

    echo -e "Downloading $1 package"
    if [ "$extonly" == 'git' ]; then
        
        #idea: remove this and pass this to a git function instead 
        git clone $1

    elif [ "$extonly" == 'deb' ]; then
      printf "DEB stuff done here "
      
    
    elif [ "$extonly" == 'rpm' ]; then
      printf "RPM stuff done here "



    ## ?? all tarballs in one function .. .maybe with a nested if/else loop? 
    ## remember to say strip tar.gz down to targz/tgz and tar.bz2 to tarbz2 
    elif [ "$extonly" == 'targz' ]; then
        echo "tarball stuff done here "

    else

        ## remember $2 is the url 
        wget -O $packageName $2
        echo "$1 downloaded"
        
    fi

    # Needed? ... I will leave it for now
    userPrompt
}

###############################################################################################

function extractDownload
{
  echo -e "About to Extract $programName's archive "

    ## What gets passed SHOULD BE the entire file name WITH ext info (?? what did i name that var?) , but due to other functions running before this .. extfinal should be KNOWN 

    # I SHOULD have it make a temp location before extracting so the extracted downloads are organized in one place and not say ... in the root dir of these scripts 

    if [ "$extfinal" == 'targz' ] || [ "$extfinal" == 'tgz' ]; then
         tar -zxvf $1

    elif [ "$extfinal" == 'tar' ]; then
         tar -xvf $1

    elif [ "$extfinal" == 'tarxz' ]; then
        echo "Get code for this tarxz archive type"

    ## Double Check the ext on this one
    elif [ "$extfinal" == 'tarbz' ]; then
       tar -xJf $1

    elif [ "$extfinal" == 'zip' ]; then
        # unzips to the user's Downloads folder s
        unzip $1  -d ~/Downloads

    fi
  

  echo -e "$programName archive extracted"
  
  userPrompt
  
  clear

}


## I have no idea if this is a duplicate function ... I may have this elsewhere 
function installThirdParty
{
   

    if [ "$extfinal" == 'deb' ]; then
        sudo dpkg -i $2 
        
    elif [ "$extfinal" == 'rpm' ]; then
        sudo rpm -i $2
    else 
        echo -e "$1 not installed"
    fi 
  
    echo -e "$1 has been successfully installed"
}


#########################################################################
function thirdPartySoftwareInstall
{
  
    ## Installs downloaded DEB or RPM

    if [ "$packageType" == 'deb' ]; then
      ## Gdebi or dpkg ? ... gdebi is not always installed

      sudo dpkg -i $packageURL
    elif [ "$packageType" == 'rpm' ]; then
      sudo rpm -i $packageURL

    # if (various tar formats here, call new (not coded yet) tarExtract function )
    fi
}


##################################################################
#################################################################

## Meta Function 
function externalDownload
{
  # Get Info to be used later 
    # $1 = Program Name (var)
    # $2 = URL (var)

    # Get info from the URL 
    stripFileInfo $2 


}

