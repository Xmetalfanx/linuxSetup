# Actually install the third party application
function installThirdPartyAppFromRepo() {

	[ "${thirdPartyRepoExists}" == "yes" ] && installApp "${@}" || fancy_message warn "Not installing ${programName}, since the needed third party repo, ${repoName}, is not installed/enabled"
}

# idea for f  ... "if programName or programTitle is not empty" (where do i clear vars?... i need to clear existing vars i think ), add echo about the 
function programDetectedThirdPartyRepo() {

	if [[ -v "${programName}" || -v "${programTitle}" ]]; then 
		echo -en "The program ${programTitle} needs an additional software repository to be added, in order to be installed.\nThe name of the Repo that is needed: ${thirdPartyRepoName}"
	fi 
}

## first check the thirdPartyRepoExists var, then do this
function thirdPartyRepoSoftwareNotice()
{
	# check if the Repo exists
	# the IDEA is that if third party repos needed are already added than there is no point in asking or displaying this message

	thirdPartyRepoCheck

	#if "no" or the var has NOT been assigned a value
		# idea/reasoning: with "no" maybe user selected that before but they may change their mind
    if [[ "${thirdPartyRepoExists}" == "no" || -z "${thirdPartyRepoExists}" ]]; then
		# will diplay another echo about an app needing this repo to install 
		programDetectedThirdPartyRepo

		echo -en "Do you want to install the repository: ${thirdPartyRepoName}?\nIf you select no, you will be returned to the menu location you were at before, without ${programTitle} being installed"

		read -r -p "Your Choice? (Y/N):" repoSoftwareSection

		case ${repoSoftwareSection} in

			[yY]) universalAddRepo ;;

			[nN])
				echo -e "You have choosen to not install third party repos at this time"
				userPrompt
				;;

			*) fancy_message warn "invalid selection" ;;

		esac

	fi
}
