
## Meta function ... this is what is called .... IF THE USER says "yes...install the repo" this takes care of it, passing to another function
function thirdPartyRepoSoftwareNotice()
{

    # the IDEA is that if third party repos needed are already added than there is no point in asking
    # or disalaying this message

    #if "no" or the var string is set to zero
    if [ "${thirdPartyRepoExists}" == "no" ] || [ -z "${thirdPartyRepoExists}" ]; then

        #TODO:  maybe have a way to display WHAT third party repo is being talked about and maybe a link to it's page

        echo -e "The program ${programTitle} is going to be installed, though an additional repo is needed. The name of the "
        echo -e "Repo that is needed: $thirdPartyRepoName"
        echo -e "Do you want to install the needed repo, to install ${programTitle}?"
        echo -e "\nIf you select no, you will be returned to the menu location you were at before"

        read -r -p "Your Choice? (Y/N):" repoSoftwareSection

        case ${repoSoftwareSection} in

            [yY])

                # Check for third party repo already being installed (installs if not there)
                thirdPartyRepoCheck

                # if nothing is passed for $programName ... does this cause issues?
                if [ -v programName ]; then
                    installApp $@
                fi
                ;;

            [nN])
                ## where is this returning to ..  seems like it would return to the spot in the software function where this function is called

                ## Logic issue here ... WHERE am I sending the user? ... it will still try to intall the software this way ... even if the repo is not added ... THAT IS NOT what I want

                echo -e "You have choosen to not install third party repos at this time"
                userPrompt
                return ;;

            *) fancy_message lwarn "invalid selection" ;;

        esac


    else
        return
    fi
}
