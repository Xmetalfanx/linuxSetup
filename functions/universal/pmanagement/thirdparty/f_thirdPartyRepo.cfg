function installThirdPartyAppFromRepo() {

	# ?? Should "${@}" be "${programName} " ??
	[ "${thirdPartyRepoExists}" == "true" ] && installApp "${@}" || fancy_message warn "Not installing ${programName}, since the user choose not to install the needed Repo for this install"
}

## Meta function ... this is what is called .... IF THE USER says "yes...install the repo" this takes care of it, passing to another function
function thirdPartyRepoSoftwareNotice()
{

    # the IDEA is that if third party repos needed are already added than there is no point in asking or displaying this message

    #if "no" or the var string is set to zero
    if [ "${thirdPartyRepoExists}" == "no" ] || [ -z "${thirdPartyRepoExists}" ]; then

        #TODO:  maybe have a way to display WHAT third party repo is being talked about and maybe a link to it's page

        echo -e "The program ${programTitle} is going to be installed, though an additional repo is needed. The name of the "
        echo -e "Repo that is needed: ${thirdPartyRepoName}"
        echo -e "Do you want to install the needed repo, to install ${programTitle}?"
        echo -e "\nIf you select no, you will be returned to the menu location you were at before"

        read -r -p "Your Choice? (Y/N):" repoSoftwareSection

        case ${repoSoftwareSection} in

            [yY])

                # Check for third party repo already being installed (installs if not there)
                thirdPartyRepoCheck

            [nN])
                echo -e "You have choosen to not install third party repos at this time"
                userPrompt
				;;

            *) fancy_message warn "invalid selection" ;;

        esac

		installThirdPartyAppFromRepo


    else
        return
    fi
}
