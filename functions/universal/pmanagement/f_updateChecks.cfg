
# Last Update Check:

function rollingReleaseUpdateDisplay()
{
  ## no need to run lastUpdateCheck since it automatically runs at script startup

  if [ "$diffInYears" -ge  1 ]; then
    echo "You are on a rolling release; HOWEVER, it appears that you haven't updated in at least 1 year"

  elif [ "$diffInMonths" -ge  6 ];then

    echo "You are on a rolling release, that hasn't been updated in at least 6 months; but, has been updated within the past year"

  elif [ "$diffInMonths" -le  6 ] && [ "$diffInMonths" -ge  1 ]; then
    echo "You are on a rolling release who's last update was between 1 and 6 months ago"

  else
    return
  fi

  echo
  echo "Going too long between updates on some rolling releases may result in issues/breakages when an update is finally done"
  userPrompt
}

function lastUpdateDisplay()
{
    echo -e "Last Update: $lastUpdate"
    echo -e "Time Since last Update \(over 24 hours\): $diffInYears years, $diffInMonths months, $diffInDays days"
    userPrompt

}


function lastUpdateCheck()
{

  case $distroBase in

    arch)
        lastUpdate=$(awk '/starting/ { print $1 }' /var/log/pacman.log | tail -1 | cut -c 2-11)
        lastUpdateEpoch=$(date +"%s" -d "$lastUpdate")
      ;;


    ubuntu)

        lastUpdate=$(awk '/Start-Date/ { print $2 }' /var/log/apt/history.log | tail -1)
        lastUpdateEpoch=$(date +"%s" -d "$lastUpdate")
        ;;

  esac

  #################################################################
  durationSinceLastUpdate=$[currentDate/lastUpdateEpoch]

  diffInDays=$[durationSinceLastUpdate/day]
  diffInWeeks=$[durationSinceLastUpdate/week]
  diffInMonths=$[durationSinceLastUpdate/month]
  diffInYears=$[durationSinceLastUpdate/year]


}


## despite the name, I will use this for rolling/semi-rolling releases
function rollingReleaseUpdateCheck()
{
  ## probably should include rawhide
  ## could i just check ....if rollingRelease=yes ... ?? .... though for semi-rolling releases this may be a problem
  case $distroBase in

    arch|debian) rollingReleaseUpdateDisplay ;;

    opensuse)
      if [ "$openSUSEBranch" = "tumbleweed" ]; then
          rollingReleaseUpdateDisplay
      else
        return
      fi

      ;;

    fedora)
      # I think if ...fedoraVersion=rawhide...(I need to check with an lsbrelease check on rawhide)... then this should be triggered
      return
      ;;

    *) return ;;

  esac


}