# logs the info on the last upgrade to a file 
function logUpgradeInfo()
{
  
  clear

  # the idea of this is to keep track (in my scripts anyway) of the last time the system was updated.   I do have a few ideas for why that may be needed that I am throwing around in my head.

  upgradeDate=$(date +%D%t:%r)

  echo -e "Last Upgraded:\t $distroBase $version \t$upgradeDate" >> updateInfo.txt

}


## This will be the meta function 
## Mirrors/Repos/whatever 
function optimizeRepo()
{
    ## Fedora  ... no need for extra checks, since the distroBase should be known here 
    if [ "$distroBase" == 'fedora' ]; then  
    
      su -c 'echo "fastestmirror=true" >> /etc/dnf/dnf.conf'
      userPrompt


    ## I need to do a check for arch but i CANT use distroBase since that will trigger if the distro is Manjaro too 



    # TODO: Check these vars ... they could be slightly wrong 
    ## If Manjaro 
    ## This number of checks may be overkill 
    elif  [ "$OSRELEASE_NAME" = "Manjaro Linux" ] || \
          [ "$OSRELEASE_ID" = "Manjaro Linux" ] || \
          [ "$LSBDESCRIPTON" = "ManjaroLinux" ]; then

      ## Call to Function 
      manjaroRankMirrors

    else
      echo "No Optimizations performed"
      return 
    
    fi


}


###################################################################################

## Universal function to add sources 
## This IS the meta function 
function universalAddRepo()
{
  # $1 - Repo Name
  # $2 - Repo URL/Source 

  echo "Adding $1 Repository"

  if [ "$distroBase" = 'ubuntu' ]; then

    echo -e "Adding $1 PPA"
    sudo apt-add-repository $2

  elif [ "$distroBase" = 'fedora' ]; then
    sudo dnf config-manager --add-repo $2

  elif [ "$distroBase" = 'opennsuse' ]; then
    
    ## ANOTHER function had  "addrepo -f -n $1 $2"... what is -n ? 
    sudo zypper addrepo -f $2

  elif [ "$distroBase" = 'solus' ]; then
    sudo eopkg add-repo $2

  else
    return 
  fi

  # Refreshes the repo 
  $refresh

}

## End Add Source/Repo Section 
################################################################


# Meta-function to handle third party repos WITH software listed (say PPAs )
# GOAL: ppa/third party repo functions, in /functions/universal/software/*,  just call this function and it handles everything ... each software/third party software Function will have different info 
function ppaRepoAddition()
{

    ###########################
    # $1 - the third party repo Name        repoName
    # $2 - Repo Source                      repoSource

    ##########################

    ## Only Pass two arguements .. no need to pass $3 
    universalAddRepo $1 $repoSource 
    
}

