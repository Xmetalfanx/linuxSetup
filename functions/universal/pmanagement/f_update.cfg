. $uniFunctionDir/pmanagement/f_updateDisplay.cfg
. $uniFunctionDir/pmanagement/f_updateChecks.cfg

#####################################
## For Snaps and FPs ... NOT a meta function
function universalAppUpdates()
{
	clear

	snapCheck

	if  [ "$snapSupport" = "yes" ]; then
		fancy_message action "Updating Snaps"
		#Update Snaps
		$snapUpdate
	else
		fancy_message info "no Snap Support detected - nothing to update"
	fi

	userPrompt

	flatpakCheck

	if [ "$flatPakSupport" = 1 ]; then
		fancy_message action "Updating Flatpaks"
		#Flatpak Update
		$flatpakUpdate

	else
		fancy_message info "no FlatPak support detected - nothing to update"
	fi

	userPrompt

	## There may be an extra prompt somewhere... keep this userPrompt for now

}

# Updater for packages installed via the AUR
function aurUpdater()
{
	clear
	fancy_message action "Starting check for AUR Packages"

	## ? IF there is no AUR Helper installed, does this bug the user to install one or just (this is what I'd want) assume that no AUR apps are installed and moved on?

	# Check for trizen or yay ... I think if both are installed a menu is presented
	AURHelperCheck

	$aurUpdate

	fancy_message info "AUR Update Finished"

}

########################################################################################
## Meta function
function universalUpdate()
{

	## Check for and if the right distro/distro base, displays message to user
	lastUpdateCheck

	rollingReleaseUpdateCheck

	clear
	fancy_message info "Updating System"
	fancy_message recommend "This will include a check for Snap and Flatpak updates, after the initial updates"
	sleep 2


  	case $distroBase in

		arch)
			$update
			aurUpdater

			;;

		fedora|opensuse|solus) $update ;;

		debian|ubuntu)

			# This is the spot to put the message when Mint is detected to use the GUI updater
			if [ "$distroName" = "neon" ]; then

				## Clears screen since update output seems messy (to me anyway)
				clear
				sudo pkcon update
				userPrompt
				fancy_message info "KDE Neon Updated"
				userPrompt
				clear

			elif [ "$distroName" = "linuxMint" ]; then
				clear
				fancy_message info "Linux Mint Detected, updates will not be performed as you should use Mint's Graphial Updater to avoid issues"
				userPrompt

				return
			else
				refreshRepositories
				
				$update
			fi

			;;

    # anything else
    *)  fancy_message warn "distroBase is not detected - Updates not performed"
        userPrompt

        #the idea is to exit the function NOT JUST the if statement
        ## I do not want the output of writing the last upgraded date being recorded IF there was nothing done

	esac


	# Function call to log info
	logUpgradeInfo

	fancy_message info "System Up-to-date"
	userPrompt

}


function openSUSEUpdate() {

	openSUSERawUpdateDate="find /var/log -maxdepth 1 -type f -iname "*zypper*" | sort -n | tail -1 | awk -F"-" ' {print $2}' | sed 's/\.xz//g' "

	openSUSEUpdateDate_Year

	openSUSEUpdateDate_Month

	openSUSEUpdateDate_Day
}