. $uniFunctionDir/pmanagement/f_updateChecks.cfg

###################################################################################
## For OpenSuse

function suseUpgradeMessage
{
  ## Pass TO THIS function by a universal function seems to be the way to do it ... though this code may be better IN that function ...
  clear
  echo -e "Updating OpenSuse - Note: you may have to scroll down and agree to the agreement for this to work\n\n"
  echo -e "You May also have to decide to trust or not trust a third party repo\n"
  echo
  echo "IF you see that zypper is NOT upgrading something, that may be normal ... sometimes a more updated package in a different repo is found but since you did not give that other repo a higher PRIORITY, those newer versions will be heald back"
  userPrompt

}


#####################################
## For Snaps and FPs ... NOT a meta function 
function universalAppUpdates()
{
  clear

  snapCheck

  if  [ "$snapSupport" = 1 ]; then
    echo -e "Updating Snaps"
    #Update Snaps
    $snapUpdate
  else
    echo -e "no Snap Support detected - nothing to update"
  fi

  userPrompt

  flatpakCheck

  if [ "$flatPakSupport" = 1 ]; then
    echo -e "Updating Flatpaks"
    #Flatpak Update
    $flatpakUpdate

  else
    echo -e "no FlatPak support detected - nothing to update"
  fi

  userPrompt

  ## There may be an extra prompt somewhere... keep this userPrompt for now

}

########################################################################################
## Meta function
function universalUpdate()
{
  # Checks the support status and then exits the scripts if the user is on an EOL distro
  # if the support status is UNKNOWN ... the scripts will not exit
  supportStatusDetection

  ## Check for and if the right distro/distro base, displays message to user
  lastUpdateCheck

  echo "Updating System"
  echo
  echo "This will include a check for Snap and Flatpak updates"


  case $distroBase in

    arch|fedora|solus) $update ;;

    debian|ubuntu)

        # This is the spot to put the message when Mint is detected to use the GUI updater
        if [ "$distroName" = "neon" ]; then

            ## Clears screen since update output seems messy (to me anyway)
            clear
            sudo pkcon update
            userPrompt
            echo -e "KDE Neon Updated"
            userPrompt
            clear

        elif [ "$distroName" = "linuxMint" ]; then
            clear
            echo -e "Linux Mint Detected, updates will not be performed as you should use Mint's Graphial Updater to avoid issues"
            userPrompt

            return
        else
          $refresh
          $update
        fi

        ;;


    opensuse)
      suseUpgradeMessage
      $update ;;

    # anything else
    *)  echo -e "distroBase is not detected"
        echo
        echo -e "Update not performed"
        userPrompt

        #the idea is to exit the function NOT JUST the if statement
        ## I do not want the output of writing the last upgraded date being recorded IF there was nothing done

  esac


  # Function call to log info
  logUpgradeInfo

  echo -e "System Up-to-date"
  userPrompt

}
