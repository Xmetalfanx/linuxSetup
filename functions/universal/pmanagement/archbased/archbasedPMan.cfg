## Declare Variables
mirrorlist="/etc/pacman.d/mirrorlist"

# backup of original mirrorlist before my scripts do anything 
originalMirrorlist="/etc/pacman.d/mirrorlist.original"

# backup file to be created "each time"
backupMirrorlist="/etc/pacman.d/mirrorlist.backup"


###################################################################################################
### Backup section 

## This could be for arch or Manjaro ... any arch base really .. 
function backupMirrorlist()
{
  
  ## Check if original mirrorlist has NOT been created/backed up yet 
  # makes backup of current mirrorlist but doesn't touch mirrorlist.original IF IT ALREADY EXISTS 
  if [ ! -f originalMirrorlistBackup ]; then

    echo -e "Making a backup of your original mirrorlist"
    sudo cp $mirrorlist $originalMirrorlist
    echo -e "Your original Mirrorlist successfully backed up"

  else
    
    # backup mirrorlist to a .backup file, that will be changing with each run 
    echo -e "Making a backup of your current mirrorlist"
    sudo cp  $mirrorlist $backupMirrorlist
    echo -e "Your mirrorlist successfully backed up"
    

  fi

}

# End of the Backup Section 
################################################################################

function resetMirrors()
{

  #prompt user to be sure 
  clear
  echo "This will reset the original mirrorlist ... are you SURE you want to  do this?"
  read -p  "Yes(reset)/No(Abort) " resetMirrorChoice

  case $resetMirrorChoice in 

  [yY]|yes|YES) 

  # Backup current list (just in case)
  echo -e "Backing up current mirrors"
  sudo cp $mirrorlist /etc/pacman.d/mirrorlist.restoredfrom

  # retoring original list 
  echo -e "Resetting to default Mirrors"
  sudo cp $originalMirrorlist $mirrorlist

  ;; 

  [nN]|no|NO) 
    echo -e "nothing done, task aborted"
    return ;; 

  *) return ;; 

  esac


}

###################################################################################################
# Arch related 

function optimizeArchMirrors()
{


  clear
  echo -e "About to Optimize Pacman Mirrors, while backing up the current mirror list"

  sudo pacman -S reflector

  if [ -f $backupMirrorlist ]; then 
    sudo reflector --verbose --latest 10 --sort rate --save $mirrorlist

  elif [ -f  $originalMirrorlist ]; then 
    sudo reflector --verbose --latest 10 --sort rate --save $mirrorlist

  fi 

  # Force refresh 
  sudo pacman -Syy

}

function optimizeArchMirror()
{

  #Optimize mirrors
  optimizeArchMirrors

  echo -e "You do not seem to be on an Arch based distro "

}

## End Arch Section 
#######################################################################################



#######################################################################################
## Manjaro Related 

function optimizeManjaroMirror()
{
  clear 
  echo -e "About to run a command optimizing the download mirrors for Manjaro"
  sudo pacman-mirrors -f 0 && $refresh
  clear
  echo -e "Mirrors have been optimized and updated, successfully "
  userPrompt
}

function optimizeManjaroMirrorFastTrack()
{
  clear 
  echo -e "About to run a command optimizing the download mirrors for Manjaro, using the five fastest detected mirrors"
  sudo pacman-mirrors -f 5 && $refresh
  clear
  echo -e "Mirrors have been optimized and updated, successfully "
  userPrompt
}


## Do not use ... for now but keep the functionn 
function manjaroOptDBSpeed()
{
  #clear
  #echo -e "Attention: This command defragments Pacman's database, which boosts performance on slow hard drives but is harmful on SSDs. So, DO NOT use this command on SSDs! "
  #userPrompt 

  #sudo pacman-optimize && sync
  #userPrompt

  return 

}

## End Manjaro Section 
#####################################################################################
