function universalThemingMenu()
{
	# The idea is to have basic theme stuff here but not too much ... maybe my top 2 or 3 favorites ....
	# I DO have my theming git repo that i plan to "fill out" with themes but this is for a few really good themes
	# so people can do it from inside of these scripts/"this git repo" and not have to go do the other one for some of (my OPINION) THE BEST themes

	x=1

	while [[ $x=1 ]]; do
		clear
		echo -e "Theming Menu"
		echo -e "1. \t Install Adapta Theming"
		echo -e "2. \t Install Arc Theming"
		echo -e "3. \t Install Mint-Y Theming"
		echo -e "4. \t Install Numix Theming"
		echo -e "5. \t Install Plata Theming"
		echo -e "6. \t Install Yaru Theming"
		echo -e "7. \t Install Breeze Theming"

		echo
		echo -e "I. \t Install Misc. Icons"
		echo -e "T. \t Install Misc. Themes"
		echo -e "N. \t Add Noobslab Theme Related PPAs [for Ubuntu Based Distros ]"

		echo
		echo -e "A. \t Install All Listed Theming "

		read -p  "Your Choice?:" themingSelection

		case $themingSelection in


		1) adaptaThemeMetaInstall
		x=1	;;

		2) arcThemingMetaInstall
		x=1 ;;

		3) mintYThemingMetaInstall
		x=1 ;;

		4) nunixThemingMetaInstall
		x=1 ;;

		5) plataThemeMetaInstall
		x=1 ;;

		6) yaruThemeMetaInstall
			x=1 ;;

		7) breezeThemeMetaInstall
			x=1 ;;

		[iI]) miscIcons
			x=1 ;;

		[tT]) miscThemes
			x=1 ;;

		[nN]) noobslabThemes
			x=1 ;;


		[aA]) metaThemeInstall
		x=1
		;;

		esac

	done

}

###############################################################


function universalBrowserMenu()
{
	clear
	x=1

	while [[ $x=1 ]]; do

		echo -e "Web Browser Software Menu "
		echo -e  "1. \t Install Google Chrome"
		echo -e  "2. \t Install Chromium"
		echo -e  "3. \t Install Firefox"
		echo -e  "4. \t Install Vivaldi\n\n"

		read -p  "Your Choice?:" browserSelection

		case $browserSelection in

		## Inside the f_universalSoftware.cfg file
		1) chromeInstall
			x=1
			;;

		2) chromiumInstall
			x=1
			;;

		3) installFirefox
			x=1
			;;

		4) vivaldiInstall
			x=1
			;;

		esac

	done

}

#####################################################################################

function mutlimediaSoftwareMenu()
{

	x=1
	while [ $x=1 ]; do
	# clear
	
		echo -e 	"${bold}Multimedia Software Menu ${completeReset}"
		echo -e   	"Please Select Task \n"

		echo -e 	"1. \t Install MakeMKV"
		echo -e 	"2. \t Install Audio Recorder"
		echo -e 	"3.	 Install XNViewMP"
		echo -e 	"4. \t Install Deadbeef"
		echo -e 	"5. \t Install Celluloid (formerly Gnome-mpv)"
		echo -e 	"6. \t Install Strawberry Media Player (Clemintine Fork)"

		echo
		echo -e 	"Media Organization Apps"
		echo -e   	"7. \t Install Tiny Media Manager"
		echo -e 	"8. \t Install MediaElch"

		echo
		echo -e 	"K. \t Get most recent MakeMKV key information"

		echo -e  	"\vm. \tReturn to Main Menu"
		echo -e		"q. \tExit to Prompt \n\n"

		read -p "Your Choice?: " multimediaSoftwareSelection

		case $multimediaSoftwareSelection in

			1) installMakeMKV
				x=1 ;;

			2) installAudioRecorder
				x=1 ;;

			3) installXNViewMP
				x=1 ;;

			4) installDeadbeef
				x=1 ;;

			5) installCelluloid
				x=1 ;;

			6) installStrawberry
				x=1 ;;

			7) tinyMediaManagerInstall
				x=1 ;;

			8) installMediaElch
				x=1 ;;


			[kK]) makeMKVKeyInfo
				# needed since the menus wipe the key off the screen when they refresh
				userPrompt
				x=1 ;;

			[mM]) clear
					exit
					;;

			[qQ]) quitScript ;;

			*) invalidSection ;;

			esac

	done

}

##################################################################
function productivitySoftwareMenu()
{

	x=1

	while [ $x=1 ]; do

	clear
	echo -e   "Please Select Task \n"

	echo -e   "1. \t Install Atom Editor"
	echo -e	  "2. \t Install vscode"
	echo -e	  "3. \t Install GitKraken"

	echo -e   "4. \t Install Typora"

	echo -e  "\vm. \tReturn to Main Menu"
	echo -e	"q. \tExit to Prompt \n\n"

	read -p "Your Choice?: " productivitySelection

	case $productivitySelection in

		1) installAtom
			x=1 ;;

		2) installVSCode
			x=1 ;;

		3) installGitKraken
			x=1 ;; 


		4) installTypora
			x=1 ;;

		[mM]) clear
			exit
			;;

		[qQ]) quitScript ;;

		*) invalidSection ;;

		esac

	done

}

####################################################################################

function universalAppMenu()
{
	x=1
	clear
	while [ $x=1 ]; do

		clear
		echo -e "1. \tInstall Snap Support"
		echo -e "2. \tInstall Flatpak Support"
		echo -e "3. \tDisplay Universal App Support"
		read -p "Your Choice?: " universalAppMenuChoice

		case $universalAppMenuChoice in

			1)
				metaInstallSnapSupport
				userPrompt
				;;

			2)
				flatPakSupportInstall
				userPrompt
				;;

			3)	snapCheck
				flatpakCheck
				userPrompt
				;;

		esac
	done
}



#  main Software menu
function universalSoftwareMenu()
{
	x=1
	clear
	while [ $x=1 ]; do

	echo -e   "Please Select Task \n"

	echo -e   "1. \t Adds Common Software "
	echo -e   "2. \t ${bold}[Sub-Menu]${completeReset} Web Browsers"
	echo -e   "3. \t ${bold}[Sub-Menu]${completeReset} Office/Productivity/Programming-Related Software"
	echo -e   "4. \t ${bold}[Sub-Menu]${completeReset} Multimedia Programs"

	echo -e   "5. \t ${bold}[Sub-Menu]${completeReset} Specific tasks for certain distrobutions or version of said-distros"

	echo -e   "6. \t Install Build Essentials/Dev packages"
	echo -e   "7. \t Install-Extract Etcher"
	echo -e   "8. \t Install Oh-My-Fish, for the fish shell"
	echo -e   "9. \t Install PlayonLinux and Wine"
	echo -e   "10. \t Install Intel Microcode package"

	echo
	echo -e	 "U. \t ${bold}[Sub-Menu]${completeReset} Universal App Support (Snap and/or Flatpak)"

	echo -e  "\vm. \tReturn to Main Menu"
	echo -e	"q. \tExit to Prompt \n\n"

	read -p "Your Choice?: " ubuntuSelection

	case $ubuntuSelection in

		1)
			# location: /functions/universal/software/f_universalSoftware.cfg
			massSoftwareInstall
			x=1 ;;

		2) universalBrowserMenu
			x=1 ;;

		3) productivitySoftwareMenu
			x=1 ;;

		4) mutlimediaSoftwareMenu
			x=1 ;;

		5) # this contains (all i remember) basic setup stuff for ElementaryOS ... maybe i need to make this menu more specific
			## Location f_ubuntuMenus.cfg
			specificUbuntuSoftwareMenu
			x=1 ;;

		6) universalBuildEssentials
			x=1 ;;

		7) etcherInstall
			x=1 ;;

		8) metaInstallFishShell
			x=1 ;;

		9) wineInstall
			x=1 ;;

		10) installIntelMicroCode
			x=1 ;; 

		[uU]) universalAppMenu ;;


		[mM]) clear
				exit
				;;

		[qQ]) quitScript ;;

		*) invalidSection ;;

		esac

	done

}
