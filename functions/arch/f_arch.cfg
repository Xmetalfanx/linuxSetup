##########################################
# Functions to install AUR Helpers

function installYAY()
{
  # yay commands seem to be very similar to pacman's 
  
  gitURL="https://aur.archlinux.org/yay.git"

  gitCloneInstall $gitURL 
}

function installTrizen
{
  # Source: https://github.com/trizen/trizen
  gitURL="https://aur.archlinux.org/trizen.git"

  gitCloneInstall $gitURL

}

# End of AUR Helper Installation functions 
############################################################




##########################################
# AUR Support related 

# Lets user choose if yay and trizen is installed
function userChoiceAURHelper
{
  # Here we know yay and trizen are both installed 

  echo "trizen and yay are both detected"
  x=1

  while [ $x=1 ]; do

    echo -e "${bold}${underline}AUR Helper Selection Menu ${completeReset} \n"

    echo -e   "1. \t trizen"
    echo -e   "2. \t yay"

    # echo -e   "q. \t Exit to Prompt \n\n"
    read -p   "Your Choice?:" aurhelperSelection

    case $aurhelperSelection in

      1)    
          aurhelper="trizen"
          aurInstall="trizen $packageName" 
          
          x=0
          ;;

      2)   
          aurhelper="yay"
          aurInstall="yay -S $packageName" 
          
          x=0
      
      ;;

      # [qQ]) quitScript  ;;

      *) invalidSection ;;

      esac
  
  done

}


## Checks to see what helper might be installed
function checkAURSupport
{

  # should this take an arguement?...probably the package name
  # nonono .... there should be an aurInstall function that passes control here for the check 

  clear
  echo -e "To not mistakenly install the wrong AUR Package, I have it setup so you, the user has the choice of what to install when you are prompted, vs auto-installs happening "
  userPrompt

  # The idea is if aurhelper IS SET there is no reason to go through all of this 
  # reference/help: https://stackoverflow.com/questions/3601515/how-to-check-if-a-variable-is-set-in-bash
  
  ## ?? I think "is not set or is set and blank" ?? ... that's the idea anyway 
  if  [ -z ${aurhelper+x} ] 

      # if both yay and trizen are detected 

      if  [ command -v trizen ] && \
          [ command -v yay ]; then
        
        # both trizen and yay detected 
        userChoiceAURHelper

      # if only trizen is detected 
      elif [ command -v trizen ]; then 
        aurhelper="trizen"

        aurInstall="trizen $packageName"

      # if only yay is detected
      elif [ command -v yay ]; then 
        aurhelper="yay"

        aurInstall="yay -S $packageName"

      else
        else "no AUR support detected"
      fi 

  fi 

}
# End of AUR Support related 
##########################################

##################################################################################

##########################################
# Misc Functions 

function archiveSupport()
{

  clear
  echo "Adding Archive Support to Arch "

  ## A way to detected the DE is needed and and if/then loop below should work 

    # for the XFCE desktop use
    #installApp zlib p7zip unzip zip zziplib

    # 2019: use something other then 
      # yaourt -S engrampa-thunar

    # for the cinnamon desktop use
    #$install nemo-fileroller zlib p7zip unzip zip zziplib

    # for Gnome Desktop
    #$install file-roller zlib p7zip unzip zip zziplib

}


function soundSupport()
{

  ## Volume settings
  clear
  echo -e "Adding Sound Support to Arch"

  ## Volume settings

  ### "For XFCE"
  $install pavucontrol pulseaudio-alsa

  # For keyboard volume buttom usage
  yaourt -S xfce4-volumed

  echo "VolumeD settings will take effect after a reboot"

}

#################################
function installVirtualBox()
{

    clear
    echo -p "Installing VirtualBox"
    
    ## Hold on ... shouldn't archPacInstall be installApp 

    $install virtualbox virtualbox-host-dkms virtualbox-host-modules
    yaourt -S virtualbox-ext-oracle

    echo -p "\n\n Modprobing the Virtualbox Driver"
    sudo modprobe vboxdrv

    echo -p "Giving User Permissions to use features in Virtualbox"
    sudo gpasswd -a $USER vboxusers


    # To load the VirtualBox module at boot time, refer to Kernel_modules#Loading and create a *.conf with the line:
    # vboxdrv

    # in location
    # /etc/modules-load.d/virtualbox.conf

}

# End Misc Functions
###################################################
