# Displays AURHelper var to the user telling them what they would use
function aurHelperDisplay()
{

  echo "aurHelper at this point is: $aurHelper"
  userPrompt

}

# If  one exists, reads on Arch config file
function readArchSettings()
{
  if  [ -f $archSettingsFile ]; then
    grep "aurHelper" $archSettingsFile | cut -d = -f 2 | xargs

    aurHelperDisplay

  else
    # no arch config file

    ### Debugging Echo only
    echo -e "no Arch Config file detected"
    return

  fi
}

function assignTrizen()
{
  aurHelper="trizen"

  # not 100% sure on this being totally correct
  aurUpdate="trizen -Su"

}

function assignYay()
{
  aurHelper="yay"

  # --norebuild = do not rebuild if already built and cache is up to date

  aurUpdate="yay -Syu --norebuild --nodiffmenu --upgrademenu --noeditmenu"



}

# Export/Save aurHelper value to arch config file
function exportAURHelper()
{
  if [ ! -f "$archSettingsFile" ]; then
    touch $archSettingsFile
  fi

  echo -e "aurHelper=$aurHelper" > $archSettingsFile
}


## Function to determine if an AUR Helper is installed
function isAURHelperInstalled()
{

    # IF both are installed
    if  [ -f /usr/bin/yay ] && \
        [ -f /usr/bin/trizen ]; then

        # Check what the user wants to do

        echo -e "trizen and yay are both installed"
        userPrompt

        #lets the user choose what is default
        userChoiceAURHelperMenu

    ## if it gets to this step or the next ELIF
    elif [ -f /usr/bin/trizen ]; then
      assignTrizen

    elif [ -f /usr/bin/yay ]; then
      assignYay

    # if NEITHER is installed
    elif  [ ! -f /usr/bin/yay ] && \
          [ ! -f /usr/bin/trizen ]; then

        echo -e "Neither trizen or yay detected "
        userPrompt

        #lets the user choose what is default
        userChoiceAURHelperMenu
    fi

    aurHelperDisplay


    ### Install using AURHelper Trizen or yay
    # the same for trizen or yay
    aurInstall="$aurHelper -S $@"
}

function AURHelperCheck
{
    ## ?? wait .... shouldn't this be in a more generic location?
    readArchSettings

    # If aurHelper is not set, check to see if there is an aurHelper installed anyway
    if  [ -z ${aurHelper+x} ]; then

      isAURHelperInstalled

    fi

}

###################################################################
#################
# I think this is the Meta package
function aurAppInstall()
{
    ## $1 = package name
    ## one of the two can accept mutiple vars (to install at the same time ... can both? )

    # Check for aurHelper var
        # This controls if yay or trizen is used
    AURHelperCheck

    #install based on aurHelper
    $aurHelper -S $1

}