
# Test function for now 
function awkOSdetails()
{


  # Not happy with var name
  awkOutput=$2

  # $1 is what i use to grep from this file 
  # the sed removes any double quotes if they are present (some distro's have it, some don't)
  # /$1/ is like grep 

  $awkOutput=$(awk -F "=" '/$1/ {print $2} ' /etc/os-release | sed 's/\"//g')

  #test
  echo -e "awkOutput:$awkOutput"
  userPrompt


}


function osreleaseInfoAwk()
{
  
  # What is in caps and starts with ^ is what I use to grep IN the os-release file
  # the other stuff you see here say "idLike" or "versionid" are the variables i would like to assign this output too 

  # This new way of doing thing with awk is sort of a work in progress, and a learning curve for me. 

  #awkOSrelease "^NAME=" name
  #awkOSrelease "^ID_LIKE=" idLike
  #awkOSrelease ^ID= id
  #awkOSrelease ^VERSION_ID= versionid
  #awkOSrelease ^VERSION= version
  #awkOSrelease ^UBUNTU_CODENAME= ubuntuName

  #name=$(${awkOSrelease} ^NAME=)
  #idLike=$(${awkOSrelease} ^ID_LIKE=)
  #id=$(${awkOSrelease} ^ID=)
  #versionid=$(${awkOSrelease} ^VERSION_ID=)
  #version=$(${awkOSrelease} ^VERSION=)
  #ubuntuName=$(${awkOSrelease} ^UBUNTU_CODENAME=)

  ## Test only 
  #osReleaseinfoOutput

  return 
}