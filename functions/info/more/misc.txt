
## Old way using the cut command
# Leave for now
function osreleaseInfoCut()
{
  OSRELEASE_NAME=$(grep "^NAME=" /etc/os-release | cut -d '=' -f 2 | sed 's/\"//g' )
  OSRELEASE_IDLIKE=$(grep "^ID_LIKE=" /etc/os-release | cut -d '=' -f 2 | sed 's/\"//g' )
  OSRELEASE_ID=$(grep "^ID=" /etc/os-release | cut -d '=' -f 2 | sed 's/\"//g' )
  OSRELEASE_VERSIONID=$(grep "^VERSION_ID=" /etc/os-release | cut -d '=' -f 2 | sed 's/\"//g')
  OSRELEASE_VERSION=$(grep "^VERSION=" /etc/os-release | cut -d '=' -f 2 | sed 's/\"//g' )
  
  # Consider this to the Ubuntu specific check function
  OSRELEASE_UBUNTU_CODENAME=$(grep "^UBUNTU_CODENAME="  /etc/os-release | cut -d '=' -f 2 | sed 's/\"//g' )


  return
}

function osreleaseInfo()
{
  OSRELEASE_NAME=$(awk -F= '/^NAME=/ { print $2 }' /etc/os-release | tr -d \" )

  OSRELEASE_IDLIKE=$(awk -F= '/^ID_LIKE=/ { print $2 }' /etc/os-release | tr -d \" )
  OSRELEASE_ID=$(awk -F= '/^ID=/ { print $2 }' /etc/os-release | tr -d \" )
  OSRELEASE_VERSIONID=$(awk -F= '/^VERSION_ID=/ { print $2 }' /etc/os-release | tr -d \" )
  OSRELEASE_VERSION=$(awk -F= '/^VERSION=/ { print $2 }' /etc/os-release | tr -d \" )

}


# Gets info from os-release file in the /etc directory
function osreleaseInfoFunction()
{
  getOSReleaseFileInfo "^NAME=" "OSRELEASE_NAME"
  getOSReleaseFileInfo "^ID_LIKE=" "OSRELEASE_IDLIKE"

  getOSReleaseFileInfo "^ID=" "OSRELEASE_ID="
  getOSReleaseFileInfo "^VERSION_ID=" "OSRELEASE_VERSIONID"
  getOSReleaseFileInfo "^VERSION" "OSRELEASE_VERSION"
}